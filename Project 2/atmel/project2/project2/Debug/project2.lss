
project2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800200  00001580  00001614  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001580  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000c7e  00800212  00800212  00001626  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001626  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000200  00000000  00000000  00001682  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 0000013e  00000000  00000000  00001882  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001ebd  00000000  00000000  000019c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b39  00000000  00000000  0000387d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001441  00000000  00000000  000043b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000470  00000000  00000000  000057f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000c38  00000000  00000000  00005c68  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000010d6  00000000  00000000  000068a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001f8  00000000  00000000  00007976  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	8b c0       	rjmp	.+278    	; 0x124 <__bad_interrupt>
       e:	00 00       	nop
      10:	89 c0       	rjmp	.+274    	; 0x124 <__bad_interrupt>
      12:	00 00       	nop
      14:	87 c0       	rjmp	.+270    	; 0x124 <__bad_interrupt>
      16:	00 00       	nop
      18:	85 c0       	rjmp	.+266    	; 0x124 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	f2 c1       	rjmp	.+996    	; 0x42a <__vector_17>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	63 c0       	rjmp	.+198    	; 0x124 <__bad_interrupt>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	2f c6       	rjmp	.+3166   	; 0xcc4 <__vector_25>
      66:	00 00       	nop
      68:	5d c0       	rjmp	.+186    	; 0x124 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	49 c0       	rjmp	.+146    	; 0x124 <__bad_interrupt>
      92:	00 00       	nop
      94:	47 c0       	rjmp	.+142    	; 0x124 <__bad_interrupt>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2b c0       	rjmp	.+86     	; 0x124 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	29 c0       	rjmp	.+82     	; 0x124 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	25 c0       	rjmp	.+74     	; 0x124 <__bad_interrupt>
      da:	00 00       	nop
      dc:	23 c0       	rjmp	.+70     	; 0x124 <__bad_interrupt>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e0 e8       	ldi	r30, 0x80	; 128
      fc:	f5 e1       	ldi	r31, 0x15	; 21
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a2 31       	cpi	r26, 0x12	; 18
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	2e e0       	ldi	r18, 0x0E	; 14
     110:	a2 e1       	ldi	r26, 0x12	; 18
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a0 39       	cpi	r26, 0x90	; 144
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	d2 d4       	rcall	.+2468   	; 0xac4 <main>
     120:	0c 94 be 0a 	jmp	0x157c	; 0x157c <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <_ZL4idlev>:
     126:	ff cf       	rjmp	.-2      	; 0x126 <_ZL4idlev>

00000128 <_ZL11exit_kernelv>:
     128:	ff 93       	push	r31
     12a:	fc b7       	in	r31, 0x3c	; 60
     12c:	ff 93       	push	r31
     12e:	ff b7       	in	r31, 0x3f	; 63
     130:	f8 94       	cli
     132:	ff 93       	push	r31
     134:	ef 93       	push	r30
     136:	df 93       	push	r29
     138:	cf 93       	push	r28
     13a:	bf 93       	push	r27
     13c:	af 93       	push	r26
     13e:	9f 93       	push	r25
     140:	8f 93       	push	r24
     142:	7f 93       	push	r23
     144:	6f 93       	push	r22
     146:	5f 93       	push	r21
     148:	4f 93       	push	r20
     14a:	3f 93       	push	r19
     14c:	2f 93       	push	r18
     14e:	1f 93       	push	r17
     150:	0f 93       	push	r16
     152:	ff 92       	push	r15
     154:	ef 92       	push	r14
     156:	df 92       	push	r13
     158:	cf 92       	push	r12
     15a:	bf 92       	push	r11
     15c:	af 92       	push	r10
     15e:	9f 92       	push	r9
     160:	8f 92       	push	r8
     162:	7f 92       	push	r7
     164:	6f 92       	push	r6
     166:	5f 92       	push	r5
     168:	4f 92       	push	r4
     16a:	3f 92       	push	r3
     16c:	2f 92       	push	r2
     16e:	1f 92       	push	r1
     170:	0f 92       	push	r0
     172:	8d b7       	in	r24, 0x3d	; 61
     174:	9e b7       	in	r25, 0x3e	; 62
     176:	90 93 fc 0b 	sts	0x0BFC, r25
     17a:	80 93 fb 0b 	sts	0x0BFB, r24
     17e:	e0 91 fd 0b 	lds	r30, 0x0BFD
     182:	f0 91 fe 0b 	lds	r31, 0x0BFE
     186:	f3 95       	inc	r31
     188:	80 81       	ld	r24, Z
     18a:	91 81       	ldd	r25, Z+1	; 0x01
     18c:	9e bf       	out	0x3e, r25	; 62
     18e:	8d bf       	out	0x3d, r24	; 61
     190:	0f 90       	pop	r0
     192:	1f 90       	pop	r1
     194:	2f 90       	pop	r2
     196:	3f 90       	pop	r3
     198:	4f 90       	pop	r4
     19a:	5f 90       	pop	r5
     19c:	6f 90       	pop	r6
     19e:	7f 90       	pop	r7
     1a0:	8f 90       	pop	r8
     1a2:	9f 90       	pop	r9
     1a4:	af 90       	pop	r10
     1a6:	bf 90       	pop	r11
     1a8:	cf 90       	pop	r12
     1aa:	df 90       	pop	r13
     1ac:	ef 90       	pop	r14
     1ae:	ff 90       	pop	r15
     1b0:	0f 91       	pop	r16
     1b2:	1f 91       	pop	r17
     1b4:	2f 91       	pop	r18
     1b6:	3f 91       	pop	r19
     1b8:	4f 91       	pop	r20
     1ba:	5f 91       	pop	r21
     1bc:	6f 91       	pop	r22
     1be:	7f 91       	pop	r23
     1c0:	8f 91       	pop	r24
     1c2:	9f 91       	pop	r25
     1c4:	af 91       	pop	r26
     1c6:	bf 91       	pop	r27
     1c8:	cf 91       	pop	r28
     1ca:	df 91       	pop	r29
     1cc:	ef 91       	pop	r30
     1ce:	ff 91       	pop	r31
     1d0:	ff bf       	out	0x3f, r31	; 63
     1d2:	ff 91       	pop	r31
     1d4:	fc bf       	out	0x3c, r31	; 60
     1d6:	ff 91       	pop	r31
     1d8:	08 95       	ret

000001da <_ZL12enter_kernelv>:
     1da:	ff 93       	push	r31
     1dc:	fc b7       	in	r31, 0x3c	; 60
     1de:	ff 93       	push	r31
     1e0:	ff b7       	in	r31, 0x3f	; 63
     1e2:	f8 94       	cli
     1e4:	ff 93       	push	r31
     1e6:	ef 93       	push	r30
     1e8:	df 93       	push	r29
     1ea:	cf 93       	push	r28
     1ec:	bf 93       	push	r27
     1ee:	af 93       	push	r26
     1f0:	9f 93       	push	r25
     1f2:	8f 93       	push	r24
     1f4:	7f 93       	push	r23
     1f6:	6f 93       	push	r22
     1f8:	5f 93       	push	r21
     1fa:	4f 93       	push	r20
     1fc:	3f 93       	push	r19
     1fe:	2f 93       	push	r18
     200:	1f 93       	push	r17
     202:	0f 93       	push	r16
     204:	ff 92       	push	r15
     206:	ef 92       	push	r14
     208:	df 92       	push	r13
     20a:	cf 92       	push	r12
     20c:	bf 92       	push	r11
     20e:	af 92       	push	r10
     210:	9f 92       	push	r9
     212:	8f 92       	push	r8
     214:	7f 92       	push	r7
     216:	6f 92       	push	r6
     218:	5f 92       	push	r5
     21a:	4f 92       	push	r4
     21c:	3f 92       	push	r3
     21e:	2f 92       	push	r2
     220:	1f 92       	push	r1
     222:	0f 92       	push	r0
     224:	e0 91 fd 0b 	lds	r30, 0x0BFD
     228:	f0 91 fe 0b 	lds	r31, 0x0BFE
     22c:	8d b7       	in	r24, 0x3d	; 61
     22e:	9e b7       	in	r25, 0x3e	; 62
     230:	f3 95       	inc	r31
     232:	91 83       	std	Z+1, r25	; 0x01
     234:	80 83       	st	Z, r24
     236:	80 91 fb 0b 	lds	r24, 0x0BFB
     23a:	90 91 fc 0b 	lds	r25, 0x0BFC
     23e:	9e bf       	out	0x3e, r25	; 62
     240:	8d bf       	out	0x3d, r24	; 61
     242:	0f 90       	pop	r0
     244:	1f 90       	pop	r1
     246:	2f 90       	pop	r2
     248:	3f 90       	pop	r3
     24a:	4f 90       	pop	r4
     24c:	5f 90       	pop	r5
     24e:	6f 90       	pop	r6
     250:	7f 90       	pop	r7
     252:	8f 90       	pop	r8
     254:	9f 90       	pop	r9
     256:	af 90       	pop	r10
     258:	bf 90       	pop	r11
     25a:	cf 90       	pop	r12
     25c:	df 90       	pop	r13
     25e:	ef 90       	pop	r14
     260:	ff 90       	pop	r15
     262:	0f 91       	pop	r16
     264:	1f 91       	pop	r17
     266:	2f 91       	pop	r18
     268:	3f 91       	pop	r19
     26a:	4f 91       	pop	r20
     26c:	5f 91       	pop	r21
     26e:	6f 91       	pop	r22
     270:	7f 91       	pop	r23
     272:	8f 91       	pop	r24
     274:	9f 91       	pop	r25
     276:	af 91       	pop	r26
     278:	bf 91       	pop	r27
     27a:	cf 91       	pop	r28
     27c:	df 91       	pop	r29
     27e:	ef 91       	pop	r30
     280:	ff 91       	pop	r31
     282:	ff bf       	out	0x3f, r31	; 63
     284:	ff 91       	pop	r31
     286:	fc bf       	out	0x3c, r31	; 60
     288:	ff 91       	pop	r31
     28a:	08 95       	ret

0000028c <_ZL7enqueueP7queue_tP9td_struct>:
     28c:	fc 01       	movw	r30, r24
     28e:	db 01       	movw	r26, r22
     290:	a0 5f       	subi	r26, 0xF0	; 240
     292:	be 4f       	sbci	r27, 0xFE	; 254
     294:	1d 92       	st	X+, r1
     296:	1c 92       	st	X, r1
     298:	80 81       	ld	r24, Z
     29a:	91 81       	ldd	r25, Z+1	; 0x01
     29c:	89 2b       	or	r24, r25
     29e:	19 f4       	brne	.+6      	; 0x2a6 <_ZL7enqueueP7queue_tP9td_struct+0x1a>
     2a0:	71 83       	std	Z+1, r23	; 0x01
     2a2:	60 83       	st	Z, r22
     2a4:	06 c0       	rjmp	.+12     	; 0x2b2 <_ZL7enqueueP7queue_tP9td_struct+0x26>
     2a6:	a2 81       	ldd	r26, Z+2	; 0x02
     2a8:	b3 81       	ldd	r27, Z+3	; 0x03
     2aa:	a0 5f       	subi	r26, 0xF0	; 240
     2ac:	be 4f       	sbci	r27, 0xFE	; 254
     2ae:	6d 93       	st	X+, r22
     2b0:	7c 93       	st	X, r23
     2b2:	73 83       	std	Z+3, r23	; 0x03
     2b4:	62 83       	std	Z+2, r22	; 0x02
     2b6:	08 95       	ret

000002b8 <Task_Terminate>:
     2b8:	cf 93       	push	r28
     2ba:	cf b7       	in	r28, 0x3f	; 63
     2bc:	f8 94       	cli
     2be:	83 e0       	ldi	r24, 0x03	; 3
     2c0:	80 93 46 02 	sts	0x0246, r24
     2c4:	8a df       	rcall	.-236    	; 0x1da <_ZL12enter_kernelv>
     2c6:	cf bf       	out	0x3f, r28	; 63
     2c8:	cf 91       	pop	r28
     2ca:	08 95       	ret

000002cc <_ZL7dequeueP7queue_t.isra.1>:
     2cc:	dc 01       	movw	r26, r24
     2ce:	8d 91       	ld	r24, X+
     2d0:	9c 91       	ld	r25, X
     2d2:	11 97       	sbiw	r26, 0x01	; 1
     2d4:	00 97       	sbiw	r24, 0x00	; 0
     2d6:	49 f0       	breq	.+18     	; 0x2ea <_ZL7dequeueP7queue_t.isra.1+0x1e>
     2d8:	fc 01       	movw	r30, r24
     2da:	e0 5f       	subi	r30, 0xF0	; 240
     2dc:	fe 4f       	sbci	r31, 0xFE	; 254
     2de:	20 81       	ld	r18, Z
     2e0:	31 81       	ldd	r19, Z+1	; 0x01
     2e2:	2d 93       	st	X+, r18
     2e4:	3c 93       	st	X, r19
     2e6:	11 82       	std	Z+1, r1	; 0x01
     2e8:	10 82       	st	Z, r1
     2ea:	08 95       	ret

000002ec <_ZL18kernel_create_taskv>:
     2ec:	80 91 31 02 	lds	r24, 0x0231
     2f0:	90 91 32 02 	lds	r25, 0x0232
     2f4:	89 2b       	or	r24, r25
     2f6:	09 f4       	brne	.+2      	; 0x2fa <_ZL18kernel_create_taskv+0xe>
     2f8:	92 c0       	rjmp	.+292    	; 0x41e <_ZL18kernel_create_taskv+0x132>
     2fa:	80 91 3b 02 	lds	r24, 0x023B
     2fe:	88 23       	and	r24, r24
     300:	29 f0       	breq	.+10     	; 0x30c <_ZL18kernel_create_taskv+0x20>
     302:	81 e3       	ldi	r24, 0x31	; 49
     304:	92 e0       	ldi	r25, 0x02	; 2
     306:	e2 df       	rcall	.-60     	; 0x2cc <_ZL7dequeueP7queue_t.isra.1>
     308:	bc 01       	movw	r22, r24
     30a:	02 c0       	rjmp	.+4      	; 0x310 <_ZL18kernel_create_taskv+0x24>
     30c:	67 ee       	ldi	r22, 0xE7	; 231
     30e:	7a e0       	ldi	r23, 0x0A	; 10
     310:	fb 01       	movw	r30, r22
     312:	e7 52       	subi	r30, 0x27	; 39
     314:	ff 4f       	sbci	r31, 0xFF	; 255
     316:	10 82       	st	Z, r1
     318:	80 e8       	ldi	r24, 0x80	; 128
     31a:	7e 96       	adiw	r30, 0x1e	; 30
     31c:	80 83       	st	Z, r24
     31e:	33 96       	adiw	r30, 0x03	; 3
     320:	10 82       	st	Z, r1
     322:	80 91 37 02 	lds	r24, 0x0237
     326:	90 91 38 02 	lds	r25, 0x0238
     32a:	31 96       	adiw	r30, 0x01	; 1
     32c:	90 83       	st	Z, r25
     32e:	80 91 37 02 	lds	r24, 0x0237
     332:	90 91 38 02 	lds	r25, 0x0238
     336:	31 96       	adiw	r30, 0x01	; 1
     338:	80 83       	st	Z, r24
     33a:	31 96       	adiw	r30, 0x01	; 1
     33c:	10 82       	st	Z, r1
     33e:	8c e5       	ldi	r24, 0x5C	; 92
     340:	91 e0       	ldi	r25, 0x01	; 1
     342:	31 96       	adiw	r30, 0x01	; 1
     344:	90 83       	st	Z, r25
     346:	31 96       	adiw	r30, 0x01	; 1
     348:	80 83       	st	Z, r24
     34a:	31 96       	adiw	r30, 0x01	; 1
     34c:	cb 01       	movw	r24, r22
     34e:	89 52       	subi	r24, 0x29	; 41
     350:	9f 4f       	sbci	r25, 0xFF	; 255
     352:	91 83       	std	Z+1, r25	; 0x01
     354:	80 83       	st	Z, r24
     356:	82 e0       	ldi	r24, 0x02	; 2
     358:	3c 96       	adiw	r30, 0x0c	; 12
     35a:	80 83       	st	Z, r24
     35c:	80 91 39 02 	lds	r24, 0x0239
     360:	90 91 3a 02 	lds	r25, 0x023A
     364:	31 96       	adiw	r30, 0x01	; 1
     366:	91 83       	std	Z+1, r25	; 0x01
     368:	80 83       	st	Z, r24
     36a:	80 91 3b 02 	lds	r24, 0x023B
     36e:	32 96       	adiw	r30, 0x02	; 2
     370:	80 83       	st	Z, r24
     372:	80 91 40 02 	lds	r24, 0x0240
     376:	90 91 41 02 	lds	r25, 0x0241
     37a:	39 97       	sbiw	r30, 0x09	; 9
     37c:	91 83       	std	Z+1, r25	; 0x01
     37e:	80 83       	st	Z, r24
     380:	80 91 42 02 	lds	r24, 0x0242
     384:	90 91 43 02 	lds	r25, 0x0243
     388:	32 96       	adiw	r30, 0x02	; 2
     38a:	91 83       	std	Z+1, r25	; 0x01
     38c:	80 83       	st	Z, r24
     38e:	80 91 44 02 	lds	r24, 0x0244
     392:	90 91 45 02 	lds	r25, 0x0245
     396:	32 96       	adiw	r30, 0x02	; 2
     398:	91 83       	std	Z+1, r25	; 0x01
     39a:	80 83       	st	Z, r24
     39c:	80 91 3c 02 	lds	r24, 0x023C
     3a0:	90 91 3d 02 	lds	r25, 0x023D
     3a4:	36 97       	sbiw	r30, 0x06	; 6
     3a6:	91 83       	std	Z+1, r25	; 0x01
     3a8:	80 83       	st	Z, r24
     3aa:	80 91 3e 02 	lds	r24, 0x023E
     3ae:	90 91 3f 02 	lds	r25, 0x023F
     3b2:	32 97       	sbiw	r30, 0x02	; 2
     3b4:	91 83       	std	Z+1, r25	; 0x01
     3b6:	80 83       	st	Z, r24
     3b8:	80 91 3b 02 	lds	r24, 0x023B
     3bc:	82 30       	cpi	r24, 0x02	; 2
     3be:	51 f0       	breq	.+20     	; 0x3d4 <_ZL18kernel_create_taskv+0xe8>
     3c0:	83 30       	cpi	r24, 0x03	; 3
     3c2:	29 f0       	breq	.+10     	; 0x3ce <_ZL18kernel_create_taskv+0xe2>
     3c4:	81 30       	cpi	r24, 0x01	; 1
     3c6:	71 f5       	brne	.+92     	; 0x424 <_ZL18kernel_create_taskv+0x138>
     3c8:	8d e2       	ldi	r24, 0x2D	; 45
     3ca:	92 e0       	ldi	r25, 0x02	; 2
     3cc:	26 c0       	rjmp	.+76     	; 0x41a <_ZL18kernel_create_taskv+0x12e>
     3ce:	85 e2       	ldi	r24, 0x25	; 37
     3d0:	92 e0       	ldi	r25, 0x02	; 2
     3d2:	23 c0       	rjmp	.+70     	; 0x41a <_ZL18kernel_create_taskv+0x12e>
     3d4:	fb 01       	movw	r30, r22
     3d6:	e0 5f       	subi	r30, 0xF0	; 240
     3d8:	fe 4f       	sbci	r31, 0xFE	; 254
     3da:	11 82       	std	Z+1, r1	; 0x01
     3dc:	10 82       	st	Z, r1
     3de:	80 91 29 02 	lds	r24, 0x0229
     3e2:	90 91 2a 02 	lds	r25, 0x022A
     3e6:	32 96       	adiw	r30, 0x02	; 2
     3e8:	89 2b       	or	r24, r25
     3ea:	39 f4       	brne	.+14     	; 0x3fa <_ZL18kernel_create_taskv+0x10e>
     3ec:	11 82       	std	Z+1, r1	; 0x01
     3ee:	10 82       	st	Z, r1
     3f0:	70 93 2a 02 	sts	0x022A, r23
     3f4:	60 93 29 02 	sts	0x0229, r22
     3f8:	0b c0       	rjmp	.+22     	; 0x410 <_ZL18kernel_create_taskv+0x124>
     3fa:	80 91 2b 02 	lds	r24, 0x022B
     3fe:	90 91 2c 02 	lds	r25, 0x022C
     402:	dc 01       	movw	r26, r24
     404:	a0 5f       	subi	r26, 0xF0	; 240
     406:	be 4f       	sbci	r27, 0xFE	; 254
     408:	6d 93       	st	X+, r22
     40a:	7c 93       	st	X, r23
     40c:	91 83       	std	Z+1, r25	; 0x01
     40e:	80 83       	st	Z, r24
     410:	70 93 2c 02 	sts	0x022C, r23
     414:	60 93 2b 02 	sts	0x022B, r22
     418:	05 c0       	rjmp	.+10     	; 0x424 <_ZL18kernel_create_taskv+0x138>
     41a:	38 df       	rcall	.-400    	; 0x28c <_ZL7enqueueP7queue_tP9td_struct>
     41c:	03 c0       	rjmp	.+6      	; 0x424 <_ZL18kernel_create_taskv+0x138>
     41e:	80 e0       	ldi	r24, 0x00	; 0
     420:	90 e0       	ldi	r25, 0x00	; 0
     422:	08 95       	ret
     424:	81 e0       	ldi	r24, 0x01	; 1
     426:	90 e0       	ldi	r25, 0x00	; 0
     428:	08 95       	ret

0000042a <__vector_17>:
     42a:	ff 93       	push	r31
     42c:	fc b7       	in	r31, 0x3c	; 60
     42e:	ff 93       	push	r31
     430:	ff b7       	in	r31, 0x3f	; 63
     432:	f8 94       	cli
     434:	f0 68       	ori	r31, 0x80	; 128
     436:	ff 93       	push	r31
     438:	ef 93       	push	r30
     43a:	df 93       	push	r29
     43c:	cf 93       	push	r28
     43e:	bf 93       	push	r27
     440:	af 93       	push	r26
     442:	9f 93       	push	r25
     444:	8f 93       	push	r24
     446:	7f 93       	push	r23
     448:	6f 93       	push	r22
     44a:	5f 93       	push	r21
     44c:	4f 93       	push	r20
     44e:	3f 93       	push	r19
     450:	2f 93       	push	r18
     452:	1f 93       	push	r17
     454:	0f 93       	push	r16
     456:	ff 92       	push	r15
     458:	ef 92       	push	r14
     45a:	df 92       	push	r13
     45c:	cf 92       	push	r12
     45e:	bf 92       	push	r11
     460:	af 92       	push	r10
     462:	9f 92       	push	r9
     464:	8f 92       	push	r8
     466:	7f 92       	push	r7
     468:	6f 92       	push	r6
     46a:	5f 92       	push	r5
     46c:	4f 92       	push	r4
     46e:	3f 92       	push	r3
     470:	2f 92       	push	r2
     472:	1f 92       	push	r1
     474:	0f 92       	push	r0
     476:	e0 91 fd 0b 	lds	r30, 0x0BFD
     47a:	f0 91 fe 0b 	lds	r31, 0x0BFE
     47e:	8d b7       	in	r24, 0x3d	; 61
     480:	9e b7       	in	r25, 0x3e	; 62
     482:	f3 95       	inc	r31
     484:	91 83       	std	Z+1, r25	; 0x01
     486:	80 83       	st	Z, r24
     488:	80 91 fb 0b 	lds	r24, 0x0BFB
     48c:	90 91 fc 0b 	lds	r25, 0x0BFC
     490:	9e bf       	out	0x3e, r25	; 62
     492:	8d bf       	out	0x3d, r24	; 61
     494:	81 e0       	ldi	r24, 0x01	; 1
     496:	80 93 46 02 	sts	0x0246, r24
     49a:	e8 e8       	ldi	r30, 0x88	; 136
     49c:	f0 e0       	ldi	r31, 0x00	; 0
     49e:	80 81       	ld	r24, Z
     4a0:	91 81       	ldd	r25, Z+1	; 0x01
     4a2:	80 5f       	subi	r24, 0xF0	; 240
     4a4:	98 4d       	sbci	r25, 0xD8	; 216
     4a6:	91 83       	std	Z+1, r25	; 0x01
     4a8:	80 83       	st	Z, r24
     4aa:	80 91 fb 0b 	lds	r24, 0x0BFB
     4ae:	90 91 fc 0b 	lds	r25, 0x0BFC
     4b2:	9e bf       	out	0x3e, r25	; 62
     4b4:	8d bf       	out	0x3d, r24	; 61
     4b6:	0f 90       	pop	r0
     4b8:	1f 90       	pop	r1
     4ba:	2f 90       	pop	r2
     4bc:	3f 90       	pop	r3
     4be:	4f 90       	pop	r4
     4c0:	5f 90       	pop	r5
     4c2:	6f 90       	pop	r6
     4c4:	7f 90       	pop	r7
     4c6:	8f 90       	pop	r8
     4c8:	9f 90       	pop	r9
     4ca:	af 90       	pop	r10
     4cc:	bf 90       	pop	r11
     4ce:	cf 90       	pop	r12
     4d0:	df 90       	pop	r13
     4d2:	ef 90       	pop	r14
     4d4:	ff 90       	pop	r15
     4d6:	0f 91       	pop	r16
     4d8:	1f 91       	pop	r17
     4da:	2f 91       	pop	r18
     4dc:	3f 91       	pop	r19
     4de:	4f 91       	pop	r20
     4e0:	5f 91       	pop	r21
     4e2:	6f 91       	pop	r22
     4e4:	7f 91       	pop	r23
     4e6:	8f 91       	pop	r24
     4e8:	9f 91       	pop	r25
     4ea:	af 91       	pop	r26
     4ec:	bf 91       	pop	r27
     4ee:	cf 91       	pop	r28
     4f0:	df 91       	pop	r29
     4f2:	ef 91       	pop	r30
     4f4:	ff 91       	pop	r31
     4f6:	ff bf       	out	0x3f, r31	; 63
     4f8:	ff 91       	pop	r31
     4fa:	fc bf       	out	0x3c, r31	; 60
     4fc:	ff 91       	pop	r31
     4fe:	08 95       	ret

00000500 <OS_Abort>:
     500:	f8 94       	cli
     502:	80 e6       	ldi	r24, 0x60	; 96
     504:	80 93 01 01 	sts	0x0101, r24
     508:	80 91 00 02 	lds	r24, 0x0200
     50c:	86 30       	cpi	r24, 0x06	; 6
     50e:	28 f4       	brcc	.+10     	; 0x51a <OS_Abort+0x1a>
     510:	80 91 00 02 	lds	r24, 0x0200
     514:	8f 5f       	subi	r24, 0xFF	; 255
     516:	30 e4       	ldi	r19, 0x40	; 64
     518:	04 c0       	rjmp	.+8      	; 0x522 <OS_Abort+0x22>
     51a:	80 91 00 02 	lds	r24, 0x0200
     51e:	85 50       	subi	r24, 0x05	; 5
     520:	30 e2       	ldi	r19, 0x20	; 32
     522:	40 e6       	ldi	r20, 0x60	; 96
     524:	40 93 02 01 	sts	0x0102, r20
     528:	94 e6       	ldi	r25, 0x64	; 100
     52a:	2f e7       	ldi	r18, 0x7F	; 127
     52c:	58 e3       	ldi	r21, 0x38	; 56
     52e:	61 e0       	ldi	r22, 0x01	; 1
     530:	21 50       	subi	r18, 0x01	; 1
     532:	50 40       	sbci	r21, 0x00	; 0
     534:	60 40       	sbci	r22, 0x00	; 0
     536:	e1 f7       	brne	.-8      	; 0x530 <OS_Abort+0x30>
     538:	00 c0       	rjmp	.+0      	; 0x53a <OS_Abort+0x3a>
     53a:	00 00       	nop
     53c:	91 50       	subi	r25, 0x01	; 1
     53e:	a9 f7       	brne	.-22     	; 0x52a <OS_Abort+0x2a>
     540:	10 92 02 01 	sts	0x0102, r1
     544:	98 e2       	ldi	r25, 0x28	; 40
     546:	7f e7       	ldi	r23, 0x7F	; 127
     548:	28 e3       	ldi	r18, 0x38	; 56
     54a:	51 e0       	ldi	r21, 0x01	; 1
     54c:	71 50       	subi	r23, 0x01	; 1
     54e:	20 40       	sbci	r18, 0x00	; 0
     550:	50 40       	sbci	r21, 0x00	; 0
     552:	e1 f7       	brne	.-8      	; 0x54c <OS_Abort+0x4c>
     554:	00 c0       	rjmp	.+0      	; 0x556 <OS_Abort+0x56>
     556:	00 00       	nop
     558:	91 50       	subi	r25, 0x01	; 1
     55a:	a9 f7       	brne	.-22     	; 0x546 <OS_Abort+0x46>
     55c:	98 17       	cp	r25, r24
     55e:	f1 f0       	breq	.+60     	; 0x59c <OS_Abort+0x9c>
     560:	30 93 02 01 	sts	0x0102, r19
     564:	2a e0       	ldi	r18, 0x0A	; 10
     566:	6f e7       	ldi	r22, 0x7F	; 127
     568:	78 e3       	ldi	r23, 0x38	; 56
     56a:	51 e0       	ldi	r21, 0x01	; 1
     56c:	61 50       	subi	r22, 0x01	; 1
     56e:	70 40       	sbci	r23, 0x00	; 0
     570:	50 40       	sbci	r21, 0x00	; 0
     572:	e1 f7       	brne	.-8      	; 0x56c <OS_Abort+0x6c>
     574:	00 c0       	rjmp	.+0      	; 0x576 <OS_Abort+0x76>
     576:	00 00       	nop
     578:	21 50       	subi	r18, 0x01	; 1
     57a:	a9 f7       	brne	.-22     	; 0x566 <OS_Abort+0x66>
     57c:	10 92 02 01 	sts	0x0102, r1
     580:	2a e0       	ldi	r18, 0x0A	; 10
     582:	6f e7       	ldi	r22, 0x7F	; 127
     584:	78 e3       	ldi	r23, 0x38	; 56
     586:	51 e0       	ldi	r21, 0x01	; 1
     588:	61 50       	subi	r22, 0x01	; 1
     58a:	70 40       	sbci	r23, 0x00	; 0
     58c:	50 40       	sbci	r21, 0x00	; 0
     58e:	e1 f7       	brne	.-8      	; 0x588 <OS_Abort+0x88>
     590:	00 c0       	rjmp	.+0      	; 0x592 <OS_Abort+0x92>
     592:	00 00       	nop
     594:	21 50       	subi	r18, 0x01	; 1
     596:	a9 f7       	brne	.-22     	; 0x582 <OS_Abort+0x82>
     598:	9f 5f       	subi	r25, 0xFF	; 255
     59a:	e0 cf       	rjmp	.-64     	; 0x55c <OS_Abort+0x5c>
     59c:	94 e1       	ldi	r25, 0x14	; 20
     59e:	6f e7       	ldi	r22, 0x7F	; 127
     5a0:	78 e3       	ldi	r23, 0x38	; 56
     5a2:	21 e0       	ldi	r18, 0x01	; 1
     5a4:	61 50       	subi	r22, 0x01	; 1
     5a6:	70 40       	sbci	r23, 0x00	; 0
     5a8:	20 40       	sbci	r18, 0x00	; 0
     5aa:	e1 f7       	brne	.-8      	; 0x5a4 <OS_Abort+0xa4>
     5ac:	00 c0       	rjmp	.+0      	; 0x5ae <OS_Abort+0xae>
     5ae:	00 00       	nop
     5b0:	91 50       	subi	r25, 0x01	; 1
     5b2:	a9 f7       	brne	.-22     	; 0x59e <OS_Abort+0x9e>
     5b4:	b7 cf       	rjmp	.-146    	; 0x524 <OS_Abort+0x24>

000005b6 <_Z7OS_Initv>:
     5b6:	cf 93       	push	r28
     5b8:	df 93       	push	r29
     5ba:	1f 92       	push	r1
     5bc:	cd b7       	in	r28, 0x3d	; 61
     5be:	de b7       	in	r29, 0x3e	; 62
     5c0:	80 91 81 00 	lds	r24, 0x0081
     5c4:	82 60       	ori	r24, 0x02	; 2
     5c6:	80 93 81 00 	sts	0x0081, r24
     5ca:	e3 e5       	ldi	r30, 0x53	; 83
     5cc:	f3 e0       	ldi	r31, 0x03	; 3
     5ce:	a2 e1       	ldi	r26, 0x12	; 18
     5d0:	b2 e0       	ldi	r27, 0x02	; 2
     5d2:	10 82       	st	Z, r1
     5d4:	1d 92       	st	X+, r1
     5d6:	1d 92       	st	X+, r1
     5d8:	cf 01       	movw	r24, r30
     5da:	08 96       	adiw	r24, 0x08	; 8
     5dc:	95 83       	std	Z+5, r25	; 0x05
     5de:	84 83       	std	Z+4, r24	; 0x04
     5e0:	ec 5e       	subi	r30, 0xEC	; 236
     5e2:	fe 4f       	sbci	r31, 0xFE	; 254
     5e4:	2a e0       	ldi	r18, 0x0A	; 10
     5e6:	ef 3d       	cpi	r30, 0xDF	; 223
     5e8:	f2 07       	cpc	r31, r18
     5ea:	99 f7       	brne	.-26     	; 0x5d2 <_Z7OS_Initv+0x1c>
     5ec:	10 92 e4 0a 	sts	0x0AE4, r1
     5f0:	10 92 e3 0a 	sts	0x0AE3, r1
     5f4:	07 e4       	ldi	r16, 0x47	; 71
     5f6:	12 e0       	ldi	r17, 0x02	; 2
     5f8:	10 93 32 02 	sts	0x0232, r17
     5fc:	00 93 31 02 	sts	0x0231, r16
     600:	83 ed       	ldi	r24, 0xD3	; 211
     602:	99 e0       	ldi	r25, 0x09	; 9
     604:	90 93 34 02 	sts	0x0234, r25
     608:	80 93 33 02 	sts	0x0233, r24
     60c:	83 e9       	ldi	r24, 0x93	; 147
     60e:	90 e0       	ldi	r25, 0x00	; 0
     610:	90 93 38 02 	sts	0x0238, r25
     614:	80 93 37 02 	sts	0x0237, r24
     618:	10 92 3b 02 	sts	0x023B, r1
     61c:	67 de       	rcall	.-818    	; 0x2ec <_ZL18kernel_create_taskv>
     61e:	8c e8       	ldi	r24, 0x8C	; 140
     620:	95 e0       	ldi	r25, 0x05	; 5
     622:	90 93 38 02 	sts	0x0238, r25
     626:	80 93 37 02 	sts	0x0237, r24
     62a:	83 e0       	ldi	r24, 0x03	; 3
     62c:	80 93 3b 02 	sts	0x023B, r24
     630:	5d de       	rcall	.-838    	; 0x2ec <_ZL18kernel_create_taskv>
     632:	10 93 fe 0b 	sts	0x0BFE, r17
     636:	00 93 fd 0b 	sts	0x0BFD, r16
     63a:	81 e0       	ldi	r24, 0x01	; 1
     63c:	80 93 53 03 	sts	0x0353, r24
     640:	85 e2       	ldi	r24, 0x25	; 37
     642:	92 e0       	ldi	r25, 0x02	; 2
     644:	43 de       	rcall	.-890    	; 0x2cc <_ZL7dequeueP7queue_t.isra.1>
     646:	80 91 6f 00 	lds	r24, 0x006F
     64a:	82 60       	ori	r24, 0x02	; 2
     64c:	80 93 6f 00 	sts	0x006F, r24
     650:	80 91 84 00 	lds	r24, 0x0084
     654:	90 91 85 00 	lds	r25, 0x0085
     658:	80 5f       	subi	r24, 0xF0	; 240
     65a:	98 4d       	sbci	r25, 0xD8	; 216
     65c:	90 93 89 00 	sts	0x0089, r25
     660:	80 93 88 00 	sts	0x0088, r24
     664:	82 e0       	ldi	r24, 0x02	; 2
     666:	86 bb       	out	0x16, r24	; 22
     668:	ee 24       	eor	r14, r14
     66a:	e3 94       	inc	r14
     66c:	07 ee       	ldi	r16, 0xE7	; 231
     66e:	1a e0       	ldi	r17, 0x0A	; 10
     670:	82 e0       	ldi	r24, 0x02	; 2
     672:	f8 2e       	mov	r15, r24
     674:	80 91 fd 0b 	lds	r24, 0x0BFD
     678:	90 91 fe 0b 	lds	r25, 0x0BFE
     67c:	fc 01       	movw	r30, r24
     67e:	e4 5f       	subi	r30, 0xF4	; 244
     680:	fe 4f       	sbci	r31, 0xFE	; 254
     682:	20 81       	ld	r18, Z
     684:	21 30       	cpi	r18, 0x01	; 1
     686:	21 f4       	brne	.+8      	; 0x690 <_Z7OS_Initv+0xda>
     688:	87 5e       	subi	r24, 0xE7	; 231
     68a:	9a 40       	sbci	r25, 0x0A	; 10
     68c:	09 f0       	breq	.+2      	; 0x690 <_Z7OS_Initv+0xda>
     68e:	58 c0       	rjmp	.+176    	; 0x740 <_Z7OS_Initv+0x18a>
     690:	80 91 25 02 	lds	r24, 0x0225
     694:	90 91 26 02 	lds	r25, 0x0226
     698:	89 2b       	or	r24, r25
     69a:	19 f0       	breq	.+6      	; 0x6a2 <_Z7OS_Initv+0xec>
     69c:	85 e2       	ldi	r24, 0x25	; 37
     69e:	92 e0       	ldi	r25, 0x02	; 2
     6a0:	3e c0       	rjmp	.+124    	; 0x71e <_Z7OS_Initv+0x168>
     6a2:	80 91 29 02 	lds	r24, 0x0229
     6a6:	90 91 2a 02 	lds	r25, 0x022A
     6aa:	00 97       	sbiw	r24, 0x00	; 0
     6ac:	81 f1       	breq	.+96     	; 0x70e <_Z7OS_Initv+0x158>
     6ae:	20 e0       	ldi	r18, 0x00	; 0
     6b0:	30 e0       	ldi	r19, 0x00	; 0
     6b2:	40 e0       	ldi	r20, 0x00	; 0
     6b4:	50 e0       	ldi	r21, 0x00	; 0
     6b6:	fc 01       	movw	r30, r24
     6b8:	ec 5f       	subi	r30, 0xFC	; 252
     6ba:	fe 4f       	sbci	r31, 0xFE	; 254
     6bc:	60 81       	ld	r22, Z
     6be:	71 81       	ldd	r23, Z+1	; 0x01
     6c0:	16 16       	cp	r1, r22
     6c2:	17 06       	cpc	r1, r23
     6c4:	84 f0       	brlt	.+32     	; 0x6e6 <_Z7OS_Initv+0x130>
     6c6:	dc 01       	movw	r26, r24
     6c8:	aa 5f       	subi	r26, 0xFA	; 250
     6ca:	be 4f       	sbci	r27, 0xFE	; 254
     6cc:	2d 91       	ld	r18, X+
     6ce:	3c 91       	ld	r19, X
     6d0:	31 83       	std	Z+1, r19	; 0x01
     6d2:	20 83       	st	Z, r18
     6d4:	34 96       	adiw	r30, 0x04	; 4
     6d6:	20 81       	ld	r18, Z
     6d8:	31 81       	ldd	r19, Z+1	; 0x01
     6da:	36 97       	sbiw	r30, 0x06	; 6
     6dc:	31 83       	std	Z+1, r19	; 0x01
     6de:	20 83       	st	Z, r18
     6e0:	4f 5f       	subi	r20, 0xFF	; 255
     6e2:	5f 4f       	sbci	r21, 0xFF	; 255
     6e4:	9c 01       	movw	r18, r24
     6e6:	42 30       	cpi	r20, 0x02	; 2
     6e8:	51 05       	cpc	r21, r1
     6ea:	14 f0       	brlt	.+4      	; 0x6f0 <_Z7OS_Initv+0x13a>
     6ec:	8b e0       	ldi	r24, 0x0B	; 11
     6ee:	5e c0       	rjmp	.+188    	; 0x7ac <_Z7OS_Initv+0x1f6>
     6f0:	fc 01       	movw	r30, r24
     6f2:	e0 5f       	subi	r30, 0xF0	; 240
     6f4:	fe 4f       	sbci	r31, 0xFE	; 254
     6f6:	80 81       	ld	r24, Z
     6f8:	91 81       	ldd	r25, Z+1	; 0x01
     6fa:	00 97       	sbiw	r24, 0x00	; 0
     6fc:	e1 f6       	brne	.-72     	; 0x6b6 <_Z7OS_Initv+0x100>
     6fe:	21 15       	cp	r18, r1
     700:	31 05       	cpc	r19, r1
     702:	29 f0       	breq	.+10     	; 0x70e <_Z7OS_Initv+0x158>
     704:	30 93 fe 0b 	sts	0x0BFE, r19
     708:	20 93 fd 0b 	sts	0x0BFD, r18
     70c:	12 c0       	rjmp	.+36     	; 0x732 <_Z7OS_Initv+0x17c>
     70e:	80 91 2d 02 	lds	r24, 0x022D
     712:	90 91 2e 02 	lds	r25, 0x022E
     716:	89 2b       	or	r24, r25
     718:	41 f0       	breq	.+16     	; 0x72a <_Z7OS_Initv+0x174>
     71a:	8d e2       	ldi	r24, 0x2D	; 45
     71c:	92 e0       	ldi	r25, 0x02	; 2
     71e:	d6 dd       	rcall	.-1108   	; 0x2cc <_ZL7dequeueP7queue_t.isra.1>
     720:	90 93 fe 0b 	sts	0x0BFE, r25
     724:	80 93 fd 0b 	sts	0x0BFD, r24
     728:	04 c0       	rjmp	.+8      	; 0x732 <_Z7OS_Initv+0x17c>
     72a:	10 93 fe 0b 	sts	0x0BFE, r17
     72e:	00 93 fd 0b 	sts	0x0BFD, r16
     732:	e0 91 fd 0b 	lds	r30, 0x0BFD
     736:	f0 91 fe 0b 	lds	r31, 0x0BFE
     73a:	e4 5f       	subi	r30, 0xF4	; 244
     73c:	fe 4f       	sbci	r31, 0xFE	; 254
     73e:	e0 82       	st	Z, r14
     740:	f3 dc       	rcall	.-1562   	; 0x128 <_ZL11exit_kernelv>
     742:	20 91 46 02 	lds	r18, 0x0246
     746:	22 30       	cpi	r18, 0x02	; 2
     748:	09 f4       	brne	.+2      	; 0x74c <_Z7OS_Initv+0x196>
     74a:	53 c0       	rjmp	.+166    	; 0x7f2 <_Z7OS_Initv+0x23c>
     74c:	c0 90 fd 0b 	lds	r12, 0x0BFD
     750:	d0 90 fe 0b 	lds	r13, 0x0BFE
     754:	23 30       	cpi	r18, 0x03	; 3
     756:	30 f4       	brcc	.+12     	; 0x764 <_Z7OS_Initv+0x1ae>
     758:	22 23       	and	r18, r18
     75a:	09 f4       	brne	.+2      	; 0x75e <_Z7OS_Initv+0x1a8>
     75c:	f3 c0       	rjmp	.+486    	; 0x944 <_Z7OS_Initv+0x38e>
     75e:	21 30       	cpi	r18, 0x01	; 1
     760:	51 f0       	breq	.+20     	; 0x776 <_Z7OS_Initv+0x1c0>
     762:	e8 c0       	rjmp	.+464    	; 0x934 <_Z7OS_Initv+0x37e>
     764:	24 30       	cpi	r18, 0x04	; 4
     766:	09 f4       	brne	.+2      	; 0x76a <_Z7OS_Initv+0x1b4>
     768:	d0 c0       	rjmp	.+416    	; 0x90a <_Z7OS_Initv+0x354>
     76a:	08 f4       	brcc	.+2      	; 0x76e <_Z7OS_Initv+0x1b8>
     76c:	61 c0       	rjmp	.+194    	; 0x830 <_Z7OS_Initv+0x27a>
     76e:	25 30       	cpi	r18, 0x05	; 5
     770:	09 f4       	brne	.+2      	; 0x774 <_Z7OS_Initv+0x1be>
     772:	e8 c0       	rjmp	.+464    	; 0x944 <_Z7OS_Initv+0x38e>
     774:	df c0       	rjmp	.+446    	; 0x934 <_Z7OS_Initv+0x37e>
     776:	80 91 24 02 	lds	r24, 0x0224
     77a:	8f 5f       	subi	r24, 0xFF	; 255
     77c:	80 93 24 02 	sts	0x0224, r24
     780:	f6 01       	movw	r30, r12
     782:	e1 5f       	subi	r30, 0xF1	; 241
     784:	fe 4f       	sbci	r31, 0xFE	; 254
     786:	40 81       	ld	r20, Z
     788:	42 30       	cpi	r20, 0x02	; 2
     78a:	99 f4       	brne	.+38     	; 0x7b2 <_Z7OS_Initv+0x1fc>
     78c:	33 97       	sbiw	r30, 0x03	; 3
     78e:	80 81       	ld	r24, Z
     790:	81 30       	cpi	r24, 0x01	; 1
     792:	79 f4       	brne	.+30     	; 0x7b2 <_Z7OS_Initv+0x1fc>
     794:	3a 97       	sbiw	r30, 0x0a	; 10
     796:	80 81       	ld	r24, Z
     798:	91 81       	ldd	r25, Z+1	; 0x01
     79a:	01 97       	sbiw	r24, 0x01	; 1
     79c:	91 83       	std	Z+1, r25	; 0x01
     79e:	80 83       	st	Z, r24
     7a0:	36 96       	adiw	r30, 0x06	; 6
     7a2:	80 81       	ld	r24, Z
     7a4:	91 81       	ldd	r25, Z+1	; 0x01
     7a6:	89 2b       	or	r24, r25
     7a8:	21 f4       	brne	.+8      	; 0x7b2 <_Z7OS_Initv+0x1fc>
     7aa:	88 e0       	ldi	r24, 0x08	; 8
     7ac:	80 93 00 02 	sts	0x0200, r24
     7b0:	a7 de       	rcall	.-690    	; 0x500 <OS_Abort>
     7b2:	80 91 29 02 	lds	r24, 0x0229
     7b6:	90 91 2a 02 	lds	r25, 0x022A
     7ba:	00 97       	sbiw	r24, 0x00	; 0
     7bc:	69 f0       	breq	.+26     	; 0x7d8 <_Z7OS_Initv+0x222>
     7be:	fc 01       	movw	r30, r24
     7c0:	ec 5f       	subi	r30, 0xFC	; 252
     7c2:	fe 4f       	sbci	r31, 0xFE	; 254
     7c4:	20 81       	ld	r18, Z
     7c6:	31 81       	ldd	r19, Z+1	; 0x01
     7c8:	21 50       	subi	r18, 0x01	; 1
     7ca:	31 09       	sbc	r19, r1
     7cc:	31 83       	std	Z+1, r19	; 0x01
     7ce:	20 83       	st	Z, r18
     7d0:	3c 96       	adiw	r30, 0x0c	; 12
     7d2:	80 81       	ld	r24, Z
     7d4:	91 81       	ldd	r25, Z+1	; 0x01
     7d6:	f1 cf       	rjmp	.-30     	; 0x7ba <_Z7OS_Initv+0x204>
     7d8:	41 30       	cpi	r20, 0x01	; 1
     7da:	09 f0       	breq	.+2      	; 0x7de <_Z7OS_Initv+0x228>
     7dc:	b3 c0       	rjmp	.+358    	; 0x944 <_Z7OS_Initv+0x38e>
     7de:	f6 01       	movw	r30, r12
     7e0:	e4 5f       	subi	r30, 0xF4	; 244
     7e2:	fe 4f       	sbci	r31, 0xFE	; 254
     7e4:	80 81       	ld	r24, Z
     7e6:	81 30       	cpi	r24, 0x01	; 1
     7e8:	09 f0       	breq	.+2      	; 0x7ec <_Z7OS_Initv+0x236>
     7ea:	ac c0       	rjmp	.+344    	; 0x944 <_Z7OS_Initv+0x38e>
     7ec:	f0 82       	st	Z, r15
     7ee:	b6 01       	movw	r22, r12
     7f0:	b6 c0       	rjmp	.+364    	; 0x95e <_Z7OS_Initv+0x3a8>
     7f2:	29 83       	std	Y+1, r18	; 0x01
     7f4:	7b dd       	rcall	.-1290   	; 0x2ec <_ZL18kernel_create_taskv>
     7f6:	90 93 36 02 	sts	0x0236, r25
     7fa:	80 93 35 02 	sts	0x0235, r24
     7fe:	80 91 35 02 	lds	r24, 0x0235
     802:	90 91 36 02 	lds	r25, 0x0236
     806:	29 81       	ldd	r18, Y+1	; 0x01
     808:	89 2b       	or	r24, r25
     80a:	09 f4       	brne	.+2      	; 0x80e <_Z7OS_Initv+0x258>
     80c:	9b c0       	rjmp	.+310    	; 0x944 <_Z7OS_Initv+0x38e>
     80e:	60 91 fd 0b 	lds	r22, 0x0BFD
     812:	70 91 fe 0b 	lds	r23, 0x0BFE
     816:	fb 01       	movw	r30, r22
     818:	e1 5f       	subi	r30, 0xF1	; 241
     81a:	fe 4f       	sbci	r31, 0xFE	; 254
     81c:	80 81       	ld	r24, Z
     81e:	83 30       	cpi	r24, 0x03	; 3
     820:	09 f4       	brne	.+2      	; 0x824 <_Z7OS_Initv+0x26e>
     822:	90 c0       	rjmp	.+288    	; 0x944 <_Z7OS_Initv+0x38e>
     824:	90 91 3b 02 	lds	r25, 0x023B
     828:	93 30       	cpi	r25, 0x03	; 3
     82a:	09 f0       	breq	.+2      	; 0x82e <_Z7OS_Initv+0x278>
     82c:	8e c0       	rjmp	.+284    	; 0x94a <_Z7OS_Initv+0x394>
     82e:	84 c0       	rjmp	.+264    	; 0x938 <_Z7OS_Initv+0x382>
     830:	f7 ee       	ldi	r31, 0xE7	; 231
     832:	cf 16       	cp	r12, r31
     834:	fa e0       	ldi	r31, 0x0A	; 10
     836:	df 06       	cpc	r13, r31
     838:	09 f4       	brne	.+2      	; 0x83c <_Z7OS_Initv+0x286>
     83a:	84 c0       	rjmp	.+264    	; 0x944 <_Z7OS_Initv+0x38e>
     83c:	f6 01       	movw	r30, r12
     83e:	e4 5f       	subi	r30, 0xF4	; 244
     840:	fe 4f       	sbci	r31, 0xFE	; 254
     842:	10 82       	st	Z, r1
     844:	33 96       	adiw	r30, 0x03	; 3
     846:	80 81       	ld	r24, Z
     848:	82 30       	cpi	r24, 0x02	; 2
     84a:	09 f0       	breq	.+2      	; 0x84e <_Z7OS_Initv+0x298>
     84c:	59 c0       	rjmp	.+178    	; 0x900 <_Z7OS_Initv+0x34a>
     84e:	80 91 29 02 	lds	r24, 0x0229
     852:	90 91 2a 02 	lds	r25, 0x022A
     856:	8c 15       	cp	r24, r12
     858:	9d 05       	cpc	r25, r13
     85a:	71 f4       	brne	.+28     	; 0x878 <_Z7OS_Initv+0x2c2>
     85c:	31 96       	adiw	r30, 0x01	; 1
     85e:	20 81       	ld	r18, Z
     860:	31 81       	ldd	r19, Z+1	; 0x01
     862:	21 15       	cp	r18, r1
     864:	31 05       	cpc	r19, r1
     866:	41 f0       	breq	.+16     	; 0x878 <_Z7OS_Initv+0x2c2>
     868:	30 93 2a 02 	sts	0x022A, r19
     86c:	20 93 29 02 	sts	0x0229, r18
     870:	f9 01       	movw	r30, r18
     872:	ee 5e       	subi	r30, 0xEE	; 238
     874:	fe 4f       	sbci	r31, 0xFE	; 254
     876:	16 c0       	rjmp	.+44     	; 0x8a4 <_Z7OS_Initv+0x2ee>
     878:	20 91 2b 02 	lds	r18, 0x022B
     87c:	30 91 2c 02 	lds	r19, 0x022C
     880:	2c 15       	cp	r18, r12
     882:	3d 05       	cpc	r19, r13
     884:	19 f5       	brne	.+70     	; 0x8cc <_Z7OS_Initv+0x316>
     886:	f6 01       	movw	r30, r12
     888:	ee 5e       	subi	r30, 0xEE	; 238
     88a:	fe 4f       	sbci	r31, 0xFE	; 254
     88c:	20 81       	ld	r18, Z
     88e:	31 81       	ldd	r19, Z+1	; 0x01
     890:	21 15       	cp	r18, r1
     892:	31 05       	cpc	r19, r1
     894:	51 f0       	breq	.+20     	; 0x8aa <_Z7OS_Initv+0x2f4>
     896:	30 93 2c 02 	sts	0x022C, r19
     89a:	20 93 2b 02 	sts	0x022B, r18
     89e:	f9 01       	movw	r30, r18
     8a0:	e0 5f       	subi	r30, 0xF0	; 240
     8a2:	fe 4f       	sbci	r31, 0xFE	; 254
     8a4:	11 82       	std	Z+1, r1	; 0x01
     8a6:	10 82       	st	Z, r1
     8a8:	2b c0       	rjmp	.+86     	; 0x900 <_Z7OS_Initv+0x34a>
     8aa:	8c 15       	cp	r24, r12
     8ac:	9d 05       	cpc	r25, r13
     8ae:	71 f4       	brne	.+28     	; 0x8cc <_Z7OS_Initv+0x316>
     8b0:	10 92 2c 02 	sts	0x022C, r1
     8b4:	10 92 2b 02 	sts	0x022B, r1
     8b8:	10 92 2a 02 	sts	0x022A, r1
     8bc:	10 92 29 02 	sts	0x0229, r1
     8c0:	1f c0       	rjmp	.+62     	; 0x900 <_Z7OS_Initv+0x34a>
     8c2:	fc 01       	movw	r30, r24
     8c4:	e0 5f       	subi	r30, 0xF0	; 240
     8c6:	fe 4f       	sbci	r31, 0xFE	; 254
     8c8:	80 81       	ld	r24, Z
     8ca:	91 81       	ldd	r25, Z+1	; 0x01
     8cc:	00 97       	sbiw	r24, 0x00	; 0
     8ce:	c1 f0       	breq	.+48     	; 0x900 <_Z7OS_Initv+0x34a>
     8d0:	8c 15       	cp	r24, r12
     8d2:	9d 05       	cpc	r25, r13
     8d4:	b1 f7       	brne	.-20     	; 0x8c2 <_Z7OS_Initv+0x30c>
     8d6:	f6 01       	movw	r30, r12
     8d8:	ee 5e       	subi	r30, 0xEE	; 238
     8da:	fe 4f       	sbci	r31, 0xFE	; 254
     8dc:	80 81       	ld	r24, Z
     8de:	91 81       	ldd	r25, Z+1	; 0x01
     8e0:	fc 01       	movw	r30, r24
     8e2:	e0 5f       	subi	r30, 0xF0	; 240
     8e4:	fe 4f       	sbci	r31, 0xFE	; 254
     8e6:	a0 81       	ld	r26, Z
     8e8:	b1 81       	ldd	r27, Z+1	; 0x01
     8ea:	a0 5f       	subi	r26, 0xF0	; 240
     8ec:	be 4f       	sbci	r27, 0xFE	; 254
     8ee:	2d 91       	ld	r18, X+
     8f0:	3c 91       	ld	r19, X
     8f2:	31 83       	std	Z+1, r19	; 0x01
     8f4:	20 83       	st	Z, r18
     8f6:	f9 01       	movw	r30, r18
     8f8:	ee 5e       	subi	r30, 0xEE	; 238
     8fa:	fe 4f       	sbci	r31, 0xFE	; 254
     8fc:	91 83       	std	Z+1, r25	; 0x01
     8fe:	80 83       	st	Z, r24
     900:	b6 01       	movw	r22, r12
     902:	81 e3       	ldi	r24, 0x31	; 49
     904:	92 e0       	ldi	r25, 0x02	; 2
     906:	c2 dc       	rcall	.-1660   	; 0x28c <_ZL7enqueueP7queue_tP9td_struct>
     908:	1d c0       	rjmp	.+58     	; 0x944 <_Z7OS_Initv+0x38e>
     90a:	f6 01       	movw	r30, r12
     90c:	e1 5f       	subi	r30, 0xF1	; 241
     90e:	fe 4f       	sbci	r31, 0xFE	; 254
     910:	80 81       	ld	r24, Z
     912:	81 30       	cpi	r24, 0x01	; 1
     914:	31 f0       	breq	.+12     	; 0x922 <_Z7OS_Initv+0x36c>
     916:	83 30       	cpi	r24, 0x03	; 3
     918:	41 f4       	brne	.+16     	; 0x92a <_Z7OS_Initv+0x374>
     91a:	b6 01       	movw	r22, r12
     91c:	85 e2       	ldi	r24, 0x25	; 37
     91e:	92 e0       	ldi	r25, 0x02	; 2
     920:	03 c0       	rjmp	.+6      	; 0x928 <_Z7OS_Initv+0x372>
     922:	b6 01       	movw	r22, r12
     924:	8d e2       	ldi	r24, 0x2D	; 45
     926:	92 e0       	ldi	r25, 0x02	; 2
     928:	b1 dc       	rcall	.-1694   	; 0x28c <_ZL7enqueueP7queue_tP9td_struct>
     92a:	f6 01       	movw	r30, r12
     92c:	e4 5f       	subi	r30, 0xF4	; 244
     92e:	fe 4f       	sbci	r31, 0xFE	; 254
     930:	f0 82       	st	Z, r15
     932:	08 c0       	rjmp	.+16     	; 0x944 <_Z7OS_Initv+0x38e>
     934:	8f ef       	ldi	r24, 0xFF	; 255
     936:	3a cf       	rjmp	.-396    	; 0x7ac <_Z7OS_Initv+0x1f6>
     938:	fb 01       	movw	r30, r22
     93a:	e4 5f       	subi	r30, 0xF4	; 244
     93c:	fe 4f       	sbci	r31, 0xFE	; 254
     93e:	20 83       	st	Z, r18
     940:	81 30       	cpi	r24, 0x01	; 1
     942:	69 f0       	breq	.+26     	; 0x95e <_Z7OS_Initv+0x3a8>
     944:	10 92 46 02 	sts	0x0246, r1
     948:	95 ce       	rjmp	.-726    	; 0x674 <_Z7OS_Initv+0xbe>
     94a:	81 30       	cpi	r24, 0x01	; 1
     94c:	d9 f7       	brne	.-10     	; 0x944 <_Z7OS_Initv+0x38e>
     94e:	80 91 3b 02 	lds	r24, 0x023B
     952:	82 30       	cpi	r24, 0x02	; 2
     954:	b9 f7       	brne	.-18     	; 0x944 <_Z7OS_Initv+0x38e>
     956:	fb 01       	movw	r30, r22
     958:	e4 5f       	subi	r30, 0xF4	; 244
     95a:	fe 4f       	sbci	r31, 0xFE	; 254
     95c:	80 83       	st	Z, r24
     95e:	8d e2       	ldi	r24, 0x2D	; 45
     960:	92 e0       	ldi	r25, 0x02	; 2
     962:	d1 cf       	rjmp	.-94     	; 0x906 <_Z7OS_Initv+0x350>

00000964 <Service_Init>:
     964:	cf 93       	push	r28
     966:	cf b7       	in	r28, 0x3f	; 63
     968:	f8 94       	cli
     96a:	80 e1       	ldi	r24, 0x10	; 16
     96c:	90 e0       	ldi	r25, 0x00	; 0
     96e:	e6 d1       	rcall	.+972    	; 0xd3c <_Znwj>
     970:	fc 01       	movw	r30, r24
     972:	17 86       	std	Z+15, r1	; 0x0f
     974:	16 86       	std	Z+14, r1	; 0x0e
     976:	15 86       	std	Z+13, r1	; 0x0d
     978:	14 86       	std	Z+12, r1	; 0x0c
     97a:	cf bf       	out	0x3f, r28	; 63
     97c:	cf 91       	pop	r28
     97e:	08 95       	ret

00000980 <Service_Subscribe>:
     980:	cf 93       	push	r28
     982:	cf b7       	in	r28, 0x3f	; 63
     984:	f8 94       	cli
     986:	20 91 fd 0b 	lds	r18, 0x0BFD
     98a:	30 91 fe 0b 	lds	r19, 0x0BFE
     98e:	f9 01       	movw	r30, r18
     990:	e1 5f       	subi	r30, 0xF1	; 241
     992:	fe 4f       	sbci	r31, 0xFE	; 254
     994:	40 81       	ld	r20, Z
     996:	42 30       	cpi	r20, 0x02	; 2
     998:	e9 f0       	breq	.+58     	; 0x9d4 <Service_Subscribe+0x54>
     99a:	fc 01       	movw	r30, r24
     99c:	46 85       	ldd	r20, Z+14	; 0x0e
     99e:	57 85       	ldd	r21, Z+15	; 0x0f
     9a0:	43 30       	cpi	r20, 0x03	; 3
     9a2:	51 05       	cpc	r21, r1
     9a4:	bc f4       	brge	.+46     	; 0x9d4 <Service_Subscribe+0x54>
     9a6:	fa 01       	movw	r30, r20
     9a8:	ee 0f       	add	r30, r30
     9aa:	ff 1f       	adc	r31, r31
     9ac:	e8 0f       	add	r30, r24
     9ae:	f9 1f       	adc	r31, r25
     9b0:	31 83       	std	Z+1, r19	; 0x01
     9b2:	20 83       	st	Z, r18
     9b4:	77 83       	std	Z+7, r23	; 0x07
     9b6:	66 83       	std	Z+6, r22	; 0x06
     9b8:	4f 5f       	subi	r20, 0xFF	; 255
     9ba:	5f 4f       	sbci	r21, 0xFF	; 255
     9bc:	fc 01       	movw	r30, r24
     9be:	57 87       	std	Z+15, r21	; 0x0f
     9c0:	46 87       	std	Z+14, r20	; 0x0e
     9c2:	f9 01       	movw	r30, r18
     9c4:	e4 5f       	subi	r30, 0xF4	; 244
     9c6:	fe 4f       	sbci	r31, 0xFE	; 254
     9c8:	83 e0       	ldi	r24, 0x03	; 3
     9ca:	80 83       	st	Z, r24
     9cc:	06 dc       	rcall	.-2036   	; 0x1da <_ZL12enter_kernelv>
     9ce:	cf bf       	out	0x3f, r28	; 63
     9d0:	cf 91       	pop	r28
     9d2:	08 95       	ret
     9d4:	8a e0       	ldi	r24, 0x0A	; 10
     9d6:	80 93 00 02 	sts	0x0200, r24
     9da:	92 dd       	rcall	.-1244   	; 0x500 <OS_Abort>

000009dc <Service_Publish>:
     9dc:	cf 93       	push	r28
     9de:	df 93       	push	r29
     9e0:	dc 01       	movw	r26, r24
     9e2:	4f b7       	in	r20, 0x3f	; 63
     9e4:	f8 94       	cli
     9e6:	1d 96       	adiw	r26, 0x0d	; 13
     9e8:	7c 93       	st	X, r23
     9ea:	6e 93       	st	-X, r22
     9ec:	1c 97       	sbiw	r26, 0x0c	; 12
     9ee:	fc 01       	movw	r30, r24
     9f0:	80 e0       	ldi	r24, 0x00	; 0
     9f2:	90 e0       	ldi	r25, 0x00	; 0
     9f4:	52 e0       	ldi	r21, 0x02	; 2
     9f6:	1e 96       	adiw	r26, 0x0e	; 14
     9f8:	2d 91       	ld	r18, X+
     9fa:	3c 91       	ld	r19, X
     9fc:	1f 97       	sbiw	r26, 0x0f	; 15
     9fe:	82 17       	cp	r24, r18
     a00:	93 07       	cpc	r25, r19
     a02:	7c f4       	brge	.+30     	; 0xa22 <Service_Publish+0x46>
     a04:	c6 81       	ldd	r28, Z+6	; 0x06
     a06:	d7 81       	ldd	r29, Z+7	; 0x07
     a08:	79 83       	std	Y+1, r23	; 0x01
     a0a:	68 83       	st	Y, r22
     a0c:	17 82       	std	Z+7, r1	; 0x07
     a0e:	16 82       	std	Z+6, r1	; 0x06
     a10:	c0 81       	ld	r28, Z
     a12:	d1 81       	ldd	r29, Z+1	; 0x01
     a14:	c4 5f       	subi	r28, 0xF4	; 244
     a16:	de 4f       	sbci	r29, 0xFE	; 254
     a18:	58 83       	st	Y, r21
     a1a:	11 92       	st	Z+, r1
     a1c:	11 92       	st	Z+, r1
     a1e:	01 96       	adiw	r24, 0x01	; 1
     a20:	ea cf       	rjmp	.-44     	; 0x9f6 <Service_Publish+0x1a>
     a22:	1f 96       	adiw	r26, 0x0f	; 15
     a24:	1c 92       	st	X, r1
     a26:	1e 92       	st	-X, r1
     a28:	1e 97       	sbiw	r26, 0x0e	; 14
     a2a:	4f bf       	out	0x3f, r20	; 63
     a2c:	df 91       	pop	r29
     a2e:	cf 91       	pop	r28
     a30:	08 95       	ret

00000a32 <Task_Create_System>:
     a32:	cf 93       	push	r28
     a34:	cf b7       	in	r28, 0x3f	; 63
     a36:	f8 94       	cli
     a38:	90 93 38 02 	sts	0x0238, r25
     a3c:	80 93 37 02 	sts	0x0237, r24
     a40:	70 93 3a 02 	sts	0x023A, r23
     a44:	60 93 39 02 	sts	0x0239, r22
     a48:	83 e0       	ldi	r24, 0x03	; 3
     a4a:	80 93 3b 02 	sts	0x023B, r24
     a4e:	82 e0       	ldi	r24, 0x02	; 2
     a50:	80 93 46 02 	sts	0x0246, r24
     a54:	c2 db       	rcall	.-2172   	; 0x1da <_ZL12enter_kernelv>
     a56:	80 91 35 02 	lds	r24, 0x0235
     a5a:	90 91 36 02 	lds	r25, 0x0236
     a5e:	cf bf       	out	0x3f, r28	; 63
     a60:	cf 91       	pop	r28
     a62:	08 95       	ret

00000a64 <Task_Create_Periodic>:
     a64:	0f 93       	push	r16
     a66:	1f 93       	push	r17
     a68:	cf 93       	push	r28
     a6a:	cf b7       	in	r28, 0x3f	; 63
     a6c:	f8 94       	cli
     a6e:	90 93 38 02 	sts	0x0238, r25
     a72:	80 93 37 02 	sts	0x0237, r24
     a76:	70 93 3a 02 	sts	0x023A, r23
     a7a:	60 93 39 02 	sts	0x0239, r22
     a7e:	82 e0       	ldi	r24, 0x02	; 2
     a80:	80 93 3b 02 	sts	0x023B, r24
     a84:	50 93 41 02 	sts	0x0241, r21
     a88:	40 93 40 02 	sts	0x0240, r20
     a8c:	30 93 43 02 	sts	0x0243, r19
     a90:	20 93 42 02 	sts	0x0242, r18
     a94:	10 93 45 02 	sts	0x0245, r17
     a98:	00 93 44 02 	sts	0x0244, r16
     a9c:	10 93 3d 02 	sts	0x023D, r17
     aa0:	00 93 3c 02 	sts	0x023C, r16
     aa4:	30 93 3f 02 	sts	0x023F, r19
     aa8:	20 93 3e 02 	sts	0x023E, r18
     aac:	80 93 46 02 	sts	0x0246, r24
     ab0:	94 db       	rcall	.-2264   	; 0x1da <_ZL12enter_kernelv>
     ab2:	80 91 35 02 	lds	r24, 0x0235
     ab6:	90 91 36 02 	lds	r25, 0x0236
     aba:	cf bf       	out	0x3f, r28	; 63
     abc:	cf 91       	pop	r28
     abe:	1f 91       	pop	r17
     ac0:	0f 91       	pop	r16
     ac2:	08 95       	ret

00000ac4 <main>:
     ac4:	78 dd       	rcall	.-1296   	; 0x5b6 <_Z7OS_Initv>

00000ac6 <_Z1sv>:
#include "../trace/trace.h"

SERVICE* serviceTest;

void s()
{
     ac6:	cf 93       	push	r28
     ac8:	df 93       	push	r29
     aca:	1f 92       	push	r1
     acc:	1f 92       	push	r1
     ace:	cd b7       	in	r28, 0x3d	; 61
     ad0:	de b7       	in	r29, 0x3e	; 62
	int16_t value = 1;
     ad2:	81 e0       	ldi	r24, 0x01	; 1
     ad4:	90 e0       	ldi	r25, 0x00	; 0
     ad6:	9a 83       	std	Y+2, r25	; 0x02
     ad8:	89 83       	std	Y+1, r24	; 0x01
	add_to_trace(value); //1
     ada:	ab d0       	rcall	.+342    	; 0xc32 <_Z12add_to_tracej>
	Service_Subscribe(serviceTest, &value);
     adc:	be 01       	movw	r22, r28
     ade:	6f 5f       	subi	r22, 0xFF	; 255
     ae0:	7f 4f       	sbci	r23, 0xFF	; 255
     ae2:	80 91 ff 0b 	lds	r24, 0x0BFF
     ae6:	90 91 00 0c 	lds	r25, 0x0C00
     aea:	4a df       	rcall	.-364    	; 0x980 <Service_Subscribe>
	add_to_trace(value); //5
     aec:	89 81       	ldd	r24, Y+1	; 0x01
     aee:	9a 81       	ldd	r25, Y+2	; 0x02
     af0:	a0 d0       	rcall	.+320    	; 0xc32 <_Z12add_to_tracej>
}
     af2:	0f 90       	pop	r0
     af4:	0f 90       	pop	r0
     af6:	df 91       	pop	r29
     af8:	cf 91       	pop	r28
     afa:	08 95       	ret

00000afc <_Z2rrv>:

void rr()
{
	int16_t value = 5;
	add_to_trace(2);
     afc:	82 e0       	ldi	r24, 0x02	; 2
     afe:	90 e0       	ldi	r25, 0x00	; 0
     b00:	98 d0       	rcall	.+304    	; 0xc32 <_Z12add_to_tracej>
	Service_Publish(serviceTest, value);
     b02:	65 e0       	ldi	r22, 0x05	; 5
     b04:	70 e0       	ldi	r23, 0x00	; 0
     b06:	80 91 ff 0b 	lds	r24, 0x0BFF
     b0a:	90 91 00 0c 	lds	r25, 0x0C00
     b0e:	66 df       	rcall	.-308    	; 0x9dc <Service_Publish>
	add_to_trace(2);
     b10:	82 e0       	ldi	r24, 0x02	; 2
     b12:	90 e0       	ldi	r25, 0x00	; 0
     b14:	8e d0       	rcall	.+284    	; 0xc32 <_Z12add_to_tracej>
	print_trace();
     b16:	34 c0       	rjmp	.+104    	; 0xb80 <_Z11print_tracev>

00000b18 <_Z6r_mainv>:
}

int r_main(void)
{
     b18:	0f 93       	push	r16
     b1a:	1f 93       	push	r17
	serviceTest = Service_Init(); 
     b1c:	23 df       	rcall	.-442    	; 0x964 <Service_Init>
     b1e:	90 93 00 0c 	sts	0x0C00, r25
     b22:	80 93 ff 0b 	sts	0x0BFF, r24
	
	uart_init();
     b26:	bc d0       	rcall	.+376    	; 0xca0 <_Z9uart_initv>
	set_trace_test(13);
     b28:	8d e0       	ldi	r24, 0x0D	; 13
     b2a:	9f d0       	rcall	.+318    	; 0xc6a <_Z14set_trace_testh>
	add_to_trace(0);
     b2c:	80 e0       	ldi	r24, 0x00	; 0
     b2e:	90 e0       	ldi	r25, 0x00	; 0
     b30:	80 d0       	rcall	.+256    	; 0xc32 <_Z12add_to_tracej>
	Task_Create_System(s, 0);
     b32:	60 e0       	ldi	r22, 0x00	; 0
     b34:	70 e0       	ldi	r23, 0x00	; 0
     b36:	83 e6       	ldi	r24, 0x63	; 99
     b38:	95 e0       	ldi	r25, 0x05	; 5
     b3a:	7b df       	rcall	.-266    	; 0xa32 <Task_Create_System>
	Task_Create_System(s, 0);
     b3c:	60 e0       	ldi	r22, 0x00	; 0
     b3e:	70 e0       	ldi	r23, 0x00	; 0
     b40:	83 e6       	ldi	r24, 0x63	; 99
     b42:	95 e0       	ldi	r25, 0x05	; 5
     b44:	76 df       	rcall	.-276    	; 0xa32 <Task_Create_System>
	Task_Create_System(s, 0);
     b46:	60 e0       	ldi	r22, 0x00	; 0
     b48:	70 e0       	ldi	r23, 0x00	; 0
     b4a:	83 e6       	ldi	r24, 0x63	; 99
     b4c:	95 e0       	ldi	r25, 0x05	; 5
     b4e:	71 df       	rcall	.-286    	; 0xa32 <Task_Create_System>
	Task_Create_System(s, 0); // OS_Abort(); with error.
     b50:	60 e0       	ldi	r22, 0x00	; 0
     b52:	70 e0       	ldi	r23, 0x00	; 0
     b54:	83 e6       	ldi	r24, 0x63	; 99
     b56:	95 e0       	ldi	r25, 0x05	; 5
     b58:	6c df       	rcall	.-296    	; 0xa32 <Task_Create_System>
	Task_Create_Periodic(rr, 0, 20, 5, 5);
     b5a:	05 e0       	ldi	r16, 0x05	; 5
     b5c:	10 e0       	ldi	r17, 0x00	; 0
     b5e:	25 e0       	ldi	r18, 0x05	; 5
     b60:	30 e0       	ldi	r19, 0x00	; 0
     b62:	44 e1       	ldi	r20, 0x14	; 20
     b64:	50 e0       	ldi	r21, 0x00	; 0
     b66:	60 e0       	ldi	r22, 0x00	; 0
     b68:	70 e0       	ldi	r23, 0x00	; 0
     b6a:	8e e7       	ldi	r24, 0x7E	; 126
     b6c:	95 e0       	ldi	r25, 0x05	; 5
     b6e:	7a df       	rcall	.-268    	; 0xa64 <Task_Create_Periodic>

	add_to_trace(0);
     b70:	80 e0       	ldi	r24, 0x00	; 0
     b72:	90 e0       	ldi	r25, 0x00	; 0
     b74:	5e d0       	rcall	.+188    	; 0xc32 <_Z12add_to_tracej>
	return 1;
}
     b76:	81 e0       	ldi	r24, 0x01	; 1
     b78:	90 e0       	ldi	r25, 0x00	; 0
     b7a:	1f 91       	pop	r17
     b7c:	0f 91       	pop	r16
     b7e:	08 95       	ret

00000b80 <_Z11print_tracev>:
     b80:	cf 92       	push	r12
     b82:	df 92       	push	r13
     b84:	ef 92       	push	r14
     b86:	ff 92       	push	r15
     b88:	0f 93       	push	r16
     b8a:	1f 93       	push	r17
     b8c:	cf 93       	push	r28
     b8e:	df 93       	push	r29
     b90:	80 91 24 0e 	lds	r24, 0x0E24
     b94:	1f 92       	push	r1
     b96:	8f 93       	push	r24
     b98:	87 e0       	ldi	r24, 0x07	; 7
     b9a:	92 e0       	ldi	r25, 0x02	; 2
     b9c:	9f 93       	push	r25
     b9e:	8f 93       	push	r24
     ba0:	81 e0       	ldi	r24, 0x01	; 1
     ba2:	9c e0       	ldi	r25, 0x0C	; 12
     ba4:	9f 93       	push	r25
     ba6:	8f 93       	push	r24
     ba8:	27 d2       	rcall	.+1102   	; 0xff8 <sprintf>
     baa:	bc 01       	movw	r22, r24
     bac:	81 e0       	ldi	r24, 0x01	; 1
     bae:	9c e0       	ldi	r25, 0x0C	; 12
     bb0:	73 d0       	rcall	.+230    	; 0xc98 <_Z10uart_writePhi>
     bb2:	c3 e2       	ldi	r28, 0x23	; 35
     bb4:	dc e0       	ldi	r29, 0x0C	; 12
     bb6:	0f 90       	pop	r0
     bb8:	0f 90       	pop	r0
     bba:	0f 90       	pop	r0
     bbc:	0f 90       	pop	r0
     bbe:	0f 90       	pop	r0
     bc0:	0f 90       	pop	r0
     bc2:	00 e0       	ldi	r16, 0x00	; 0
     bc4:	10 e0       	ldi	r17, 0x00	; 0
     bc6:	8e e0       	ldi	r24, 0x0E	; 14
     bc8:	e8 2e       	mov	r14, r24
     bca:	82 e0       	ldi	r24, 0x02	; 2
     bcc:	f8 2e       	mov	r15, r24
     bce:	91 e0       	ldi	r25, 0x01	; 1
     bd0:	c9 2e       	mov	r12, r25
     bd2:	9c e0       	ldi	r25, 0x0C	; 12
     bd4:	d9 2e       	mov	r13, r25
     bd6:	80 91 21 0c 	lds	r24, 0x0C21
     bda:	90 91 22 0c 	lds	r25, 0x0C22
     bde:	08 17       	cp	r16, r24
     be0:	19 07       	cpc	r17, r25
     be2:	bc f4       	brge	.+46     	; 0xc12 <_Z11print_tracev+0x92>
     be4:	88 81       	ld	r24, Y
     be6:	99 81       	ldd	r25, Y+1	; 0x01
     be8:	22 96       	adiw	r28, 0x02	; 2
     bea:	9f 93       	push	r25
     bec:	8f 93       	push	r24
     bee:	ff 92       	push	r15
     bf0:	ef 92       	push	r14
     bf2:	df 92       	push	r13
     bf4:	cf 92       	push	r12
     bf6:	00 d2       	rcall	.+1024   	; 0xff8 <sprintf>
     bf8:	bc 01       	movw	r22, r24
     bfa:	81 e0       	ldi	r24, 0x01	; 1
     bfc:	9c e0       	ldi	r25, 0x0C	; 12
     bfe:	4c d0       	rcall	.+152    	; 0xc98 <_Z10uart_writePhi>
     c00:	0f 5f       	subi	r16, 0xFF	; 255
     c02:	1f 4f       	sbci	r17, 0xFF	; 255
     c04:	0f 90       	pop	r0
     c06:	0f 90       	pop	r0
     c08:	0f 90       	pop	r0
     c0a:	0f 90       	pop	r0
     c0c:	0f 90       	pop	r0
     c0e:	0f 90       	pop	r0
     c10:	e2 cf       	rjmp	.-60     	; 0xbd6 <_Z11print_tracev+0x56>
     c12:	81 e0       	ldi	r24, 0x01	; 1
     c14:	80 93 23 0e 	sts	0x0E23, r24
     c18:	10 92 22 0c 	sts	0x0C22, r1
     c1c:	10 92 21 0c 	sts	0x0C21, r1
     c20:	df 91       	pop	r29
     c22:	cf 91       	pop	r28
     c24:	1f 91       	pop	r17
     c26:	0f 91       	pop	r16
     c28:	ff 90       	pop	r15
     c2a:	ef 90       	pop	r14
     c2c:	df 90       	pop	r13
     c2e:	cf 90       	pop	r12
     c30:	08 95       	ret

00000c32 <_Z12add_to_tracej>:
     c32:	20 91 21 0c 	lds	r18, 0x0C21
     c36:	30 91 22 0c 	lds	r19, 0x0C22
     c3a:	2f 3f       	cpi	r18, 0xFF	; 255
     c3c:	31 05       	cpc	r19, r1
     c3e:	09 f0       	breq	.+2      	; 0xc42 <_Z12add_to_tracej+0x10>
     c40:	98 f4       	brcc	.+38     	; 0xc68 <_Z12add_to_tracej+0x36>
     c42:	e0 91 21 0c 	lds	r30, 0x0C21
     c46:	f0 91 22 0c 	lds	r31, 0x0C22
     c4a:	ee 0f       	add	r30, r30
     c4c:	ff 1f       	adc	r31, r31
     c4e:	ed 5d       	subi	r30, 0xDD	; 221
     c50:	f3 4f       	sbci	r31, 0xF3	; 243
     c52:	91 83       	std	Z+1, r25	; 0x01
     c54:	80 83       	st	Z, r24
     c56:	80 91 21 0c 	lds	r24, 0x0C21
     c5a:	90 91 22 0c 	lds	r25, 0x0C22
     c5e:	01 96       	adiw	r24, 0x01	; 1
     c60:	90 93 22 0c 	sts	0x0C22, r25
     c64:	80 93 21 0c 	sts	0x0C21, r24
     c68:	08 95       	ret

00000c6a <_Z14set_trace_testh>:
     c6a:	80 93 24 0e 	sts	0x0E24, r24
     c6e:	08 95       	ret

00000c70 <_Z12uart_putcharc>:
     c70:	f8 94       	cli
     c72:	90 91 c0 00 	lds	r25, 0x00C0
     c76:	95 ff       	sbrs	r25, 5
     c78:	fc cf       	rjmp	.-8      	; 0xc72 <_Z12uart_putcharc+0x2>
     c7a:	80 93 c6 00 	sts	0x00C6, r24
     c7e:	78 94       	sei
     c80:	08 95       	ret

00000c82 <_Z11uart_putstrPc>:
     c82:	cf 93       	push	r28
     c84:	df 93       	push	r29
     c86:	ec 01       	movw	r28, r24
     c88:	89 91       	ld	r24, Y+
     c8a:	88 23       	and	r24, r24
     c8c:	11 f0       	breq	.+4      	; 0xc92 <_Z11uart_putstrPc+0x10>
     c8e:	f0 df       	rcall	.-32     	; 0xc70 <_Z12uart_putcharc>
     c90:	fb cf       	rjmp	.-10     	; 0xc88 <_Z11uart_putstrPc+0x6>
     c92:	df 91       	pop	r29
     c94:	cf 91       	pop	r28
     c96:	08 95       	ret

00000c98 <_Z10uart_writePhi>:
     c98:	f4 df       	rcall	.-24     	; 0xc82 <_Z11uart_putstrPc>
     c9a:	80 e0       	ldi	r24, 0x00	; 0
     c9c:	90 e0       	ldi	r25, 0x00	; 0
     c9e:	08 95       	ret

00000ca0 <_Z9uart_initv>:
     ca0:	10 92 8b 0e 	sts	0x0E8B, r1
     ca4:	10 92 8a 0e 	sts	0x0E8A, r1
     ca8:	10 92 25 0e 	sts	0x0E25, r1
     cac:	10 92 c5 00 	sts	0x00C5, r1
     cb0:	87 e6       	ldi	r24, 0x67	; 103
     cb2:	80 93 c4 00 	sts	0x00C4, r24
     cb6:	88 e9       	ldi	r24, 0x98	; 152
     cb8:	80 93 c1 00 	sts	0x00C1, r24
     cbc:	8e e0       	ldi	r24, 0x0E	; 14
     cbe:	80 93 c2 00 	sts	0x00C2, r24
     cc2:	08 95       	ret

00000cc4 <__vector_25>:
     cc4:	1f 92       	push	r1
     cc6:	0f 92       	push	r0
     cc8:	0f b6       	in	r0, 0x3f	; 63
     cca:	0f 92       	push	r0
     ccc:	11 24       	eor	r1, r1
     cce:	0b b6       	in	r0, 0x3b	; 59
     cd0:	0f 92       	push	r0
     cd2:	5f 93       	push	r21
     cd4:	6f 93       	push	r22
     cd6:	7f 93       	push	r23
     cd8:	8f 93       	push	r24
     cda:	9f 93       	push	r25
     cdc:	af 93       	push	r26
     cde:	bf 93       	push	r27
     ce0:	ef 93       	push	r30
     ce2:	ff 93       	push	r31
     ce4:	80 91 c0 00 	lds	r24, 0x00C0
     ce8:	87 ff       	sbrs	r24, 7
     cea:	fc cf       	rjmp	.-8      	; 0xce4 <__vector_25+0x20>
     cec:	e0 91 8a 0e 	lds	r30, 0x0E8A
     cf0:	f0 91 8b 0e 	lds	r31, 0x0E8B
     cf4:	80 91 c6 00 	lds	r24, 0x00C6
     cf8:	ea 5d       	subi	r30, 0xDA	; 218
     cfa:	f1 4f       	sbci	r31, 0xF1	; 241
     cfc:	80 83       	st	Z, r24
     cfe:	80 91 8a 0e 	lds	r24, 0x0E8A
     d02:	90 91 8b 0e 	lds	r25, 0x0E8B
     d06:	01 96       	adiw	r24, 0x01	; 1
     d08:	64 e6       	ldi	r22, 0x64	; 100
     d0a:	70 e0       	ldi	r23, 0x00	; 0
     d0c:	4e d1       	rcall	.+668    	; 0xfaa <__divmodhi4>
     d0e:	90 93 8b 0e 	sts	0x0E8B, r25
     d12:	80 93 8a 0e 	sts	0x0E8A, r24
     d16:	81 e0       	ldi	r24, 0x01	; 1
     d18:	80 93 25 0e 	sts	0x0E25, r24
     d1c:	ff 91       	pop	r31
     d1e:	ef 91       	pop	r30
     d20:	bf 91       	pop	r27
     d22:	af 91       	pop	r26
     d24:	9f 91       	pop	r25
     d26:	8f 91       	pop	r24
     d28:	7f 91       	pop	r23
     d2a:	6f 91       	pop	r22
     d2c:	5f 91       	pop	r21
     d2e:	0f 90       	pop	r0
     d30:	0b be       	out	0x3b, r0	; 59
     d32:	0f 90       	pop	r0
     d34:	0f be       	out	0x3f, r0	; 63
     d36:	0f 90       	pop	r0
     d38:	1f 90       	pop	r1
     d3a:	18 95       	reti

00000d3c <_Znwj>:
#include <new.h>

void * operator new(size_t size)
{
  return malloc(size);
     d3c:	01 c0       	rjmp	.+2      	; 0xd40 <malloc>
}
     d3e:	08 95       	ret

00000d40 <malloc>:
	 * Our minimum chunk size is the size of a pointer (plus the
	 * size of the "sz" field, but we don't need to account for
	 * this), otherwise we could not possibly fit a freelist entry
	 * into the chunk later.
	 */
	if (len < sizeof(struct __freelist) - sizeof(size_t))
     d40:	0f 93       	push	r16
     d42:	1f 93       	push	r17
     d44:	cf 93       	push	r28
     d46:	df 93       	push	r29
     d48:	bc 01       	movw	r22, r24
     d4a:	82 30       	cpi	r24, 0x02	; 2
     d4c:	91 05       	cpc	r25, r1
     d4e:	10 f4       	brcc	.+4      	; 0xd54 <malloc+0x14>
     d50:	62 e0       	ldi	r22, 0x02	; 2
     d52:	70 e0       	ldi	r23, 0x00	; 0
	 * would match exactly.  If we found one, we are done.  While
	 * walking, note down the smallest chunk we found that would
	 * still fit the request -- we need it for step 2.
	 *
	 */
	for (s = 0, fp1 = __flp, fp2 = 0;
     d54:	e0 91 8e 0e 	lds	r30, 0x0E8E
     d58:	f0 91 8f 0e 	lds	r31, 0x0E8F
     d5c:	40 e0       	ldi	r20, 0x00	; 0
     d5e:	50 e0       	ldi	r21, 0x00	; 0
     d60:	a0 e0       	ldi	r26, 0x00	; 0
     d62:	b0 e0       	ldi	r27, 0x00	; 0
     d64:	24 c0       	rjmp	.+72     	; 0xdae <malloc+0x6e>
	     fp1;
	     fp2 = fp1, fp1 = fp1->nx) {
		if (fp1->sz < len)
     d66:	80 81       	ld	r24, Z
     d68:	91 81       	ldd	r25, Z+1	; 0x01
     d6a:	86 17       	cp	r24, r22
     d6c:	97 07       	cpc	r25, r23
     d6e:	d0 f0       	brcs	.+52     	; 0xda4 <malloc+0x64>
			continue;
		if (fp1->sz == len) {
     d70:	86 17       	cp	r24, r22
     d72:	97 07       	cpc	r25, r23
     d74:	71 f4       	brne	.+28     	; 0xd92 <malloc+0x52>
     d76:	82 81       	ldd	r24, Z+2	; 0x02
     d78:	93 81       	ldd	r25, Z+3	; 0x03
			/*
			 * Found it.  Disconnect the chunk from the
			 * freelist, and return it.
			 */
			if (fp2)
     d7a:	10 97       	sbiw	r26, 0x00	; 0
     d7c:	29 f0       	breq	.+10     	; 0xd88 <malloc+0x48>
				fp2->nx = fp1->nx;
     d7e:	13 96       	adiw	r26, 0x03	; 3
     d80:	9c 93       	st	X, r25
     d82:	8e 93       	st	-X, r24
     d84:	12 97       	sbiw	r26, 0x02	; 2
     d86:	2c c0       	rjmp	.+88     	; 0xde0 <malloc+0xa0>
			else
				__flp = fp1->nx;
     d88:	90 93 8f 0e 	sts	0x0E8F, r25
     d8c:	80 93 8e 0e 	sts	0x0E8E, r24
     d90:	27 c0       	rjmp	.+78     	; 0xde0 <malloc+0xa0>
			return &(fp1->nx);
		}
		else {
			if (s == 0 || fp1->sz < s) {
     d92:	41 15       	cp	r20, r1
     d94:	51 05       	cpc	r21, r1
     d96:	19 f0       	breq	.+6      	; 0xd9e <malloc+0x5e>
     d98:	84 17       	cp	r24, r20
     d9a:	95 07       	cpc	r25, r21
     d9c:	18 f4       	brcc	.+6      	; 0xda4 <malloc+0x64>
     d9e:	8d 01       	movw	r16, r26
     da0:	ac 01       	movw	r20, r24
     da2:	ef 01       	movw	r28, r30
	 * still fit the request -- we need it for step 2.
	 *
	 */
	for (s = 0, fp1 = __flp, fp2 = 0;
	     fp1;
	     fp2 = fp1, fp1 = fp1->nx) {
     da4:	df 01       	movw	r26, r30
     da6:	82 81       	ldd	r24, Z+2	; 0x02
     da8:	93 81       	ldd	r25, Z+3	; 0x03
     daa:	9c 01       	movw	r18, r24
     dac:	f9 01       	movw	r30, r18
	 * walking, note down the smallest chunk we found that would
	 * still fit the request -- we need it for step 2.
	 *
	 */
	for (s = 0, fp1 = __flp, fp2 = 0;
	     fp1;
     dae:	30 97       	sbiw	r30, 0x00	; 0
     db0:	d1 f6       	brne	.-76     	; 0xd66 <malloc+0x26>
	 * difference between the requested size and the size of the
	 * chunk found is large enough for another freelist entry; if
	 * not, just enlarge the request size to what we have found,
	 * and use the entire chunk.
	 */
	if (s) {
     db2:	41 15       	cp	r20, r1
     db4:	51 05       	cpc	r21, r1
     db6:	f9 f0       	breq	.+62     	; 0xdf6 <malloc+0xb6>
		if (s - len < sizeof(struct __freelist)) {
     db8:	ca 01       	movw	r24, r20
     dba:	86 1b       	sub	r24, r22
     dbc:	97 0b       	sbc	r25, r23
     dbe:	84 30       	cpi	r24, 0x04	; 4
     dc0:	91 05       	cpc	r25, r1
     dc2:	80 f4       	brcc	.+32     	; 0xde4 <malloc+0xa4>
     dc4:	8a 81       	ldd	r24, Y+2	; 0x02
     dc6:	9b 81       	ldd	r25, Y+3	; 0x03
			/* Disconnect it from freelist and return it. */
			if (sfp2)
     dc8:	01 15       	cp	r16, r1
     dca:	11 05       	cpc	r17, r1
     dcc:	21 f0       	breq	.+8      	; 0xdd6 <malloc+0x96>
				sfp2->nx = sfp1->nx;
     dce:	f8 01       	movw	r30, r16
     dd0:	93 83       	std	Z+3, r25	; 0x03
     dd2:	82 83       	std	Z+2, r24	; 0x02
     dd4:	04 c0       	rjmp	.+8      	; 0xdde <malloc+0x9e>
			else
				__flp = sfp1->nx;
     dd6:	90 93 8f 0e 	sts	0x0E8F, r25
     dda:	80 93 8e 0e 	sts	0x0E8E, r24
			return &(sfp1->nx);
     dde:	fe 01       	movw	r30, r28
     de0:	32 96       	adiw	r30, 0x02	; 2
     de2:	45 c0       	rjmp	.+138    	; 0xe6e <malloc+0x12e>
		 */
		cp = (char *)sfp1;
		s -= len;
		cp += s;
		sfp2 = (struct __freelist *)cp;
		sfp2->sz = len;
     de4:	fe 01       	movw	r30, r28
     de6:	e8 0f       	add	r30, r24
     de8:	f9 1f       	adc	r31, r25
     dea:	61 93       	st	Z+, r22
     dec:	71 93       	st	Z+, r23
		sfp1->sz = s - sizeof(size_t);
     dee:	02 97       	sbiw	r24, 0x02	; 2
     df0:	99 83       	std	Y+1, r25	; 0x01
     df2:	88 83       	st	Y, r24
     df4:	3c c0       	rjmp	.+120    	; 0xe6e <malloc+0x12e>
	 * Under Unix, the "break value" was the end of the data
	 * segment as dynamically requested from the operating system.
	 * Since we don't have an operating system, just make sure
	 * that we don't collide with the stack.
	 */
	if (__brkval == 0)
     df6:	80 91 8c 0e 	lds	r24, 0x0E8C
     dfa:	90 91 8d 0e 	lds	r25, 0x0E8D
     dfe:	89 2b       	or	r24, r25
     e00:	41 f4       	brne	.+16     	; 0xe12 <malloc+0xd2>
		__brkval = __malloc_heap_start;
     e02:	80 91 03 02 	lds	r24, 0x0203
     e06:	90 91 04 02 	lds	r25, 0x0204
     e0a:	90 93 8d 0e 	sts	0x0E8D, r25
     e0e:	80 93 8c 0e 	sts	0x0E8C, r24
	cp = __malloc_heap_end;
     e12:	40 91 05 02 	lds	r20, 0x0205
     e16:	50 91 06 02 	lds	r21, 0x0206
	if (cp == 0)
     e1a:	41 15       	cp	r20, r1
     e1c:	51 05       	cpc	r21, r1
     e1e:	41 f4       	brne	.+16     	; 0xe30 <malloc+0xf0>
		cp = STACK_POINTER() - __malloc_margin;
     e20:	4d b7       	in	r20, 0x3d	; 61
     e22:	5e b7       	in	r21, 0x3e	; 62
     e24:	80 91 01 02 	lds	r24, 0x0201
     e28:	90 91 02 02 	lds	r25, 0x0202
     e2c:	48 1b       	sub	r20, r24
     e2e:	59 0b       	sbc	r21, r25
	if (cp <= __brkval)
     e30:	20 91 8c 0e 	lds	r18, 0x0E8C
     e34:	30 91 8d 0e 	lds	r19, 0x0E8D
     e38:	24 17       	cp	r18, r20
     e3a:	35 07       	cpc	r19, r21
     e3c:	b0 f4       	brcc	.+44     	; 0xe6a <malloc+0x12a>
	  /*
	   * Memory exhausted.
	   */
	  return 0;
	avail = cp - __brkval;
     e3e:	ca 01       	movw	r24, r20
     e40:	82 1b       	sub	r24, r18
     e42:	93 0b       	sbc	r25, r19
	/*
	 * Both tests below are needed to catch the case len >= 0xfffe.
	 */
	if (avail >= len && avail >= len + sizeof(size_t)) {
     e44:	86 17       	cp	r24, r22
     e46:	97 07       	cpc	r25, r23
     e48:	80 f0       	brcs	.+32     	; 0xe6a <malloc+0x12a>
     e4a:	ab 01       	movw	r20, r22
     e4c:	4e 5f       	subi	r20, 0xFE	; 254
     e4e:	5f 4f       	sbci	r21, 0xFF	; 255
     e50:	84 17       	cp	r24, r20
     e52:	95 07       	cpc	r25, r21
     e54:	50 f0       	brcs	.+20     	; 0xe6a <malloc+0x12a>
		fp1 = (struct __freelist *)__brkval;
		__brkval += len + sizeof(size_t);
     e56:	42 0f       	add	r20, r18
     e58:	53 1f       	adc	r21, r19
     e5a:	50 93 8d 0e 	sts	0x0E8D, r21
     e5e:	40 93 8c 0e 	sts	0x0E8C, r20
		fp1->sz = len;
     e62:	f9 01       	movw	r30, r18
     e64:	61 93       	st	Z+, r22
     e66:	71 93       	st	Z+, r23
     e68:	02 c0       	rjmp	.+4      	; 0xe6e <malloc+0x12e>
		return &(fp1->nx);
     e6a:	e0 e0       	ldi	r30, 0x00	; 0
     e6c:	f0 e0       	ldi	r31, 0x00	; 0
	}
	/*
	 * Step 4: There's no help, just fail. :-/
	 */
	return 0;
}
     e6e:	cf 01       	movw	r24, r30
     e70:	df 91       	pop	r29
     e72:	cf 91       	pop	r28
     e74:	1f 91       	pop	r17
     e76:	0f 91       	pop	r16
     e78:	08 95       	ret

00000e7a <free>:
{
	struct __freelist *fp1, *fp2, *fpnew;
	char *cp1, *cp2, *cpnew;

	/* ISO C says free(NULL) must be a no-op */
	if (p == 0)
     e7a:	cf 93       	push	r28
     e7c:	df 93       	push	r29
     e7e:	9c 01       	movw	r18, r24
     e80:	00 97       	sbiw	r24, 0x00	; 0
     e82:	09 f4       	brne	.+2      	; 0xe86 <free+0xc>
     e84:	8f c0       	rjmp	.+286    	; 0xfa4 <free+0x12a>
		return;

	cpnew = p;
	cpnew -= sizeof(size_t);
     e86:	ec 01       	movw	r28, r24
     e88:	22 97       	sbiw	r28, 0x02	; 2
	fpnew = (struct __freelist *)cpnew;
	fpnew->nx = 0;
     e8a:	1b 82       	std	Y+3, r1	; 0x03
     e8c:	1a 82       	std	Y+2, r1	; 0x02
	/*
	 * Trivial case first: if there's no freelist yet, our entry
	 * will be the only one on it.  If this is the last entry, we
	 * can reduce __brkval instead.
	 */
	if (__flp == 0) {
     e8e:	60 91 8e 0e 	lds	r22, 0x0E8E
     e92:	70 91 8f 0e 	lds	r23, 0x0E8F
     e96:	61 15       	cp	r22, r1
     e98:	71 05       	cpc	r23, r1
     e9a:	81 f4       	brne	.+32     	; 0xebc <free+0x42>
		if ((char *)p + fpnew->sz == __brkval)
     e9c:	88 81       	ld	r24, Y
     e9e:	99 81       	ldd	r25, Y+1	; 0x01
     ea0:	82 0f       	add	r24, r18
     ea2:	93 1f       	adc	r25, r19
     ea4:	20 91 8c 0e 	lds	r18, 0x0E8C
     ea8:	30 91 8d 0e 	lds	r19, 0x0E8D
     eac:	28 17       	cp	r18, r24
     eae:	39 07       	cpc	r19, r25
     eb0:	39 f5       	brne	.+78     	; 0xf00 <free+0x86>
			__brkval = cpnew;
     eb2:	d0 93 8d 0e 	sts	0x0E8D, r29
     eb6:	c0 93 8c 0e 	sts	0x0E8C, r28
     eba:	74 c0       	rjmp	.+232    	; 0xfa4 <free+0x12a>
		else
			__flp = fpnew;
     ebc:	db 01       	movw	r26, r22
     ebe:	40 e0       	ldi	r20, 0x00	; 0
     ec0:	50 e0       	ldi	r21, 0x00	; 0
	 * if possible.
	 */
	for (fp1 = __flp, fp2 = 0;
	     fp1;
	     fp2 = fp1, fp1 = fp1->nx) {
		if (fp1 < fpnew)
     ec2:	ac 17       	cp	r26, r28
     ec4:	bd 07       	cpc	r27, r29
     ec6:	08 f1       	brcs	.+66     	; 0xf0a <free+0x90>
			continue;
		cp1 = (char *)fp1;
		fpnew->nx = fp1;
     ec8:	bb 83       	std	Y+3, r27	; 0x03
     eca:	aa 83       	std	Y+2, r26	; 0x02
		if ((char *)&(fpnew->nx) + fpnew->sz == cp1) {
     ecc:	fe 01       	movw	r30, r28
     ece:	21 91       	ld	r18, Z+
     ed0:	31 91       	ld	r19, Z+
     ed2:	e2 0f       	add	r30, r18
     ed4:	f3 1f       	adc	r31, r19
     ed6:	ae 17       	cp	r26, r30
     ed8:	bf 07       	cpc	r27, r31
     eda:	79 f4       	brne	.+30     	; 0xefa <free+0x80>
			/* upper chunk adjacent, assimilate it */
			fpnew->sz += fp1->sz + sizeof(size_t);
     edc:	8d 91       	ld	r24, X+
     ede:	9c 91       	ld	r25, X
     ee0:	11 97       	sbiw	r26, 0x01	; 1
     ee2:	28 0f       	add	r18, r24
     ee4:	39 1f       	adc	r19, r25
     ee6:	2e 5f       	subi	r18, 0xFE	; 254
     ee8:	3f 4f       	sbci	r19, 0xFF	; 255
     eea:	39 83       	std	Y+1, r19	; 0x01
     eec:	28 83       	st	Y, r18
			fpnew->nx = fp1->nx;
     eee:	12 96       	adiw	r26, 0x02	; 2
     ef0:	8d 91       	ld	r24, X+
     ef2:	9c 91       	ld	r25, X
     ef4:	13 97       	sbiw	r26, 0x03	; 3
     ef6:	9b 83       	std	Y+3, r25	; 0x03
     ef8:	8a 83       	std	Y+2, r24	; 0x02
		}
		if (fp2 == 0) {
     efa:	41 15       	cp	r20, r1
     efc:	51 05       	cpc	r21, r1
     efe:	71 f4       	brne	.+28     	; 0xf1c <free+0xa2>
			/* new head of freelist */
			__flp = fpnew;
     f00:	d0 93 8f 0e 	sts	0x0E8F, r29
     f04:	c0 93 8e 0e 	sts	0x0E8E, r28
     f08:	4d c0       	rjmp	.+154    	; 0xfa4 <free+0x12a>
	 * freelist.  Try to aggregate the chunk with adjacent chunks
	 * if possible.
	 */
	for (fp1 = __flp, fp2 = 0;
	     fp1;
	     fp2 = fp1, fp1 = fp1->nx) {
     f0a:	12 96       	adiw	r26, 0x02	; 2
     f0c:	8d 91       	ld	r24, X+
     f0e:	9c 91       	ld	r25, X
     f10:	13 97       	sbiw	r26, 0x03	; 3
     f12:	ad 01       	movw	r20, r26
	 * Now, find the position where our new entry belongs onto the
	 * freelist.  Try to aggregate the chunk with adjacent chunks
	 * if possible.
	 */
	for (fp1 = __flp, fp2 = 0;
	     fp1;
     f14:	00 97       	sbiw	r24, 0x00	; 0
     f16:	11 f0       	breq	.+4      	; 0xf1c <free+0xa2>
     f18:	dc 01       	movw	r26, r24
     f1a:	d3 cf       	rjmp	.-90     	; 0xec2 <free+0x48>
	 * Note that we get here either if we hit the "break" above,
	 * or if we fell off the end of the loop.  The latter means
	 * we've got a new topmost chunk.  Either way, try aggregating
	 * with the lower chunk if possible.
	 */
	fp2->nx = fpnew;
     f1c:	da 01       	movw	r26, r20
     f1e:	13 96       	adiw	r26, 0x03	; 3
     f20:	dc 93       	st	X, r29
     f22:	ce 93       	st	-X, r28
     f24:	12 97       	sbiw	r26, 0x02	; 2
	cp2 = (char *)&(fp2->nx);
	if (cp2 + fp2->sz == cpnew) {
     f26:	fa 01       	movw	r30, r20
     f28:	21 91       	ld	r18, Z+
     f2a:	31 91       	ld	r19, Z+
     f2c:	e2 0f       	add	r30, r18
     f2e:	f3 1f       	adc	r31, r19
     f30:	ce 17       	cp	r28, r30
     f32:	df 07       	cpc	r29, r31
     f34:	69 f4       	brne	.+26     	; 0xf50 <free+0xd6>
		/* lower junk adjacent, merge */
		fp2->sz += fpnew->sz + sizeof(size_t);
     f36:	88 81       	ld	r24, Y
     f38:	99 81       	ldd	r25, Y+1	; 0x01
     f3a:	28 0f       	add	r18, r24
     f3c:	39 1f       	adc	r19, r25
     f3e:	2e 5f       	subi	r18, 0xFE	; 254
     f40:	3f 4f       	sbci	r19, 0xFF	; 255
     f42:	fa 01       	movw	r30, r20
     f44:	31 83       	std	Z+1, r19	; 0x01
     f46:	20 83       	st	Z, r18
		fp2->nx = fpnew->nx;
     f48:	8a 81       	ldd	r24, Y+2	; 0x02
     f4a:	9b 81       	ldd	r25, Y+3	; 0x03
     f4c:	93 83       	std	Z+3, r25	; 0x03
     f4e:	82 83       	std	Z+2, r24	; 0x02
     f50:	e0 e0       	ldi	r30, 0x00	; 0
     f52:	f0 e0       	ldi	r31, 0x00	; 0
	}
	/*
	 * If there's a new topmost chunk, lower __brkval instead.
	 */
	for (fp1 = __flp, fp2 = 0;
	     fp1->nx != 0;
     f54:	db 01       	movw	r26, r22
     f56:	12 96       	adiw	r26, 0x02	; 2
     f58:	8d 91       	ld	r24, X+
     f5a:	9c 91       	ld	r25, X
     f5c:	13 97       	sbiw	r26, 0x03	; 3
     f5e:	00 97       	sbiw	r24, 0x00	; 0
     f60:	19 f0       	breq	.+6      	; 0xf68 <free+0xee>
     f62:	bc 01       	movw	r22, r24
     f64:	fd 01       	movw	r30, r26
     f66:	f6 cf       	rjmp	.-20     	; 0xf54 <free+0xda>
	     fp2 = fp1, fp1 = fp1->nx)
		/* advance to entry just before end of list */;
	cp2 = (char *)&(fp1->nx);
     f68:	ab 01       	movw	r20, r22
     f6a:	4e 5f       	subi	r20, 0xFE	; 254
     f6c:	5f 4f       	sbci	r21, 0xFF	; 255
	if (cp2 + fp1->sz == __brkval) {
     f6e:	db 01       	movw	r26, r22
     f70:	8d 91       	ld	r24, X+
     f72:	9c 91       	ld	r25, X
     f74:	84 0f       	add	r24, r20
     f76:	95 1f       	adc	r25, r21
     f78:	20 91 8c 0e 	lds	r18, 0x0E8C
     f7c:	30 91 8d 0e 	lds	r19, 0x0E8D
     f80:	28 17       	cp	r18, r24
     f82:	39 07       	cpc	r19, r25
     f84:	79 f4       	brne	.+30     	; 0xfa4 <free+0x12a>
		if (fp2 == NULL)
     f86:	30 97       	sbiw	r30, 0x00	; 0
     f88:	29 f4       	brne	.+10     	; 0xf94 <free+0x11a>
			/* Freelist is empty now. */
			__flp = NULL;
     f8a:	10 92 8f 0e 	sts	0x0E8F, r1
     f8e:	10 92 8e 0e 	sts	0x0E8E, r1
     f92:	02 c0       	rjmp	.+4      	; 0xf98 <free+0x11e>
		else
			fp2->nx = NULL;
     f94:	13 82       	std	Z+3, r1	; 0x03
     f96:	12 82       	std	Z+2, r1	; 0x02
		__brkval = cp2 - sizeof(size_t);
     f98:	42 50       	subi	r20, 0x02	; 2
     f9a:	50 40       	sbci	r21, 0x00	; 0
     f9c:	50 93 8d 0e 	sts	0x0E8D, r21
     fa0:	40 93 8c 0e 	sts	0x0E8C, r20
	}
}
     fa4:	df 91       	pop	r29
     fa6:	cf 91       	pop	r28
     fa8:	08 95       	ret

00000faa <__divmodhi4>:
     faa:	97 fb       	bst	r25, 7
     fac:	07 2e       	mov	r0, r23
     fae:	16 f4       	brtc	.+4      	; 0xfb4 <__divmodhi4+0xa>
     fb0:	00 94       	com	r0
     fb2:	06 d0       	rcall	.+12     	; 0xfc0 <__divmodhi4_neg1>
     fb4:	77 fd       	sbrc	r23, 7
     fb6:	08 d0       	rcall	.+16     	; 0xfc8 <__divmodhi4_neg2>
     fb8:	0b d0       	rcall	.+22     	; 0xfd0 <__udivmodhi4>
     fba:	07 fc       	sbrc	r0, 7
     fbc:	05 d0       	rcall	.+10     	; 0xfc8 <__divmodhi4_neg2>
     fbe:	3e f4       	brtc	.+14     	; 0xfce <__divmodhi4_exit>

00000fc0 <__divmodhi4_neg1>:
     fc0:	90 95       	com	r25
     fc2:	81 95       	neg	r24
     fc4:	9f 4f       	sbci	r25, 0xFF	; 255
     fc6:	08 95       	ret

00000fc8 <__divmodhi4_neg2>:
     fc8:	70 95       	com	r23
     fca:	61 95       	neg	r22
     fcc:	7f 4f       	sbci	r23, 0xFF	; 255

00000fce <__divmodhi4_exit>:
     fce:	08 95       	ret

00000fd0 <__udivmodhi4>:
     fd0:	aa 1b       	sub	r26, r26
     fd2:	bb 1b       	sub	r27, r27
     fd4:	51 e1       	ldi	r21, 0x11	; 17
     fd6:	07 c0       	rjmp	.+14     	; 0xfe6 <__udivmodhi4_ep>

00000fd8 <__udivmodhi4_loop>:
     fd8:	aa 1f       	adc	r26, r26
     fda:	bb 1f       	adc	r27, r27
     fdc:	a6 17       	cp	r26, r22
     fde:	b7 07       	cpc	r27, r23
     fe0:	10 f0       	brcs	.+4      	; 0xfe6 <__udivmodhi4_ep>
     fe2:	a6 1b       	sub	r26, r22
     fe4:	b7 0b       	sbc	r27, r23

00000fe6 <__udivmodhi4_ep>:
     fe6:	88 1f       	adc	r24, r24
     fe8:	99 1f       	adc	r25, r25
     fea:	5a 95       	dec	r21
     fec:	a9 f7       	brne	.-22     	; 0xfd8 <__udivmodhi4_loop>
     fee:	80 95       	com	r24
     ff0:	90 95       	com	r25
     ff2:	bc 01       	movw	r22, r24
     ff4:	cd 01       	movw	r24, r26
     ff6:	08 95       	ret

00000ff8 <sprintf>:
     ff8:	0f 93       	push	r16
     ffa:	1f 93       	push	r17
     ffc:	cf 93       	push	r28
     ffe:	df 93       	push	r29
    1000:	cd b7       	in	r28, 0x3d	; 61
    1002:	de b7       	in	r29, 0x3e	; 62
    1004:	2e 97       	sbiw	r28, 0x0e	; 14
    1006:	0f b6       	in	r0, 0x3f	; 63
    1008:	f8 94       	cli
    100a:	de bf       	out	0x3e, r29	; 62
    100c:	0f be       	out	0x3f, r0	; 63
    100e:	cd bf       	out	0x3d, r28	; 61
    1010:	0e 89       	ldd	r16, Y+22	; 0x16
    1012:	1f 89       	ldd	r17, Y+23	; 0x17
    1014:	86 e0       	ldi	r24, 0x06	; 6
    1016:	8c 83       	std	Y+4, r24	; 0x04
    1018:	1a 83       	std	Y+2, r17	; 0x02
    101a:	09 83       	std	Y+1, r16	; 0x01
    101c:	8f ef       	ldi	r24, 0xFF	; 255
    101e:	9f e7       	ldi	r25, 0x7F	; 127
    1020:	9e 83       	std	Y+6, r25	; 0x06
    1022:	8d 83       	std	Y+5, r24	; 0x05
    1024:	ae 01       	movw	r20, r28
    1026:	46 5e       	subi	r20, 0xE6	; 230
    1028:	5f 4f       	sbci	r21, 0xFF	; 255
    102a:	68 8d       	ldd	r22, Y+24	; 0x18
    102c:	79 8d       	ldd	r23, Y+25	; 0x19
    102e:	ce 01       	movw	r24, r28
    1030:	01 96       	adiw	r24, 0x01	; 1
    1032:	10 d0       	rcall	.+32     	; 0x1054 <vfprintf>
    1034:	ef 81       	ldd	r30, Y+7	; 0x07
    1036:	f8 85       	ldd	r31, Y+8	; 0x08
    1038:	e0 0f       	add	r30, r16
    103a:	f1 1f       	adc	r31, r17
    103c:	10 82       	st	Z, r1
    103e:	2e 96       	adiw	r28, 0x0e	; 14
    1040:	0f b6       	in	r0, 0x3f	; 63
    1042:	f8 94       	cli
    1044:	de bf       	out	0x3e, r29	; 62
    1046:	0f be       	out	0x3f, r0	; 63
    1048:	cd bf       	out	0x3d, r28	; 61
    104a:	df 91       	pop	r29
    104c:	cf 91       	pop	r28
    104e:	1f 91       	pop	r17
    1050:	0f 91       	pop	r16
    1052:	08 95       	ret

00001054 <vfprintf>:
    1054:	2f 92       	push	r2
    1056:	3f 92       	push	r3
    1058:	4f 92       	push	r4
    105a:	5f 92       	push	r5
    105c:	6f 92       	push	r6
    105e:	7f 92       	push	r7
    1060:	8f 92       	push	r8
    1062:	9f 92       	push	r9
    1064:	af 92       	push	r10
    1066:	bf 92       	push	r11
    1068:	cf 92       	push	r12
    106a:	df 92       	push	r13
    106c:	ef 92       	push	r14
    106e:	ff 92       	push	r15
    1070:	0f 93       	push	r16
    1072:	1f 93       	push	r17
    1074:	cf 93       	push	r28
    1076:	df 93       	push	r29
    1078:	cd b7       	in	r28, 0x3d	; 61
    107a:	de b7       	in	r29, 0x3e	; 62
    107c:	2c 97       	sbiw	r28, 0x0c	; 12
    107e:	0f b6       	in	r0, 0x3f	; 63
    1080:	f8 94       	cli
    1082:	de bf       	out	0x3e, r29	; 62
    1084:	0f be       	out	0x3f, r0	; 63
    1086:	cd bf       	out	0x3d, r28	; 61
    1088:	7c 01       	movw	r14, r24
    108a:	6b 01       	movw	r12, r22
    108c:	8a 01       	movw	r16, r20
    108e:	fc 01       	movw	r30, r24
    1090:	17 82       	std	Z+7, r1	; 0x07
    1092:	16 82       	std	Z+6, r1	; 0x06
    1094:	83 81       	ldd	r24, Z+3	; 0x03
    1096:	81 ff       	sbrs	r24, 1
    1098:	b0 c1       	rjmp	.+864    	; 0x13fa <vfprintf+0x3a6>
    109a:	ce 01       	movw	r24, r28
    109c:	01 96       	adiw	r24, 0x01	; 1
    109e:	4c 01       	movw	r8, r24
    10a0:	f7 01       	movw	r30, r14
    10a2:	93 81       	ldd	r25, Z+3	; 0x03
    10a4:	f6 01       	movw	r30, r12
    10a6:	93 fd       	sbrc	r25, 3
    10a8:	85 91       	lpm	r24, Z+
    10aa:	93 ff       	sbrs	r25, 3
    10ac:	81 91       	ld	r24, Z+
    10ae:	6f 01       	movw	r12, r30
    10b0:	88 23       	and	r24, r24
    10b2:	09 f4       	brne	.+2      	; 0x10b6 <vfprintf+0x62>
    10b4:	9e c1       	rjmp	.+828    	; 0x13f2 <vfprintf+0x39e>
    10b6:	85 32       	cpi	r24, 0x25	; 37
    10b8:	39 f4       	brne	.+14     	; 0x10c8 <vfprintf+0x74>
    10ba:	93 fd       	sbrc	r25, 3
    10bc:	85 91       	lpm	r24, Z+
    10be:	93 ff       	sbrs	r25, 3
    10c0:	81 91       	ld	r24, Z+
    10c2:	6f 01       	movw	r12, r30
    10c4:	85 32       	cpi	r24, 0x25	; 37
    10c6:	21 f4       	brne	.+8      	; 0x10d0 <vfprintf+0x7c>
    10c8:	b7 01       	movw	r22, r14
    10ca:	90 e0       	ldi	r25, 0x00	; 0
    10cc:	c7 d1       	rcall	.+910    	; 0x145c <fputc>
    10ce:	e8 cf       	rjmp	.-48     	; 0x10a0 <vfprintf+0x4c>
    10d0:	51 2c       	mov	r5, r1
    10d2:	31 2c       	mov	r3, r1
    10d4:	20 e0       	ldi	r18, 0x00	; 0
    10d6:	20 32       	cpi	r18, 0x20	; 32
    10d8:	a0 f4       	brcc	.+40     	; 0x1102 <vfprintf+0xae>
    10da:	8b 32       	cpi	r24, 0x2B	; 43
    10dc:	69 f0       	breq	.+26     	; 0x10f8 <vfprintf+0xa4>
    10de:	30 f4       	brcc	.+12     	; 0x10ec <vfprintf+0x98>
    10e0:	80 32       	cpi	r24, 0x20	; 32
    10e2:	59 f0       	breq	.+22     	; 0x10fa <vfprintf+0xa6>
    10e4:	83 32       	cpi	r24, 0x23	; 35
    10e6:	69 f4       	brne	.+26     	; 0x1102 <vfprintf+0xae>
    10e8:	20 61       	ori	r18, 0x10	; 16
    10ea:	2c c0       	rjmp	.+88     	; 0x1144 <vfprintf+0xf0>
    10ec:	8d 32       	cpi	r24, 0x2D	; 45
    10ee:	39 f0       	breq	.+14     	; 0x10fe <vfprintf+0xaa>
    10f0:	80 33       	cpi	r24, 0x30	; 48
    10f2:	39 f4       	brne	.+14     	; 0x1102 <vfprintf+0xae>
    10f4:	21 60       	ori	r18, 0x01	; 1
    10f6:	26 c0       	rjmp	.+76     	; 0x1144 <vfprintf+0xf0>
    10f8:	22 60       	ori	r18, 0x02	; 2
    10fa:	24 60       	ori	r18, 0x04	; 4
    10fc:	23 c0       	rjmp	.+70     	; 0x1144 <vfprintf+0xf0>
    10fe:	28 60       	ori	r18, 0x08	; 8
    1100:	21 c0       	rjmp	.+66     	; 0x1144 <vfprintf+0xf0>
    1102:	27 fd       	sbrc	r18, 7
    1104:	27 c0       	rjmp	.+78     	; 0x1154 <vfprintf+0x100>
    1106:	30 ed       	ldi	r19, 0xD0	; 208
    1108:	38 0f       	add	r19, r24
    110a:	3a 30       	cpi	r19, 0x0A	; 10
    110c:	78 f4       	brcc	.+30     	; 0x112c <vfprintf+0xd8>
    110e:	26 ff       	sbrs	r18, 6
    1110:	06 c0       	rjmp	.+12     	; 0x111e <vfprintf+0xca>
    1112:	fa e0       	ldi	r31, 0x0A	; 10
    1114:	5f 9e       	mul	r5, r31
    1116:	30 0d       	add	r19, r0
    1118:	11 24       	eor	r1, r1
    111a:	53 2e       	mov	r5, r19
    111c:	13 c0       	rjmp	.+38     	; 0x1144 <vfprintf+0xf0>
    111e:	8a e0       	ldi	r24, 0x0A	; 10
    1120:	38 9e       	mul	r3, r24
    1122:	30 0d       	add	r19, r0
    1124:	11 24       	eor	r1, r1
    1126:	33 2e       	mov	r3, r19
    1128:	20 62       	ori	r18, 0x20	; 32
    112a:	0c c0       	rjmp	.+24     	; 0x1144 <vfprintf+0xf0>
    112c:	8e 32       	cpi	r24, 0x2E	; 46
    112e:	21 f4       	brne	.+8      	; 0x1138 <vfprintf+0xe4>
    1130:	26 fd       	sbrc	r18, 6
    1132:	5f c1       	rjmp	.+702    	; 0x13f2 <vfprintf+0x39e>
    1134:	20 64       	ori	r18, 0x40	; 64
    1136:	06 c0       	rjmp	.+12     	; 0x1144 <vfprintf+0xf0>
    1138:	8c 36       	cpi	r24, 0x6C	; 108
    113a:	11 f4       	brne	.+4      	; 0x1140 <vfprintf+0xec>
    113c:	20 68       	ori	r18, 0x80	; 128
    113e:	02 c0       	rjmp	.+4      	; 0x1144 <vfprintf+0xf0>
    1140:	88 36       	cpi	r24, 0x68	; 104
    1142:	41 f4       	brne	.+16     	; 0x1154 <vfprintf+0x100>
    1144:	f6 01       	movw	r30, r12
    1146:	93 fd       	sbrc	r25, 3
    1148:	85 91       	lpm	r24, Z+
    114a:	93 ff       	sbrs	r25, 3
    114c:	81 91       	ld	r24, Z+
    114e:	6f 01       	movw	r12, r30
    1150:	81 11       	cpse	r24, r1
    1152:	c1 cf       	rjmp	.-126    	; 0x10d6 <vfprintf+0x82>
    1154:	98 2f       	mov	r25, r24
    1156:	9f 7d       	andi	r25, 0xDF	; 223
    1158:	95 54       	subi	r25, 0x45	; 69
    115a:	93 30       	cpi	r25, 0x03	; 3
    115c:	28 f4       	brcc	.+10     	; 0x1168 <vfprintf+0x114>
    115e:	0c 5f       	subi	r16, 0xFC	; 252
    1160:	1f 4f       	sbci	r17, 0xFF	; 255
    1162:	ff e3       	ldi	r31, 0x3F	; 63
    1164:	f9 83       	std	Y+1, r31	; 0x01
    1166:	0d c0       	rjmp	.+26     	; 0x1182 <vfprintf+0x12e>
    1168:	83 36       	cpi	r24, 0x63	; 99
    116a:	31 f0       	breq	.+12     	; 0x1178 <vfprintf+0x124>
    116c:	83 37       	cpi	r24, 0x73	; 115
    116e:	71 f0       	breq	.+28     	; 0x118c <vfprintf+0x138>
    1170:	83 35       	cpi	r24, 0x53	; 83
    1172:	09 f0       	breq	.+2      	; 0x1176 <vfprintf+0x122>
    1174:	57 c0       	rjmp	.+174    	; 0x1224 <vfprintf+0x1d0>
    1176:	21 c0       	rjmp	.+66     	; 0x11ba <vfprintf+0x166>
    1178:	f8 01       	movw	r30, r16
    117a:	80 81       	ld	r24, Z
    117c:	89 83       	std	Y+1, r24	; 0x01
    117e:	0e 5f       	subi	r16, 0xFE	; 254
    1180:	1f 4f       	sbci	r17, 0xFF	; 255
    1182:	44 24       	eor	r4, r4
    1184:	43 94       	inc	r4
    1186:	51 2c       	mov	r5, r1
    1188:	54 01       	movw	r10, r8
    118a:	14 c0       	rjmp	.+40     	; 0x11b4 <vfprintf+0x160>
    118c:	38 01       	movw	r6, r16
    118e:	f2 e0       	ldi	r31, 0x02	; 2
    1190:	6f 0e       	add	r6, r31
    1192:	71 1c       	adc	r7, r1
    1194:	f8 01       	movw	r30, r16
    1196:	a0 80       	ld	r10, Z
    1198:	b1 80       	ldd	r11, Z+1	; 0x01
    119a:	26 ff       	sbrs	r18, 6
    119c:	03 c0       	rjmp	.+6      	; 0x11a4 <vfprintf+0x150>
    119e:	65 2d       	mov	r22, r5
    11a0:	70 e0       	ldi	r23, 0x00	; 0
    11a2:	02 c0       	rjmp	.+4      	; 0x11a8 <vfprintf+0x154>
    11a4:	6f ef       	ldi	r22, 0xFF	; 255
    11a6:	7f ef       	ldi	r23, 0xFF	; 255
    11a8:	c5 01       	movw	r24, r10
    11aa:	2c 87       	std	Y+12, r18	; 0x0c
    11ac:	4c d1       	rcall	.+664    	; 0x1446 <strnlen>
    11ae:	2c 01       	movw	r4, r24
    11b0:	83 01       	movw	r16, r6
    11b2:	2c 85       	ldd	r18, Y+12	; 0x0c
    11b4:	2f 77       	andi	r18, 0x7F	; 127
    11b6:	22 2e       	mov	r2, r18
    11b8:	16 c0       	rjmp	.+44     	; 0x11e6 <vfprintf+0x192>
    11ba:	38 01       	movw	r6, r16
    11bc:	f2 e0       	ldi	r31, 0x02	; 2
    11be:	6f 0e       	add	r6, r31
    11c0:	71 1c       	adc	r7, r1
    11c2:	f8 01       	movw	r30, r16
    11c4:	a0 80       	ld	r10, Z
    11c6:	b1 80       	ldd	r11, Z+1	; 0x01
    11c8:	26 ff       	sbrs	r18, 6
    11ca:	03 c0       	rjmp	.+6      	; 0x11d2 <vfprintf+0x17e>
    11cc:	65 2d       	mov	r22, r5
    11ce:	70 e0       	ldi	r23, 0x00	; 0
    11d0:	02 c0       	rjmp	.+4      	; 0x11d6 <vfprintf+0x182>
    11d2:	6f ef       	ldi	r22, 0xFF	; 255
    11d4:	7f ef       	ldi	r23, 0xFF	; 255
    11d6:	c5 01       	movw	r24, r10
    11d8:	2c 87       	std	Y+12, r18	; 0x0c
    11da:	2a d1       	rcall	.+596    	; 0x1430 <strnlen_P>
    11dc:	2c 01       	movw	r4, r24
    11de:	2c 85       	ldd	r18, Y+12	; 0x0c
    11e0:	20 68       	ori	r18, 0x80	; 128
    11e2:	22 2e       	mov	r2, r18
    11e4:	83 01       	movw	r16, r6
    11e6:	23 fc       	sbrc	r2, 3
    11e8:	19 c0       	rjmp	.+50     	; 0x121c <vfprintf+0x1c8>
    11ea:	83 2d       	mov	r24, r3
    11ec:	90 e0       	ldi	r25, 0x00	; 0
    11ee:	48 16       	cp	r4, r24
    11f0:	59 06       	cpc	r5, r25
    11f2:	a0 f4       	brcc	.+40     	; 0x121c <vfprintf+0x1c8>
    11f4:	b7 01       	movw	r22, r14
    11f6:	80 e2       	ldi	r24, 0x20	; 32
    11f8:	90 e0       	ldi	r25, 0x00	; 0
    11fa:	30 d1       	rcall	.+608    	; 0x145c <fputc>
    11fc:	3a 94       	dec	r3
    11fe:	f5 cf       	rjmp	.-22     	; 0x11ea <vfprintf+0x196>
    1200:	f5 01       	movw	r30, r10
    1202:	27 fc       	sbrc	r2, 7
    1204:	85 91       	lpm	r24, Z+
    1206:	27 fe       	sbrs	r2, 7
    1208:	81 91       	ld	r24, Z+
    120a:	5f 01       	movw	r10, r30
    120c:	b7 01       	movw	r22, r14
    120e:	90 e0       	ldi	r25, 0x00	; 0
    1210:	25 d1       	rcall	.+586    	; 0x145c <fputc>
    1212:	31 10       	cpse	r3, r1
    1214:	3a 94       	dec	r3
    1216:	f1 e0       	ldi	r31, 0x01	; 1
    1218:	4f 1a       	sub	r4, r31
    121a:	51 08       	sbc	r5, r1
    121c:	41 14       	cp	r4, r1
    121e:	51 04       	cpc	r5, r1
    1220:	79 f7       	brne	.-34     	; 0x1200 <vfprintf+0x1ac>
    1222:	de c0       	rjmp	.+444    	; 0x13e0 <vfprintf+0x38c>
    1224:	84 36       	cpi	r24, 0x64	; 100
    1226:	11 f0       	breq	.+4      	; 0x122c <vfprintf+0x1d8>
    1228:	89 36       	cpi	r24, 0x69	; 105
    122a:	31 f5       	brne	.+76     	; 0x1278 <vfprintf+0x224>
    122c:	f8 01       	movw	r30, r16
    122e:	27 ff       	sbrs	r18, 7
    1230:	07 c0       	rjmp	.+14     	; 0x1240 <vfprintf+0x1ec>
    1232:	60 81       	ld	r22, Z
    1234:	71 81       	ldd	r23, Z+1	; 0x01
    1236:	82 81       	ldd	r24, Z+2	; 0x02
    1238:	93 81       	ldd	r25, Z+3	; 0x03
    123a:	0c 5f       	subi	r16, 0xFC	; 252
    123c:	1f 4f       	sbci	r17, 0xFF	; 255
    123e:	08 c0       	rjmp	.+16     	; 0x1250 <vfprintf+0x1fc>
    1240:	60 81       	ld	r22, Z
    1242:	71 81       	ldd	r23, Z+1	; 0x01
    1244:	88 27       	eor	r24, r24
    1246:	77 fd       	sbrc	r23, 7
    1248:	80 95       	com	r24
    124a:	98 2f       	mov	r25, r24
    124c:	0e 5f       	subi	r16, 0xFE	; 254
    124e:	1f 4f       	sbci	r17, 0xFF	; 255
    1250:	2f 76       	andi	r18, 0x6F	; 111
    1252:	b2 2e       	mov	r11, r18
    1254:	97 ff       	sbrs	r25, 7
    1256:	09 c0       	rjmp	.+18     	; 0x126a <vfprintf+0x216>
    1258:	90 95       	com	r25
    125a:	80 95       	com	r24
    125c:	70 95       	com	r23
    125e:	61 95       	neg	r22
    1260:	7f 4f       	sbci	r23, 0xFF	; 255
    1262:	8f 4f       	sbci	r24, 0xFF	; 255
    1264:	9f 4f       	sbci	r25, 0xFF	; 255
    1266:	20 68       	ori	r18, 0x80	; 128
    1268:	b2 2e       	mov	r11, r18
    126a:	2a e0       	ldi	r18, 0x0A	; 10
    126c:	30 e0       	ldi	r19, 0x00	; 0
    126e:	a4 01       	movw	r20, r8
    1270:	27 d1       	rcall	.+590    	; 0x14c0 <__ultoa_invert>
    1272:	a8 2e       	mov	r10, r24
    1274:	a8 18       	sub	r10, r8
    1276:	43 c0       	rjmp	.+134    	; 0x12fe <vfprintf+0x2aa>
    1278:	85 37       	cpi	r24, 0x75	; 117
    127a:	29 f4       	brne	.+10     	; 0x1286 <vfprintf+0x232>
    127c:	2f 7e       	andi	r18, 0xEF	; 239
    127e:	b2 2e       	mov	r11, r18
    1280:	2a e0       	ldi	r18, 0x0A	; 10
    1282:	30 e0       	ldi	r19, 0x00	; 0
    1284:	25 c0       	rjmp	.+74     	; 0x12d0 <vfprintf+0x27c>
    1286:	f2 2f       	mov	r31, r18
    1288:	f9 7f       	andi	r31, 0xF9	; 249
    128a:	bf 2e       	mov	r11, r31
    128c:	8f 36       	cpi	r24, 0x6F	; 111
    128e:	c1 f0       	breq	.+48     	; 0x12c0 <vfprintf+0x26c>
    1290:	18 f4       	brcc	.+6      	; 0x1298 <vfprintf+0x244>
    1292:	88 35       	cpi	r24, 0x58	; 88
    1294:	79 f0       	breq	.+30     	; 0x12b4 <vfprintf+0x260>
    1296:	ad c0       	rjmp	.+346    	; 0x13f2 <vfprintf+0x39e>
    1298:	80 37       	cpi	r24, 0x70	; 112
    129a:	19 f0       	breq	.+6      	; 0x12a2 <vfprintf+0x24e>
    129c:	88 37       	cpi	r24, 0x78	; 120
    129e:	21 f0       	breq	.+8      	; 0x12a8 <vfprintf+0x254>
    12a0:	a8 c0       	rjmp	.+336    	; 0x13f2 <vfprintf+0x39e>
    12a2:	2f 2f       	mov	r18, r31
    12a4:	20 61       	ori	r18, 0x10	; 16
    12a6:	b2 2e       	mov	r11, r18
    12a8:	b4 fe       	sbrs	r11, 4
    12aa:	0d c0       	rjmp	.+26     	; 0x12c6 <vfprintf+0x272>
    12ac:	8b 2d       	mov	r24, r11
    12ae:	84 60       	ori	r24, 0x04	; 4
    12b0:	b8 2e       	mov	r11, r24
    12b2:	09 c0       	rjmp	.+18     	; 0x12c6 <vfprintf+0x272>
    12b4:	24 ff       	sbrs	r18, 4
    12b6:	0a c0       	rjmp	.+20     	; 0x12cc <vfprintf+0x278>
    12b8:	9f 2f       	mov	r25, r31
    12ba:	96 60       	ori	r25, 0x06	; 6
    12bc:	b9 2e       	mov	r11, r25
    12be:	06 c0       	rjmp	.+12     	; 0x12cc <vfprintf+0x278>
    12c0:	28 e0       	ldi	r18, 0x08	; 8
    12c2:	30 e0       	ldi	r19, 0x00	; 0
    12c4:	05 c0       	rjmp	.+10     	; 0x12d0 <vfprintf+0x27c>
    12c6:	20 e1       	ldi	r18, 0x10	; 16
    12c8:	30 e0       	ldi	r19, 0x00	; 0
    12ca:	02 c0       	rjmp	.+4      	; 0x12d0 <vfprintf+0x27c>
    12cc:	20 e1       	ldi	r18, 0x10	; 16
    12ce:	32 e0       	ldi	r19, 0x02	; 2
    12d0:	f8 01       	movw	r30, r16
    12d2:	b7 fe       	sbrs	r11, 7
    12d4:	07 c0       	rjmp	.+14     	; 0x12e4 <vfprintf+0x290>
    12d6:	60 81       	ld	r22, Z
    12d8:	71 81       	ldd	r23, Z+1	; 0x01
    12da:	82 81       	ldd	r24, Z+2	; 0x02
    12dc:	93 81       	ldd	r25, Z+3	; 0x03
    12de:	0c 5f       	subi	r16, 0xFC	; 252
    12e0:	1f 4f       	sbci	r17, 0xFF	; 255
    12e2:	06 c0       	rjmp	.+12     	; 0x12f0 <vfprintf+0x29c>
    12e4:	60 81       	ld	r22, Z
    12e6:	71 81       	ldd	r23, Z+1	; 0x01
    12e8:	80 e0       	ldi	r24, 0x00	; 0
    12ea:	90 e0       	ldi	r25, 0x00	; 0
    12ec:	0e 5f       	subi	r16, 0xFE	; 254
    12ee:	1f 4f       	sbci	r17, 0xFF	; 255
    12f0:	a4 01       	movw	r20, r8
    12f2:	e6 d0       	rcall	.+460    	; 0x14c0 <__ultoa_invert>
    12f4:	a8 2e       	mov	r10, r24
    12f6:	a8 18       	sub	r10, r8
    12f8:	fb 2d       	mov	r31, r11
    12fa:	ff 77       	andi	r31, 0x7F	; 127
    12fc:	bf 2e       	mov	r11, r31
    12fe:	b6 fe       	sbrs	r11, 6
    1300:	0b c0       	rjmp	.+22     	; 0x1318 <vfprintf+0x2c4>
    1302:	2b 2d       	mov	r18, r11
    1304:	2e 7f       	andi	r18, 0xFE	; 254
    1306:	a5 14       	cp	r10, r5
    1308:	50 f4       	brcc	.+20     	; 0x131e <vfprintf+0x2ca>
    130a:	b4 fe       	sbrs	r11, 4
    130c:	0a c0       	rjmp	.+20     	; 0x1322 <vfprintf+0x2ce>
    130e:	b2 fc       	sbrc	r11, 2
    1310:	08 c0       	rjmp	.+16     	; 0x1322 <vfprintf+0x2ce>
    1312:	2b 2d       	mov	r18, r11
    1314:	2e 7e       	andi	r18, 0xEE	; 238
    1316:	05 c0       	rjmp	.+10     	; 0x1322 <vfprintf+0x2ce>
    1318:	7a 2c       	mov	r7, r10
    131a:	2b 2d       	mov	r18, r11
    131c:	03 c0       	rjmp	.+6      	; 0x1324 <vfprintf+0x2d0>
    131e:	7a 2c       	mov	r7, r10
    1320:	01 c0       	rjmp	.+2      	; 0x1324 <vfprintf+0x2d0>
    1322:	75 2c       	mov	r7, r5
    1324:	24 ff       	sbrs	r18, 4
    1326:	0d c0       	rjmp	.+26     	; 0x1342 <vfprintf+0x2ee>
    1328:	fe 01       	movw	r30, r28
    132a:	ea 0d       	add	r30, r10
    132c:	f1 1d       	adc	r31, r1
    132e:	80 81       	ld	r24, Z
    1330:	80 33       	cpi	r24, 0x30	; 48
    1332:	11 f4       	brne	.+4      	; 0x1338 <vfprintf+0x2e4>
    1334:	29 7e       	andi	r18, 0xE9	; 233
    1336:	09 c0       	rjmp	.+18     	; 0x134a <vfprintf+0x2f6>
    1338:	22 ff       	sbrs	r18, 2
    133a:	06 c0       	rjmp	.+12     	; 0x1348 <vfprintf+0x2f4>
    133c:	73 94       	inc	r7
    133e:	73 94       	inc	r7
    1340:	04 c0       	rjmp	.+8      	; 0x134a <vfprintf+0x2f6>
    1342:	82 2f       	mov	r24, r18
    1344:	86 78       	andi	r24, 0x86	; 134
    1346:	09 f0       	breq	.+2      	; 0x134a <vfprintf+0x2f6>
    1348:	73 94       	inc	r7
    134a:	23 fd       	sbrc	r18, 3
    134c:	12 c0       	rjmp	.+36     	; 0x1372 <vfprintf+0x31e>
    134e:	20 ff       	sbrs	r18, 0
    1350:	06 c0       	rjmp	.+12     	; 0x135e <vfprintf+0x30a>
    1352:	5a 2c       	mov	r5, r10
    1354:	73 14       	cp	r7, r3
    1356:	18 f4       	brcc	.+6      	; 0x135e <vfprintf+0x30a>
    1358:	53 0c       	add	r5, r3
    135a:	57 18       	sub	r5, r7
    135c:	73 2c       	mov	r7, r3
    135e:	73 14       	cp	r7, r3
    1360:	60 f4       	brcc	.+24     	; 0x137a <vfprintf+0x326>
    1362:	b7 01       	movw	r22, r14
    1364:	80 e2       	ldi	r24, 0x20	; 32
    1366:	90 e0       	ldi	r25, 0x00	; 0
    1368:	2c 87       	std	Y+12, r18	; 0x0c
    136a:	78 d0       	rcall	.+240    	; 0x145c <fputc>
    136c:	73 94       	inc	r7
    136e:	2c 85       	ldd	r18, Y+12	; 0x0c
    1370:	f6 cf       	rjmp	.-20     	; 0x135e <vfprintf+0x30a>
    1372:	73 14       	cp	r7, r3
    1374:	10 f4       	brcc	.+4      	; 0x137a <vfprintf+0x326>
    1376:	37 18       	sub	r3, r7
    1378:	01 c0       	rjmp	.+2      	; 0x137c <vfprintf+0x328>
    137a:	31 2c       	mov	r3, r1
    137c:	24 ff       	sbrs	r18, 4
    137e:	11 c0       	rjmp	.+34     	; 0x13a2 <vfprintf+0x34e>
    1380:	b7 01       	movw	r22, r14
    1382:	80 e3       	ldi	r24, 0x30	; 48
    1384:	90 e0       	ldi	r25, 0x00	; 0
    1386:	2c 87       	std	Y+12, r18	; 0x0c
    1388:	69 d0       	rcall	.+210    	; 0x145c <fputc>
    138a:	2c 85       	ldd	r18, Y+12	; 0x0c
    138c:	22 ff       	sbrs	r18, 2
    138e:	16 c0       	rjmp	.+44     	; 0x13bc <vfprintf+0x368>
    1390:	21 ff       	sbrs	r18, 1
    1392:	03 c0       	rjmp	.+6      	; 0x139a <vfprintf+0x346>
    1394:	88 e5       	ldi	r24, 0x58	; 88
    1396:	90 e0       	ldi	r25, 0x00	; 0
    1398:	02 c0       	rjmp	.+4      	; 0x139e <vfprintf+0x34a>
    139a:	88 e7       	ldi	r24, 0x78	; 120
    139c:	90 e0       	ldi	r25, 0x00	; 0
    139e:	b7 01       	movw	r22, r14
    13a0:	0c c0       	rjmp	.+24     	; 0x13ba <vfprintf+0x366>
    13a2:	82 2f       	mov	r24, r18
    13a4:	86 78       	andi	r24, 0x86	; 134
    13a6:	51 f0       	breq	.+20     	; 0x13bc <vfprintf+0x368>
    13a8:	21 fd       	sbrc	r18, 1
    13aa:	02 c0       	rjmp	.+4      	; 0x13b0 <vfprintf+0x35c>
    13ac:	80 e2       	ldi	r24, 0x20	; 32
    13ae:	01 c0       	rjmp	.+2      	; 0x13b2 <vfprintf+0x35e>
    13b0:	8b e2       	ldi	r24, 0x2B	; 43
    13b2:	27 fd       	sbrc	r18, 7
    13b4:	8d e2       	ldi	r24, 0x2D	; 45
    13b6:	b7 01       	movw	r22, r14
    13b8:	90 e0       	ldi	r25, 0x00	; 0
    13ba:	50 d0       	rcall	.+160    	; 0x145c <fputc>
    13bc:	a5 14       	cp	r10, r5
    13be:	30 f4       	brcc	.+12     	; 0x13cc <vfprintf+0x378>
    13c0:	b7 01       	movw	r22, r14
    13c2:	80 e3       	ldi	r24, 0x30	; 48
    13c4:	90 e0       	ldi	r25, 0x00	; 0
    13c6:	4a d0       	rcall	.+148    	; 0x145c <fputc>
    13c8:	5a 94       	dec	r5
    13ca:	f8 cf       	rjmp	.-16     	; 0x13bc <vfprintf+0x368>
    13cc:	aa 94       	dec	r10
    13ce:	f4 01       	movw	r30, r8
    13d0:	ea 0d       	add	r30, r10
    13d2:	f1 1d       	adc	r31, r1
    13d4:	80 81       	ld	r24, Z
    13d6:	b7 01       	movw	r22, r14
    13d8:	90 e0       	ldi	r25, 0x00	; 0
    13da:	40 d0       	rcall	.+128    	; 0x145c <fputc>
    13dc:	a1 10       	cpse	r10, r1
    13de:	f6 cf       	rjmp	.-20     	; 0x13cc <vfprintf+0x378>
    13e0:	33 20       	and	r3, r3
    13e2:	09 f4       	brne	.+2      	; 0x13e6 <vfprintf+0x392>
    13e4:	5d ce       	rjmp	.-838    	; 0x10a0 <vfprintf+0x4c>
    13e6:	b7 01       	movw	r22, r14
    13e8:	80 e2       	ldi	r24, 0x20	; 32
    13ea:	90 e0       	ldi	r25, 0x00	; 0
    13ec:	37 d0       	rcall	.+110    	; 0x145c <fputc>
    13ee:	3a 94       	dec	r3
    13f0:	f7 cf       	rjmp	.-18     	; 0x13e0 <vfprintf+0x38c>
    13f2:	f7 01       	movw	r30, r14
    13f4:	86 81       	ldd	r24, Z+6	; 0x06
    13f6:	97 81       	ldd	r25, Z+7	; 0x07
    13f8:	02 c0       	rjmp	.+4      	; 0x13fe <vfprintf+0x3aa>
    13fa:	8f ef       	ldi	r24, 0xFF	; 255
    13fc:	9f ef       	ldi	r25, 0xFF	; 255
    13fe:	2c 96       	adiw	r28, 0x0c	; 12
    1400:	0f b6       	in	r0, 0x3f	; 63
    1402:	f8 94       	cli
    1404:	de bf       	out	0x3e, r29	; 62
    1406:	0f be       	out	0x3f, r0	; 63
    1408:	cd bf       	out	0x3d, r28	; 61
    140a:	df 91       	pop	r29
    140c:	cf 91       	pop	r28
    140e:	1f 91       	pop	r17
    1410:	0f 91       	pop	r16
    1412:	ff 90       	pop	r15
    1414:	ef 90       	pop	r14
    1416:	df 90       	pop	r13
    1418:	cf 90       	pop	r12
    141a:	bf 90       	pop	r11
    141c:	af 90       	pop	r10
    141e:	9f 90       	pop	r9
    1420:	8f 90       	pop	r8
    1422:	7f 90       	pop	r7
    1424:	6f 90       	pop	r6
    1426:	5f 90       	pop	r5
    1428:	4f 90       	pop	r4
    142a:	3f 90       	pop	r3
    142c:	2f 90       	pop	r2
    142e:	08 95       	ret

00001430 <strnlen_P>:
    1430:	fc 01       	movw	r30, r24
    1432:	05 90       	lpm	r0, Z+
    1434:	61 50       	subi	r22, 0x01	; 1
    1436:	70 40       	sbci	r23, 0x00	; 0
    1438:	01 10       	cpse	r0, r1
    143a:	d8 f7       	brcc	.-10     	; 0x1432 <strnlen_P+0x2>
    143c:	80 95       	com	r24
    143e:	90 95       	com	r25
    1440:	8e 0f       	add	r24, r30
    1442:	9f 1f       	adc	r25, r31
    1444:	08 95       	ret

00001446 <strnlen>:
    1446:	fc 01       	movw	r30, r24
    1448:	61 50       	subi	r22, 0x01	; 1
    144a:	70 40       	sbci	r23, 0x00	; 0
    144c:	01 90       	ld	r0, Z+
    144e:	01 10       	cpse	r0, r1
    1450:	d8 f7       	brcc	.-10     	; 0x1448 <strnlen+0x2>
    1452:	80 95       	com	r24
    1454:	90 95       	com	r25
    1456:	8e 0f       	add	r24, r30
    1458:	9f 1f       	adc	r25, r31
    145a:	08 95       	ret

0000145c <fputc>:
    145c:	0f 93       	push	r16
    145e:	1f 93       	push	r17
    1460:	cf 93       	push	r28
    1462:	df 93       	push	r29
    1464:	18 2f       	mov	r17, r24
    1466:	09 2f       	mov	r16, r25
    1468:	eb 01       	movw	r28, r22
    146a:	8b 81       	ldd	r24, Y+3	; 0x03
    146c:	81 fd       	sbrc	r24, 1
    146e:	03 c0       	rjmp	.+6      	; 0x1476 <fputc+0x1a>
    1470:	8f ef       	ldi	r24, 0xFF	; 255
    1472:	9f ef       	ldi	r25, 0xFF	; 255
    1474:	20 c0       	rjmp	.+64     	; 0x14b6 <fputc+0x5a>
    1476:	82 ff       	sbrs	r24, 2
    1478:	10 c0       	rjmp	.+32     	; 0x149a <fputc+0x3e>
    147a:	4e 81       	ldd	r20, Y+6	; 0x06
    147c:	5f 81       	ldd	r21, Y+7	; 0x07
    147e:	2c 81       	ldd	r18, Y+4	; 0x04
    1480:	3d 81       	ldd	r19, Y+5	; 0x05
    1482:	42 17       	cp	r20, r18
    1484:	53 07       	cpc	r21, r19
    1486:	7c f4       	brge	.+30     	; 0x14a6 <fputc+0x4a>
    1488:	e8 81       	ld	r30, Y
    148a:	f9 81       	ldd	r31, Y+1	; 0x01
    148c:	9f 01       	movw	r18, r30
    148e:	2f 5f       	subi	r18, 0xFF	; 255
    1490:	3f 4f       	sbci	r19, 0xFF	; 255
    1492:	39 83       	std	Y+1, r19	; 0x01
    1494:	28 83       	st	Y, r18
    1496:	10 83       	st	Z, r17
    1498:	06 c0       	rjmp	.+12     	; 0x14a6 <fputc+0x4a>
    149a:	e8 85       	ldd	r30, Y+8	; 0x08
    149c:	f9 85       	ldd	r31, Y+9	; 0x09
    149e:	81 2f       	mov	r24, r17
    14a0:	19 95       	eicall
    14a2:	89 2b       	or	r24, r25
    14a4:	29 f7       	brne	.-54     	; 0x1470 <fputc+0x14>
    14a6:	2e 81       	ldd	r18, Y+6	; 0x06
    14a8:	3f 81       	ldd	r19, Y+7	; 0x07
    14aa:	2f 5f       	subi	r18, 0xFF	; 255
    14ac:	3f 4f       	sbci	r19, 0xFF	; 255
    14ae:	3f 83       	std	Y+7, r19	; 0x07
    14b0:	2e 83       	std	Y+6, r18	; 0x06
    14b2:	81 2f       	mov	r24, r17
    14b4:	90 2f       	mov	r25, r16
    14b6:	df 91       	pop	r29
    14b8:	cf 91       	pop	r28
    14ba:	1f 91       	pop	r17
    14bc:	0f 91       	pop	r16
    14be:	08 95       	ret

000014c0 <__ultoa_invert>:
    14c0:	fa 01       	movw	r30, r20
    14c2:	aa 27       	eor	r26, r26
    14c4:	28 30       	cpi	r18, 0x08	; 8
    14c6:	51 f1       	breq	.+84     	; 0x151c <__ultoa_invert+0x5c>
    14c8:	20 31       	cpi	r18, 0x10	; 16
    14ca:	81 f1       	breq	.+96     	; 0x152c <__ultoa_invert+0x6c>
    14cc:	e8 94       	clt
    14ce:	6f 93       	push	r22
    14d0:	6e 7f       	andi	r22, 0xFE	; 254
    14d2:	6e 5f       	subi	r22, 0xFE	; 254
    14d4:	7f 4f       	sbci	r23, 0xFF	; 255
    14d6:	8f 4f       	sbci	r24, 0xFF	; 255
    14d8:	9f 4f       	sbci	r25, 0xFF	; 255
    14da:	af 4f       	sbci	r26, 0xFF	; 255
    14dc:	b1 e0       	ldi	r27, 0x01	; 1
    14de:	3e d0       	rcall	.+124    	; 0x155c <__ultoa_invert+0x9c>
    14e0:	b4 e0       	ldi	r27, 0x04	; 4
    14e2:	3c d0       	rcall	.+120    	; 0x155c <__ultoa_invert+0x9c>
    14e4:	67 0f       	add	r22, r23
    14e6:	78 1f       	adc	r23, r24
    14e8:	89 1f       	adc	r24, r25
    14ea:	9a 1f       	adc	r25, r26
    14ec:	a1 1d       	adc	r26, r1
    14ee:	68 0f       	add	r22, r24
    14f0:	79 1f       	adc	r23, r25
    14f2:	8a 1f       	adc	r24, r26
    14f4:	91 1d       	adc	r25, r1
    14f6:	a1 1d       	adc	r26, r1
    14f8:	6a 0f       	add	r22, r26
    14fa:	71 1d       	adc	r23, r1
    14fc:	81 1d       	adc	r24, r1
    14fe:	91 1d       	adc	r25, r1
    1500:	a1 1d       	adc	r26, r1
    1502:	20 d0       	rcall	.+64     	; 0x1544 <__ultoa_invert+0x84>
    1504:	09 f4       	brne	.+2      	; 0x1508 <__ultoa_invert+0x48>
    1506:	68 94       	set
    1508:	3f 91       	pop	r19
    150a:	2a e0       	ldi	r18, 0x0A	; 10
    150c:	26 9f       	mul	r18, r22
    150e:	11 24       	eor	r1, r1
    1510:	30 19       	sub	r19, r0
    1512:	30 5d       	subi	r19, 0xD0	; 208
    1514:	31 93       	st	Z+, r19
    1516:	de f6       	brtc	.-74     	; 0x14ce <__ultoa_invert+0xe>
    1518:	cf 01       	movw	r24, r30
    151a:	08 95       	ret
    151c:	46 2f       	mov	r20, r22
    151e:	47 70       	andi	r20, 0x07	; 7
    1520:	40 5d       	subi	r20, 0xD0	; 208
    1522:	41 93       	st	Z+, r20
    1524:	b3 e0       	ldi	r27, 0x03	; 3
    1526:	0f d0       	rcall	.+30     	; 0x1546 <__ultoa_invert+0x86>
    1528:	c9 f7       	brne	.-14     	; 0x151c <__ultoa_invert+0x5c>
    152a:	f6 cf       	rjmp	.-20     	; 0x1518 <__ultoa_invert+0x58>
    152c:	46 2f       	mov	r20, r22
    152e:	4f 70       	andi	r20, 0x0F	; 15
    1530:	40 5d       	subi	r20, 0xD0	; 208
    1532:	4a 33       	cpi	r20, 0x3A	; 58
    1534:	18 f0       	brcs	.+6      	; 0x153c <__ultoa_invert+0x7c>
    1536:	49 5d       	subi	r20, 0xD9	; 217
    1538:	31 fd       	sbrc	r19, 1
    153a:	40 52       	subi	r20, 0x20	; 32
    153c:	41 93       	st	Z+, r20
    153e:	02 d0       	rcall	.+4      	; 0x1544 <__ultoa_invert+0x84>
    1540:	a9 f7       	brne	.-22     	; 0x152c <__ultoa_invert+0x6c>
    1542:	ea cf       	rjmp	.-44     	; 0x1518 <__ultoa_invert+0x58>
    1544:	b4 e0       	ldi	r27, 0x04	; 4
    1546:	a6 95       	lsr	r26
    1548:	97 95       	ror	r25
    154a:	87 95       	ror	r24
    154c:	77 95       	ror	r23
    154e:	67 95       	ror	r22
    1550:	ba 95       	dec	r27
    1552:	c9 f7       	brne	.-14     	; 0x1546 <__ultoa_invert+0x86>
    1554:	00 97       	sbiw	r24, 0x00	; 0
    1556:	61 05       	cpc	r22, r1
    1558:	71 05       	cpc	r23, r1
    155a:	08 95       	ret
    155c:	9b 01       	movw	r18, r22
    155e:	ac 01       	movw	r20, r24
    1560:	0a 2e       	mov	r0, r26
    1562:	06 94       	lsr	r0
    1564:	57 95       	ror	r21
    1566:	47 95       	ror	r20
    1568:	37 95       	ror	r19
    156a:	27 95       	ror	r18
    156c:	ba 95       	dec	r27
    156e:	c9 f7       	brne	.-14     	; 0x1562 <__ultoa_invert+0xa2>
    1570:	62 0f       	add	r22, r18
    1572:	73 1f       	adc	r23, r19
    1574:	84 1f       	adc	r24, r20
    1576:	95 1f       	adc	r25, r21
    1578:	a0 1d       	adc	r26, r0
    157a:	08 95       	ret

0000157c <_exit>:
    157c:	f8 94       	cli

0000157e <__stop_program>:
    157e:	ff cf       	rjmp	.-2      	; 0x157e <__stop_program>
