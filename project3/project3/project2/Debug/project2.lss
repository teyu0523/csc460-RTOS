
project2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000030  00800200  00001920  000019b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001920  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000ae0  00800230  00800230  000019e4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000019e4  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000320  00000000  00000000  00001a14  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 0000008d  00000000  00000000  00001d34  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000042aa  00000000  00000000  00001dc1  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001313  00000000  00000000  0000606b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000231a  00000000  00000000  0000737e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000824  00000000  00000000  00009698  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000171f  00000000  00000000  00009ebc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001ce8  00000000  00000000  0000b5db  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002f0  00000000  00000000  0000d2c3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	8b c0       	rjmp	.+278    	; 0x124 <__bad_interrupt>
       e:	00 00       	nop
      10:	89 c0       	rjmp	.+274    	; 0x124 <__bad_interrupt>
      12:	00 00       	nop
      14:	0c 94 53 0a 	jmp	0x14a6	; 0x14a6 <__vector_5>
      18:	bf c0       	rjmp	.+382    	; 0x198 <__vector_6>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	16 c2       	rjmp	.+1068   	; 0x472 <__vector_17>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	0c 94 46 0c 	jmp	0x188c	; 0x188c <__vector_23>
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	5f c0       	rjmp	.+190    	; 0x124 <__bad_interrupt>
      66:	00 00       	nop
      68:	5d c0       	rjmp	.+186    	; 0x124 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	b4 c0       	rjmp	.+360    	; 0x1ea <__vector_32>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	0c 94 16 0c 	jmp	0x182c	; 0x182c <__vector_36>
      94:	47 c0       	rjmp	.+142    	; 0x124 <__bad_interrupt>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2b c0       	rjmp	.+86     	; 0x124 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	29 c0       	rjmp	.+82     	; 0x124 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	25 c0       	rjmp	.+74     	; 0x124 <__bad_interrupt>
      da:	00 00       	nop
      dc:	23 c0       	rjmp	.+70     	; 0x124 <__bad_interrupt>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e0 e2       	ldi	r30, 0x20	; 32
      fc:	f9 e1       	ldi	r31, 0x19	; 25
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a0 33       	cpi	r26, 0x30	; 48
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	2d e0       	ldi	r18, 0x0D	; 13
     110:	a0 e3       	ldi	r26, 0x30	; 48
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a0 31       	cpi	r26, 0x10	; 16
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	11 d6       	rcall	.+3106   	; 0xd42 <main>
     120:	0c 94 8e 0c 	jmp	0x191c	; 0x191c <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <_Z7IR_initv>:
			mark();
			} else {
			space();
		}
	}
	space();
     126:	ea e0       	ldi	r30, 0x0A	; 10
     128:	f1 e0       	ldi	r31, 0x01	; 1
     12a:	80 81       	ld	r24, Z
     12c:	88 62       	ori	r24, 0x28	; 40
     12e:	80 83       	st	Z, r24
     130:	a0 e2       	ldi	r26, 0x20	; 32
     132:	b1 e0       	ldi	r27, 0x01	; 1
     134:	1c 92       	st	X, r1
     136:	e1 e2       	ldi	r30, 0x21	; 33
     138:	f1 e0       	ldi	r31, 0x01	; 1
     13a:	10 82       	st	Z, r1
     13c:	8c 91       	ld	r24, X
     13e:	83 60       	ori	r24, 0x03	; 3
     140:	8c 93       	st	X, r24
     142:	80 81       	ld	r24, Z
     144:	88 61       	ori	r24, 0x18	; 24
     146:	80 83       	st	Z, r24
     148:	8c 91       	ld	r24, X
     14a:	87 7f       	andi	r24, 0xF7	; 247
     14c:	8c 93       	st	X, r24
     14e:	80 81       	ld	r24, Z
     150:	81 60       	ori	r24, 0x01	; 1
     152:	80 83       	st	Z, r24
     154:	85 ea       	ldi	r24, 0xA5	; 165
     156:	91 e0       	ldi	r25, 0x01	; 1
     158:	90 93 29 01 	sts	0x0129, r25
     15c:	80 93 28 01 	sts	0x0128, r24
     160:	82 ed       	ldi	r24, 0xD2	; 210
     162:	90 e0       	ldi	r25, 0x00	; 0
     164:	90 93 2d 01 	sts	0x012D, r25
     168:	80 93 2c 01 	sts	0x012C, r24
     16c:	10 92 90 00 	sts	0x0090, r1
     170:	e1 e9       	ldi	r30, 0x91	; 145
     172:	f0 e0       	ldi	r31, 0x00	; 0
     174:	10 82       	st	Z, r1
     176:	80 81       	ld	r24, Z
     178:	81 60       	ori	r24, 0x01	; 1
     17a:	80 83       	st	Z, r24
     17c:	e1 e7       	ldi	r30, 0x71	; 113
     17e:	f0 e0       	ldi	r31, 0x00	; 0
     180:	80 81       	ld	r24, Z
     182:	8d 7f       	andi	r24, 0xFD	; 253
     184:	80 83       	st	Z, r24
     186:	6d 98       	cbi	0x0d, 5	; 13
     188:	ea e6       	ldi	r30, 0x6A	; 106
     18a:	f0 e0       	ldi	r31, 0x00	; 0
     18c:	80 81       	ld	r24, Z
     18e:	8c 60       	ori	r24, 0x0C	; 12
     190:	80 83       	st	Z, r24
     192:	ed 9a       	sbi	0x1d, 5	; 29
     194:	e5 9a       	sbi	0x1c, 5	; 28
     196:	08 95       	ret

00000198 <__vector_6>:
     198:	1f 92       	push	r1
     19a:	0f 92       	push	r0
     19c:	0f b6       	in	r0, 0x3f	; 63
     19e:	0f 92       	push	r0
     1a0:	11 24       	eor	r1, r1
     1a2:	8f 93       	push	r24
     1a4:	9f 93       	push	r25
     1a6:	80 91 34 02 	lds	r24, 0x0234
     1aa:	81 11       	cpse	r24, r1
     1ac:	17 c0       	rjmp	.+46     	; 0x1dc <__vector_6+0x44>
     1ae:	81 e0       	ldi	r24, 0x01	; 1
     1b0:	80 93 34 02 	sts	0x0234, r24
     1b4:	10 92 32 02 	sts	0x0232, r1
     1b8:	10 92 31 02 	sts	0x0231, r1
     1bc:	c1 9a       	sbi	0x18, 1	; 24
     1be:	80 91 94 00 	lds	r24, 0x0094
     1c2:	90 91 95 00 	lds	r25, 0x0095
     1c6:	80 52       	subi	r24, 0x20	; 32
     1c8:	91 4d       	sbci	r25, 0xD1	; 209
     1ca:	90 93 99 00 	sts	0x0099, r25
     1ce:	80 93 98 00 	sts	0x0098, r24
     1d2:	80 91 71 00 	lds	r24, 0x0071
     1d6:	82 60       	ori	r24, 0x02	; 2
     1d8:	80 93 71 00 	sts	0x0071, r24
     1dc:	9f 91       	pop	r25
     1de:	8f 91       	pop	r24
     1e0:	0f 90       	pop	r0
     1e2:	0f be       	out	0x3f, r0	; 63
     1e4:	0f 90       	pop	r0
     1e6:	1f 90       	pop	r1
     1e8:	18 95       	reti

000001ea <__vector_32>:
     1ea:	1f 92       	push	r1
     1ec:	0f 92       	push	r0
     1ee:	0f b6       	in	r0, 0x3f	; 63
     1f0:	0f 92       	push	r0
     1f2:	11 24       	eor	r1, r1
     1f4:	0b b6       	in	r0, 0x3b	; 59
     1f6:	0f 92       	push	r0
     1f8:	2f 93       	push	r18
     1fa:	3f 93       	push	r19
     1fc:	4f 93       	push	r20
     1fe:	5f 93       	push	r21
     200:	6f 93       	push	r22
     202:	7f 93       	push	r23
     204:	8f 93       	push	r24
     206:	9f 93       	push	r25
     208:	af 93       	push	r26
     20a:	bf 93       	push	r27
     20c:	ef 93       	push	r30
     20e:	ff 93       	push	r31
     210:	80 91 34 02 	lds	r24, 0x0234
     214:	88 23       	and	r24, r24
     216:	91 f1       	breq	.+100    	; 0x27c <__vector_32+0x92>
     218:	65 99       	sbic	0x0c, 5	; 12
     21a:	0e c0       	rjmp	.+28     	; 0x238 <__vector_32+0x4e>
     21c:	30 91 32 02 	lds	r19, 0x0232
     220:	20 91 31 02 	lds	r18, 0x0231
     224:	81 e0       	ldi	r24, 0x01	; 1
     226:	90 e0       	ldi	r25, 0x00	; 0
     228:	03 2e       	mov	r0, r19
     22a:	01 c0       	rjmp	.+2      	; 0x22e <__vector_32+0x44>
     22c:	88 0f       	add	r24, r24
     22e:	0a 94       	dec	r0
     230:	ea f7       	brpl	.-6      	; 0x22c <__vector_32+0x42>
     232:	82 2b       	or	r24, r18
     234:	80 93 31 02 	sts	0x0231, r24
     238:	80 91 32 02 	lds	r24, 0x0232
     23c:	8f 5f       	subi	r24, 0xFF	; 255
     23e:	80 93 32 02 	sts	0x0232, r24
     242:	80 91 98 00 	lds	r24, 0x0098
     246:	90 91 99 00 	lds	r25, 0x0099
     24a:	80 5c       	subi	r24, 0xC0	; 192
     24c:	90 4e       	sbci	r25, 0xE0	; 224
     24e:	90 93 99 00 	sts	0x0099, r25
     252:	80 93 98 00 	sts	0x0098, r24
     256:	80 91 32 02 	lds	r24, 0x0232
     25a:	88 30       	cpi	r24, 0x08	; 8
     25c:	88 f0       	brcs	.+34     	; 0x280 <__vector_32+0x96>
     25e:	10 92 34 02 	sts	0x0234, r1
     262:	80 91 71 00 	lds	r24, 0x0071
     266:	8d 7f       	andi	r24, 0xFD	; 253
     268:	80 93 71 00 	sts	0x0071, r24
     26c:	c1 9a       	sbi	0x18, 1	; 24
     26e:	e5 9a       	sbi	0x1c, 5	; 28
     270:	80 91 31 02 	lds	r24, 0x0231
     274:	80 93 30 02 	sts	0x0230, r24
     278:	f8 d5       	rcall	.+3056   	; 0xe6a <_Z12ir_rxhandlerv>
     27a:	02 c0       	rjmp	.+4      	; 0x280 <__vector_32+0x96>
     27c:	80 91 33 02 	lds	r24, 0x0233
     280:	ff 91       	pop	r31
     282:	ef 91       	pop	r30
     284:	bf 91       	pop	r27
     286:	af 91       	pop	r26
     288:	9f 91       	pop	r25
     28a:	8f 91       	pop	r24
     28c:	7f 91       	pop	r23
     28e:	6f 91       	pop	r22
     290:	5f 91       	pop	r21
     292:	4f 91       	pop	r20
     294:	3f 91       	pop	r19
     296:	2f 91       	pop	r18
     298:	0f 90       	pop	r0
     29a:	0b be       	out	0x3b, r0	; 59
     29c:	0f 90       	pop	r0
     29e:	0f be       	out	0x3f, r0	; 63
     2a0:	0f 90       	pop	r0
     2a2:	1f 90       	pop	r1
     2a4:	18 95       	reti

000002a6 <_Z10IR_getLastv>:
	/*enable_interrupt();
	SREG = sreg; // sei();*/
}

uint8_t IR_getLast(){
	return outputByte;
     2a6:	80 91 30 02 	lds	r24, 0x0230
     2aa:	08 95       	ret

000002ac <_ZL4idlev>:
    arg = cur_task->arg;

    SREG = sreg;

    return arg;
}
     2ac:	ff cf       	rjmp	.-2      	; 0x2ac <_ZL4idlev>

000002ae <_ZL11exit_kernelv>:
     2ae:	ff 93       	push	r31
     2b0:	fc b7       	in	r31, 0x3c	; 60
     2b2:	ff 93       	push	r31
     2b4:	ff b7       	in	r31, 0x3f	; 63
     2b6:	f8 94       	cli
     2b8:	ff 93       	push	r31
     2ba:	ef 93       	push	r30
     2bc:	df 93       	push	r29
     2be:	cf 93       	push	r28
     2c0:	bf 93       	push	r27
     2c2:	af 93       	push	r26
     2c4:	9f 93       	push	r25
     2c6:	8f 93       	push	r24
     2c8:	7f 93       	push	r23
     2ca:	6f 93       	push	r22
     2cc:	5f 93       	push	r21
     2ce:	4f 93       	push	r20
     2d0:	3f 93       	push	r19
     2d2:	2f 93       	push	r18
     2d4:	1f 93       	push	r17
     2d6:	0f 93       	push	r16
     2d8:	ff 92       	push	r15
     2da:	ef 92       	push	r14
     2dc:	df 92       	push	r13
     2de:	cf 92       	push	r12
     2e0:	bf 92       	push	r11
     2e2:	af 92       	push	r10
     2e4:	9f 92       	push	r9
     2e6:	8f 92       	push	r8
     2e8:	7f 92       	push	r7
     2ea:	6f 92       	push	r6
     2ec:	5f 92       	push	r5
     2ee:	4f 92       	push	r4
     2f0:	3f 92       	push	r3
     2f2:	2f 92       	push	r2
     2f4:	1f 92       	push	r1
     2f6:	0f 92       	push	r0
     2f8:	8d b7       	in	r24, 0x3d	; 61
     2fa:	9e b7       	in	r25, 0x3e	; 62
     2fc:	90 93 c2 0c 	sts	0x0CC2, r25
     300:	80 93 c1 0c 	sts	0x0CC1, r24
     304:	e0 91 c3 0c 	lds	r30, 0x0CC3
     308:	f0 91 c4 0c 	lds	r31, 0x0CC4
     30c:	f3 95       	inc	r31
     30e:	80 81       	ld	r24, Z
     310:	91 81       	ldd	r25, Z+1	; 0x01
     312:	9e bf       	out	0x3e, r25	; 62
     314:	8d bf       	out	0x3d, r24	; 61
     316:	0f 90       	pop	r0
     318:	1f 90       	pop	r1
     31a:	2f 90       	pop	r2
     31c:	3f 90       	pop	r3
     31e:	4f 90       	pop	r4
     320:	5f 90       	pop	r5
     322:	6f 90       	pop	r6
     324:	7f 90       	pop	r7
     326:	8f 90       	pop	r8
     328:	9f 90       	pop	r9
     32a:	af 90       	pop	r10
     32c:	bf 90       	pop	r11
     32e:	cf 90       	pop	r12
     330:	df 90       	pop	r13
     332:	ef 90       	pop	r14
     334:	ff 90       	pop	r15
     336:	0f 91       	pop	r16
     338:	1f 91       	pop	r17
     33a:	2f 91       	pop	r18
     33c:	3f 91       	pop	r19
     33e:	4f 91       	pop	r20
     340:	5f 91       	pop	r21
     342:	6f 91       	pop	r22
     344:	7f 91       	pop	r23
     346:	8f 91       	pop	r24
     348:	9f 91       	pop	r25
     34a:	af 91       	pop	r26
     34c:	bf 91       	pop	r27
     34e:	cf 91       	pop	r28
     350:	df 91       	pop	r29
     352:	ef 91       	pop	r30
     354:	ff 91       	pop	r31
     356:	ff bf       	out	0x3f, r31	; 63
     358:	ff 91       	pop	r31
     35a:	fc bf       	out	0x3c, r31	; 60
     35c:	ff 91       	pop	r31
     35e:	08 95       	ret

00000360 <_ZL12enter_kernelv>:
     360:	ff 93       	push	r31
     362:	fc b7       	in	r31, 0x3c	; 60
     364:	ff 93       	push	r31
     366:	ff b7       	in	r31, 0x3f	; 63
     368:	f8 94       	cli
     36a:	ff 93       	push	r31
     36c:	ef 93       	push	r30
     36e:	df 93       	push	r29
     370:	cf 93       	push	r28
     372:	bf 93       	push	r27
     374:	af 93       	push	r26
     376:	9f 93       	push	r25
     378:	8f 93       	push	r24
     37a:	7f 93       	push	r23
     37c:	6f 93       	push	r22
     37e:	5f 93       	push	r21
     380:	4f 93       	push	r20
     382:	3f 93       	push	r19
     384:	2f 93       	push	r18
     386:	1f 93       	push	r17
     388:	0f 93       	push	r16
     38a:	ff 92       	push	r15
     38c:	ef 92       	push	r14
     38e:	df 92       	push	r13
     390:	cf 92       	push	r12
     392:	bf 92       	push	r11
     394:	af 92       	push	r10
     396:	9f 92       	push	r9
     398:	8f 92       	push	r8
     39a:	7f 92       	push	r7
     39c:	6f 92       	push	r6
     39e:	5f 92       	push	r5
     3a0:	4f 92       	push	r4
     3a2:	3f 92       	push	r3
     3a4:	2f 92       	push	r2
     3a6:	1f 92       	push	r1
     3a8:	0f 92       	push	r0
     3aa:	e0 91 c3 0c 	lds	r30, 0x0CC3
     3ae:	f0 91 c4 0c 	lds	r31, 0x0CC4
     3b2:	8d b7       	in	r24, 0x3d	; 61
     3b4:	9e b7       	in	r25, 0x3e	; 62
     3b6:	f3 95       	inc	r31
     3b8:	91 83       	std	Z+1, r25	; 0x01
     3ba:	80 83       	st	Z, r24
     3bc:	80 91 c1 0c 	lds	r24, 0x0CC1
     3c0:	90 91 c2 0c 	lds	r25, 0x0CC2
     3c4:	9e bf       	out	0x3e, r25	; 62
     3c6:	8d bf       	out	0x3d, r24	; 61
     3c8:	0f 90       	pop	r0
     3ca:	1f 90       	pop	r1
     3cc:	2f 90       	pop	r2
     3ce:	3f 90       	pop	r3
     3d0:	4f 90       	pop	r4
     3d2:	5f 90       	pop	r5
     3d4:	6f 90       	pop	r6
     3d6:	7f 90       	pop	r7
     3d8:	8f 90       	pop	r8
     3da:	9f 90       	pop	r9
     3dc:	af 90       	pop	r10
     3de:	bf 90       	pop	r11
     3e0:	cf 90       	pop	r12
     3e2:	df 90       	pop	r13
     3e4:	ef 90       	pop	r14
     3e6:	ff 90       	pop	r15
     3e8:	0f 91       	pop	r16
     3ea:	1f 91       	pop	r17
     3ec:	2f 91       	pop	r18
     3ee:	3f 91       	pop	r19
     3f0:	4f 91       	pop	r20
     3f2:	5f 91       	pop	r21
     3f4:	6f 91       	pop	r22
     3f6:	7f 91       	pop	r23
     3f8:	8f 91       	pop	r24
     3fa:	9f 91       	pop	r25
     3fc:	af 91       	pop	r26
     3fe:	bf 91       	pop	r27
     400:	cf 91       	pop	r28
     402:	df 91       	pop	r29
     404:	ef 91       	pop	r30
     406:	ff 91       	pop	r31
     408:	ff bf       	out	0x3f, r31	; 63
     40a:	ff 91       	pop	r31
     40c:	fc bf       	out	0x3c, r31	; 60
     40e:	ff 91       	pop	r31
     410:	08 95       	ret

00000412 <_ZL7enqueueP7queue_tP9td_struct>:
     412:	fc 01       	movw	r30, r24
     414:	db 01       	movw	r26, r22
     416:	a0 5f       	subi	r26, 0xF0	; 240
     418:	be 4f       	sbci	r27, 0xFE	; 254
     41a:	1d 92       	st	X+, r1
     41c:	1c 92       	st	X, r1
     41e:	80 81       	ld	r24, Z
     420:	91 81       	ldd	r25, Z+1	; 0x01
     422:	89 2b       	or	r24, r25
     424:	19 f4       	brne	.+6      	; 0x42c <_ZL7enqueueP7queue_tP9td_struct+0x1a>
     426:	71 83       	std	Z+1, r23	; 0x01
     428:	60 83       	st	Z, r22
     42a:	06 c0       	rjmp	.+12     	; 0x438 <_ZL7enqueueP7queue_tP9td_struct+0x26>
     42c:	a2 81       	ldd	r26, Z+2	; 0x02
     42e:	b3 81       	ldd	r27, Z+3	; 0x03
     430:	a0 5f       	subi	r26, 0xF0	; 240
     432:	be 4f       	sbci	r27, 0xFE	; 254
     434:	6d 93       	st	X+, r22
     436:	7c 93       	st	X, r23
     438:	73 83       	std	Z+3, r23	; 0x03
     43a:	62 83       	std	Z+2, r22	; 0x02
     43c:	08 95       	ret

0000043e <Task_Terminate>:
     43e:	cf 93       	push	r28
     440:	cf b7       	in	r28, 0x3f	; 63
     442:	f8 94       	cli
     444:	83 e0       	ldi	r24, 0x03	; 3
     446:	80 93 0c 03 	sts	0x030C, r24
     44a:	8a df       	rcall	.-236    	; 0x360 <_ZL12enter_kernelv>
     44c:	cf bf       	out	0x3f, r28	; 63
     44e:	cf 91       	pop	r28
     450:	08 95       	ret

00000452 <_ZL7dequeueP7queue_t.isra.1>:
     452:	dc 01       	movw	r26, r24
     454:	8d 91       	ld	r24, X+
     456:	9c 91       	ld	r25, X
     458:	11 97       	sbiw	r26, 0x01	; 1
     45a:	00 97       	sbiw	r24, 0x00	; 0
     45c:	49 f0       	breq	.+18     	; 0x470 <_ZL7dequeueP7queue_t.isra.1+0x1e>
     45e:	fc 01       	movw	r30, r24
     460:	e0 5f       	subi	r30, 0xF0	; 240
     462:	fe 4f       	sbci	r31, 0xFE	; 254
     464:	20 81       	ld	r18, Z
     466:	31 81       	ldd	r19, Z+1	; 0x01
     468:	2d 93       	st	X+, r18
     46a:	3c 93       	st	X, r19
     46c:	11 82       	std	Z+1, r1	; 0x01
     46e:	10 82       	st	Z, r1
     470:	08 95       	ret

00000472 <__vector_17>:
     472:	ff 93       	push	r31
     474:	fc b7       	in	r31, 0x3c	; 60
     476:	ff 93       	push	r31
     478:	ff b7       	in	r31, 0x3f	; 63
     47a:	f8 94       	cli
     47c:	f0 68       	ori	r31, 0x80	; 128
     47e:	ff 93       	push	r31
     480:	ef 93       	push	r30
     482:	df 93       	push	r29
     484:	cf 93       	push	r28
     486:	bf 93       	push	r27
     488:	af 93       	push	r26
     48a:	9f 93       	push	r25
     48c:	8f 93       	push	r24
     48e:	7f 93       	push	r23
     490:	6f 93       	push	r22
     492:	5f 93       	push	r21
     494:	4f 93       	push	r20
     496:	3f 93       	push	r19
     498:	2f 93       	push	r18
     49a:	1f 93       	push	r17
     49c:	0f 93       	push	r16
     49e:	ff 92       	push	r15
     4a0:	ef 92       	push	r14
     4a2:	df 92       	push	r13
     4a4:	cf 92       	push	r12
     4a6:	bf 92       	push	r11
     4a8:	af 92       	push	r10
     4aa:	9f 92       	push	r9
     4ac:	8f 92       	push	r8
     4ae:	7f 92       	push	r7
     4b0:	6f 92       	push	r6
     4b2:	5f 92       	push	r5
     4b4:	4f 92       	push	r4
     4b6:	3f 92       	push	r3
     4b8:	2f 92       	push	r2
     4ba:	1f 92       	push	r1
     4bc:	0f 92       	push	r0
     4be:	e0 91 c3 0c 	lds	r30, 0x0CC3
     4c2:	f0 91 c4 0c 	lds	r31, 0x0CC4
     4c6:	8d b7       	in	r24, 0x3d	; 61
     4c8:	9e b7       	in	r25, 0x3e	; 62
     4ca:	f3 95       	inc	r31
     4cc:	91 83       	std	Z+1, r25	; 0x01
     4ce:	80 83       	st	Z, r24
     4d0:	80 91 c1 0c 	lds	r24, 0x0CC1
     4d4:	90 91 c2 0c 	lds	r25, 0x0CC2
     4d8:	9e bf       	out	0x3e, r25	; 62
     4da:	8d bf       	out	0x3d, r24	; 61
     4dc:	81 e0       	ldi	r24, 0x01	; 1
     4de:	80 93 0c 03 	sts	0x030C, r24
     4e2:	e8 e8       	ldi	r30, 0x88	; 136
     4e4:	f0 e0       	ldi	r31, 0x00	; 0
     4e6:	80 81       	ld	r24, Z
     4e8:	91 81       	ldd	r25, Z+1	; 0x01
     4ea:	80 5f       	subi	r24, 0xF0	; 240
     4ec:	98 4d       	sbci	r25, 0xD8	; 216
     4ee:	91 83       	std	Z+1, r25	; 0x01
     4f0:	80 83       	st	Z, r24
     4f2:	80 91 c1 0c 	lds	r24, 0x0CC1
     4f6:	90 91 c2 0c 	lds	r25, 0x0CC2
     4fa:	9e bf       	out	0x3e, r25	; 62
     4fc:	8d bf       	out	0x3d, r24	; 61
     4fe:	0f 90       	pop	r0
     500:	1f 90       	pop	r1
     502:	2f 90       	pop	r2
     504:	3f 90       	pop	r3
     506:	4f 90       	pop	r4
     508:	5f 90       	pop	r5
     50a:	6f 90       	pop	r6
     50c:	7f 90       	pop	r7
     50e:	8f 90       	pop	r8
     510:	9f 90       	pop	r9
     512:	af 90       	pop	r10
     514:	bf 90       	pop	r11
     516:	cf 90       	pop	r12
     518:	df 90       	pop	r13
     51a:	ef 90       	pop	r14
     51c:	ff 90       	pop	r15
     51e:	0f 91       	pop	r16
     520:	1f 91       	pop	r17
     522:	2f 91       	pop	r18
     524:	3f 91       	pop	r19
     526:	4f 91       	pop	r20
     528:	5f 91       	pop	r21
     52a:	6f 91       	pop	r22
     52c:	7f 91       	pop	r23
     52e:	8f 91       	pop	r24
     530:	9f 91       	pop	r25
     532:	af 91       	pop	r26
     534:	bf 91       	pop	r27
     536:	cf 91       	pop	r28
     538:	df 91       	pop	r29
     53a:	ef 91       	pop	r30
     53c:	ff 91       	pop	r31
     53e:	ff bf       	out	0x3f, r31	; 63
     540:	ff 91       	pop	r31
     542:	fc bf       	out	0x3c, r31	; 60
     544:	ff 91       	pop	r31
     546:	08 95       	ret

00000548 <OS_Abort>:
     548:	f8 94       	cli
     54a:	80 e6       	ldi	r24, 0x60	; 96
     54c:	80 93 01 01 	sts	0x0101, r24
     550:	80 91 00 02 	lds	r24, 0x0200
     554:	86 30       	cpi	r24, 0x06	; 6
     556:	28 f4       	brcc	.+10     	; 0x562 <OS_Abort+0x1a>
     558:	80 91 00 02 	lds	r24, 0x0200
     55c:	8f 5f       	subi	r24, 0xFF	; 255
     55e:	30 e4       	ldi	r19, 0x40	; 64
     560:	04 c0       	rjmp	.+8      	; 0x56a <OS_Abort+0x22>
     562:	80 91 00 02 	lds	r24, 0x0200
     566:	85 50       	subi	r24, 0x05	; 5
     568:	30 e2       	ldi	r19, 0x20	; 32
     56a:	40 e6       	ldi	r20, 0x60	; 96
     56c:	40 93 02 01 	sts	0x0102, r20
     570:	94 e6       	ldi	r25, 0x64	; 100
     572:	2f e7       	ldi	r18, 0x7F	; 127
     574:	58 e3       	ldi	r21, 0x38	; 56
     576:	61 e0       	ldi	r22, 0x01	; 1
     578:	21 50       	subi	r18, 0x01	; 1
     57a:	50 40       	sbci	r21, 0x00	; 0
     57c:	60 40       	sbci	r22, 0x00	; 0
     57e:	e1 f7       	brne	.-8      	; 0x578 <OS_Abort+0x30>
     580:	00 c0       	rjmp	.+0      	; 0x582 <OS_Abort+0x3a>
     582:	00 00       	nop
     584:	91 50       	subi	r25, 0x01	; 1
     586:	a9 f7       	brne	.-22     	; 0x572 <OS_Abort+0x2a>
     588:	10 92 02 01 	sts	0x0102, r1
     58c:	98 e2       	ldi	r25, 0x28	; 40
     58e:	7f e7       	ldi	r23, 0x7F	; 127
     590:	28 e3       	ldi	r18, 0x38	; 56
     592:	51 e0       	ldi	r21, 0x01	; 1
     594:	71 50       	subi	r23, 0x01	; 1
     596:	20 40       	sbci	r18, 0x00	; 0
     598:	50 40       	sbci	r21, 0x00	; 0
     59a:	e1 f7       	brne	.-8      	; 0x594 <OS_Abort+0x4c>
     59c:	00 c0       	rjmp	.+0      	; 0x59e <OS_Abort+0x56>
     59e:	00 00       	nop
     5a0:	91 50       	subi	r25, 0x01	; 1
     5a2:	a9 f7       	brne	.-22     	; 0x58e <OS_Abort+0x46>
     5a4:	98 17       	cp	r25, r24
     5a6:	f1 f0       	breq	.+60     	; 0x5e4 <OS_Abort+0x9c>
     5a8:	30 93 02 01 	sts	0x0102, r19
     5ac:	2a e0       	ldi	r18, 0x0A	; 10
     5ae:	6f e7       	ldi	r22, 0x7F	; 127
     5b0:	78 e3       	ldi	r23, 0x38	; 56
     5b2:	51 e0       	ldi	r21, 0x01	; 1
     5b4:	61 50       	subi	r22, 0x01	; 1
     5b6:	70 40       	sbci	r23, 0x00	; 0
     5b8:	50 40       	sbci	r21, 0x00	; 0
     5ba:	e1 f7       	brne	.-8      	; 0x5b4 <OS_Abort+0x6c>
     5bc:	00 c0       	rjmp	.+0      	; 0x5be <OS_Abort+0x76>
     5be:	00 00       	nop
     5c0:	21 50       	subi	r18, 0x01	; 1
     5c2:	a9 f7       	brne	.-22     	; 0x5ae <OS_Abort+0x66>
     5c4:	10 92 02 01 	sts	0x0102, r1
     5c8:	2a e0       	ldi	r18, 0x0A	; 10
     5ca:	6f e7       	ldi	r22, 0x7F	; 127
     5cc:	78 e3       	ldi	r23, 0x38	; 56
     5ce:	51 e0       	ldi	r21, 0x01	; 1
     5d0:	61 50       	subi	r22, 0x01	; 1
     5d2:	70 40       	sbci	r23, 0x00	; 0
     5d4:	50 40       	sbci	r21, 0x00	; 0
     5d6:	e1 f7       	brne	.-8      	; 0x5d0 <OS_Abort+0x88>
     5d8:	00 c0       	rjmp	.+0      	; 0x5da <OS_Abort+0x92>
     5da:	00 00       	nop
     5dc:	21 50       	subi	r18, 0x01	; 1
     5de:	a9 f7       	brne	.-22     	; 0x5ca <OS_Abort+0x82>
     5e0:	9f 5f       	subi	r25, 0xFF	; 255
     5e2:	e0 cf       	rjmp	.-64     	; 0x5a4 <OS_Abort+0x5c>
     5e4:	94 e1       	ldi	r25, 0x14	; 20
     5e6:	6f e7       	ldi	r22, 0x7F	; 127
     5e8:	78 e3       	ldi	r23, 0x38	; 56
     5ea:	21 e0       	ldi	r18, 0x01	; 1
     5ec:	61 50       	subi	r22, 0x01	; 1
     5ee:	70 40       	sbci	r23, 0x00	; 0
     5f0:	20 40       	sbci	r18, 0x00	; 0
     5f2:	e1 f7       	brne	.-8      	; 0x5ec <OS_Abort+0xa4>
     5f4:	00 c0       	rjmp	.+0      	; 0x5f6 <OS_Abort+0xae>
     5f6:	00 00       	nop
     5f8:	91 50       	subi	r25, 0x01	; 1
     5fa:	a9 f7       	brne	.-22     	; 0x5e6 <OS_Abort+0x9e>
     5fc:	b7 cf       	rjmp	.-146    	; 0x56c <OS_Abort+0x24>

000005fe <_ZL18kernel_create_taskv>:
     5fe:	80 91 f7 02 	lds	r24, 0x02F7
     602:	90 91 f8 02 	lds	r25, 0x02F8
     606:	89 2b       	or	r24, r25
     608:	09 f4       	brne	.+2      	; 0x60c <_ZL18kernel_create_taskv+0xe>
     60a:	b5 c0       	rjmp	.+362    	; 0x776 <_ZL18kernel_create_taskv+0x178>
     60c:	80 91 01 03 	lds	r24, 0x0301
     610:	82 30       	cpi	r24, 0x02	; 2
     612:	f9 f4       	brne	.+62     	; 0x652 <_ZL18kernel_create_taskv+0x54>
     614:	80 91 08 03 	lds	r24, 0x0308
     618:	90 91 09 03 	lds	r25, 0x0309
     61c:	89 2b       	or	r24, r25
     61e:	09 f4       	brne	.+2      	; 0x622 <_ZL18kernel_create_taskv+0x24>
     620:	b0 c0       	rjmp	.+352    	; 0x782 <_ZL18kernel_create_taskv+0x184>
     622:	80 91 06 03 	lds	r24, 0x0306
     626:	90 91 07 03 	lds	r25, 0x0307
     62a:	89 2b       	or	r24, r25
     62c:	09 f4       	brne	.+2      	; 0x630 <_ZL18kernel_create_taskv+0x32>
     62e:	a9 c0       	rjmp	.+338    	; 0x782 <_ZL18kernel_create_taskv+0x184>
     630:	80 91 0a 03 	lds	r24, 0x030A
     634:	90 91 0b 03 	lds	r25, 0x030B
     638:	20 91 08 03 	lds	r18, 0x0308
     63c:	30 91 09 03 	lds	r19, 0x0309
     640:	80 91 06 03 	lds	r24, 0x0306
     644:	90 91 07 03 	lds	r25, 0x0307
     648:	82 17       	cp	r24, r18
     64a:	93 07       	cpc	r25, r19
     64c:	10 f4       	brcc	.+4      	; 0x652 <_ZL18kernel_create_taskv+0x54>
     64e:	83 e0       	ldi	r24, 0x03	; 3
     650:	99 c0       	rjmp	.+306    	; 0x784 <_ZL18kernel_create_taskv+0x186>
     652:	80 91 01 03 	lds	r24, 0x0301
     656:	88 23       	and	r24, r24
     658:	29 f0       	breq	.+10     	; 0x664 <_ZL18kernel_create_taskv+0x66>
     65a:	87 ef       	ldi	r24, 0xF7	; 247
     65c:	92 e0       	ldi	r25, 0x02	; 2
     65e:	f9 de       	rcall	.-526    	; 0x452 <_ZL7dequeueP7queue_t.isra.1>
     660:	bc 01       	movw	r22, r24
     662:	02 c0       	rjmp	.+4      	; 0x668 <_ZL18kernel_create_taskv+0x6a>
     664:	6d ea       	ldi	r22, 0xAD	; 173
     666:	7b e0       	ldi	r23, 0x0B	; 11
     668:	fb 01       	movw	r30, r22
     66a:	e7 52       	subi	r30, 0x27	; 39
     66c:	ff 4f       	sbci	r31, 0xFF	; 255
     66e:	10 82       	st	Z, r1
     670:	80 e8       	ldi	r24, 0x80	; 128
     672:	7e 96       	adiw	r30, 0x1e	; 30
     674:	80 83       	st	Z, r24
     676:	33 96       	adiw	r30, 0x03	; 3
     678:	10 82       	st	Z, r1
     67a:	80 91 fd 02 	lds	r24, 0x02FD
     67e:	90 91 fe 02 	lds	r25, 0x02FE
     682:	31 96       	adiw	r30, 0x01	; 1
     684:	90 83       	st	Z, r25
     686:	80 91 fd 02 	lds	r24, 0x02FD
     68a:	90 91 fe 02 	lds	r25, 0x02FE
     68e:	31 96       	adiw	r30, 0x01	; 1
     690:	80 83       	st	Z, r24
     692:	31 96       	adiw	r30, 0x01	; 1
     694:	10 82       	st	Z, r1
     696:	8f e1       	ldi	r24, 0x1F	; 31
     698:	92 e0       	ldi	r25, 0x02	; 2
     69a:	31 96       	adiw	r30, 0x01	; 1
     69c:	90 83       	st	Z, r25
     69e:	31 96       	adiw	r30, 0x01	; 1
     6a0:	80 83       	st	Z, r24
     6a2:	31 96       	adiw	r30, 0x01	; 1
     6a4:	cb 01       	movw	r24, r22
     6a6:	89 52       	subi	r24, 0x29	; 41
     6a8:	9f 4f       	sbci	r25, 0xFF	; 255
     6aa:	91 83       	std	Z+1, r25	; 0x01
     6ac:	80 83       	st	Z, r24
     6ae:	82 e0       	ldi	r24, 0x02	; 2
     6b0:	3c 96       	adiw	r30, 0x0c	; 12
     6b2:	80 83       	st	Z, r24
     6b4:	80 91 ff 02 	lds	r24, 0x02FF
     6b8:	90 91 00 03 	lds	r25, 0x0300
     6bc:	31 96       	adiw	r30, 0x01	; 1
     6be:	91 83       	std	Z+1, r25	; 0x01
     6c0:	80 83       	st	Z, r24
     6c2:	80 91 01 03 	lds	r24, 0x0301
     6c6:	32 96       	adiw	r30, 0x02	; 2
     6c8:	80 83       	st	Z, r24
     6ca:	80 91 06 03 	lds	r24, 0x0306
     6ce:	90 91 07 03 	lds	r25, 0x0307
     6d2:	39 97       	sbiw	r30, 0x09	; 9
     6d4:	91 83       	std	Z+1, r25	; 0x01
     6d6:	80 83       	st	Z, r24
     6d8:	80 91 08 03 	lds	r24, 0x0308
     6dc:	90 91 09 03 	lds	r25, 0x0309
     6e0:	32 96       	adiw	r30, 0x02	; 2
     6e2:	91 83       	std	Z+1, r25	; 0x01
     6e4:	80 83       	st	Z, r24
     6e6:	80 91 0a 03 	lds	r24, 0x030A
     6ea:	90 91 0b 03 	lds	r25, 0x030B
     6ee:	32 96       	adiw	r30, 0x02	; 2
     6f0:	91 83       	std	Z+1, r25	; 0x01
     6f2:	80 83       	st	Z, r24
     6f4:	80 91 02 03 	lds	r24, 0x0302
     6f8:	90 91 03 03 	lds	r25, 0x0303
     6fc:	38 97       	sbiw	r30, 0x08	; 8
     6fe:	91 83       	std	Z+1, r25	; 0x01
     700:	80 83       	st	Z, r24
     702:	80 91 04 03 	lds	r24, 0x0304
     706:	90 91 05 03 	lds	r25, 0x0305
     70a:	32 96       	adiw	r30, 0x02	; 2
     70c:	91 83       	std	Z+1, r25	; 0x01
     70e:	80 83       	st	Z, r24
     710:	80 91 01 03 	lds	r24, 0x0301
     714:	82 30       	cpi	r24, 0x02	; 2
     716:	51 f0       	breq	.+20     	; 0x72c <_ZL18kernel_create_taskv+0x12e>
     718:	83 30       	cpi	r24, 0x03	; 3
     71a:	29 f0       	breq	.+10     	; 0x726 <_ZL18kernel_create_taskv+0x128>
     71c:	81 30       	cpi	r24, 0x01	; 1
     71e:	71 f5       	brne	.+92     	; 0x77c <_ZL18kernel_create_taskv+0x17e>
     720:	83 ef       	ldi	r24, 0xF3	; 243
     722:	92 e0       	ldi	r25, 0x02	; 2
     724:	26 c0       	rjmp	.+76     	; 0x772 <_ZL18kernel_create_taskv+0x174>
     726:	8b ee       	ldi	r24, 0xEB	; 235
     728:	92 e0       	ldi	r25, 0x02	; 2
     72a:	23 c0       	rjmp	.+70     	; 0x772 <_ZL18kernel_create_taskv+0x174>
     72c:	fb 01       	movw	r30, r22
     72e:	e0 5f       	subi	r30, 0xF0	; 240
     730:	fe 4f       	sbci	r31, 0xFE	; 254
     732:	11 82       	std	Z+1, r1	; 0x01
     734:	10 82       	st	Z, r1
     736:	80 91 ef 02 	lds	r24, 0x02EF
     73a:	90 91 f0 02 	lds	r25, 0x02F0
     73e:	32 96       	adiw	r30, 0x02	; 2
     740:	89 2b       	or	r24, r25
     742:	39 f4       	brne	.+14     	; 0x752 <_ZL18kernel_create_taskv+0x154>
     744:	11 82       	std	Z+1, r1	; 0x01
     746:	10 82       	st	Z, r1
     748:	70 93 f0 02 	sts	0x02F0, r23
     74c:	60 93 ef 02 	sts	0x02EF, r22
     750:	0b c0       	rjmp	.+22     	; 0x768 <_ZL18kernel_create_taskv+0x16a>
     752:	80 91 f1 02 	lds	r24, 0x02F1
     756:	90 91 f2 02 	lds	r25, 0x02F2
     75a:	dc 01       	movw	r26, r24
     75c:	a0 5f       	subi	r26, 0xF0	; 240
     75e:	be 4f       	sbci	r27, 0xFE	; 254
     760:	6d 93       	st	X+, r22
     762:	7c 93       	st	X, r23
     764:	91 83       	std	Z+1, r25	; 0x01
     766:	80 83       	st	Z, r24
     768:	70 93 f2 02 	sts	0x02F2, r23
     76c:	60 93 f1 02 	sts	0x02F1, r22
     770:	05 c0       	rjmp	.+10     	; 0x77c <_ZL18kernel_create_taskv+0x17e>
     772:	4f de       	rcall	.-866    	; 0x412 <_ZL7enqueueP7queue_tP9td_struct>
     774:	03 c0       	rjmp	.+6      	; 0x77c <_ZL18kernel_create_taskv+0x17e>
     776:	80 e0       	ldi	r24, 0x00	; 0
     778:	90 e0       	ldi	r25, 0x00	; 0
     77a:	08 95       	ret
     77c:	81 e0       	ldi	r24, 0x01	; 1
     77e:	90 e0       	ldi	r25, 0x00	; 0
     780:	08 95       	ret
     782:	84 e0       	ldi	r24, 0x04	; 4
     784:	80 93 00 02 	sts	0x0200, r24
     788:	df de       	rcall	.-578    	; 0x548 <OS_Abort>

0000078a <_Z7OS_Initv>:
     78a:	cf 93       	push	r28
     78c:	df 93       	push	r29
     78e:	1f 92       	push	r1
     790:	cd b7       	in	r28, 0x3d	; 61
     792:	de b7       	in	r29, 0x3e	; 62
     794:	80 91 81 00 	lds	r24, 0x0081
     798:	82 60       	ori	r24, 0x02	; 2
     79a:	80 93 81 00 	sts	0x0081, r24
     79e:	e9 e1       	ldi	r30, 0x19	; 25
     7a0:	f4 e0       	ldi	r31, 0x04	; 4
     7a2:	a5 e3       	ldi	r26, 0x35	; 53
     7a4:	b2 e0       	ldi	r27, 0x02	; 2
     7a6:	10 82       	st	Z, r1
     7a8:	1d 92       	st	X+, r1
     7aa:	1d 92       	st	X+, r1
     7ac:	cf 01       	movw	r24, r30
     7ae:	08 96       	adiw	r24, 0x08	; 8
     7b0:	95 83       	std	Z+5, r25	; 0x05
     7b2:	84 83       	std	Z+4, r24	; 0x04
     7b4:	ec 5e       	subi	r30, 0xEC	; 236
     7b6:	fe 4f       	sbci	r31, 0xFE	; 254
     7b8:	2b e0       	ldi	r18, 0x0B	; 11
     7ba:	e5 3a       	cpi	r30, 0xA5	; 165
     7bc:	f2 07       	cpc	r31, r18
     7be:	99 f7       	brne	.-26     	; 0x7a6 <_Z7OS_Initv+0x1c>
     7c0:	10 92 aa 0b 	sts	0x0BAA, r1
     7c4:	10 92 a9 0b 	sts	0x0BA9, r1
     7c8:	0d e0       	ldi	r16, 0x0D	; 13
     7ca:	13 e0       	ldi	r17, 0x03	; 3
     7cc:	10 93 f8 02 	sts	0x02F8, r17
     7d0:	00 93 f7 02 	sts	0x02F7, r16
     7d4:	89 e9       	ldi	r24, 0x99	; 153
     7d6:	9a e0       	ldi	r25, 0x0A	; 10
     7d8:	90 93 fa 02 	sts	0x02FA, r25
     7dc:	80 93 f9 02 	sts	0x02F9, r24
     7e0:	86 e5       	ldi	r24, 0x56	; 86
     7e2:	91 e0       	ldi	r25, 0x01	; 1
     7e4:	90 93 fe 02 	sts	0x02FE, r25
     7e8:	80 93 fd 02 	sts	0x02FD, r24
     7ec:	10 92 01 03 	sts	0x0301, r1
     7f0:	06 df       	rcall	.-500    	; 0x5fe <_ZL18kernel_create_taskv>
     7f2:	87 ed       	ldi	r24, 0xD7	; 215
     7f4:	97 e0       	ldi	r25, 0x07	; 7
     7f6:	90 93 fe 02 	sts	0x02FE, r25
     7fa:	80 93 fd 02 	sts	0x02FD, r24
     7fe:	83 e0       	ldi	r24, 0x03	; 3
     800:	80 93 01 03 	sts	0x0301, r24
     804:	fc de       	rcall	.-520    	; 0x5fe <_ZL18kernel_create_taskv>
     806:	10 93 c4 0c 	sts	0x0CC4, r17
     80a:	00 93 c3 0c 	sts	0x0CC3, r16
     80e:	81 e0       	ldi	r24, 0x01	; 1
     810:	80 93 19 04 	sts	0x0419, r24
     814:	8b ee       	ldi	r24, 0xEB	; 235
     816:	92 e0       	ldi	r25, 0x02	; 2
     818:	1c de       	rcall	.-968    	; 0x452 <_ZL7dequeueP7queue_t.isra.1>
     81a:	80 91 6f 00 	lds	r24, 0x006F
     81e:	82 60       	ori	r24, 0x02	; 2
     820:	80 93 6f 00 	sts	0x006F, r24
     824:	80 e1       	ldi	r24, 0x10	; 16
     826:	97 e2       	ldi	r25, 0x27	; 39
     828:	90 93 89 00 	sts	0x0089, r25
     82c:	80 93 88 00 	sts	0x0088, r24
     830:	10 92 85 00 	sts	0x0085, r1
     834:	10 92 84 00 	sts	0x0084, r1
     838:	82 e0       	ldi	r24, 0x02	; 2
     83a:	86 bb       	out	0x16, r24	; 22
     83c:	ee 24       	eor	r14, r14
     83e:	e3 94       	inc	r14
     840:	0d ea       	ldi	r16, 0xAD	; 173
     842:	1b e0       	ldi	r17, 0x0B	; 11
     844:	82 e0       	ldi	r24, 0x02	; 2
     846:	f8 2e       	mov	r15, r24
     848:	80 91 c3 0c 	lds	r24, 0x0CC3
     84c:	90 91 c4 0c 	lds	r25, 0x0CC4
     850:	fc 01       	movw	r30, r24
     852:	e4 5f       	subi	r30, 0xF4	; 244
     854:	fe 4f       	sbci	r31, 0xFE	; 254
     856:	20 81       	ld	r18, Z
     858:	21 30       	cpi	r18, 0x01	; 1
     85a:	21 f4       	brne	.+8      	; 0x864 <_Z7OS_Initv+0xda>
     85c:	8d 5a       	subi	r24, 0xAD	; 173
     85e:	9b 40       	sbci	r25, 0x0B	; 11
     860:	09 f0       	breq	.+2      	; 0x864 <_Z7OS_Initv+0xda>
     862:	57 c0       	rjmp	.+174    	; 0x912 <_Z7OS_Initv+0x188>
     864:	80 91 eb 02 	lds	r24, 0x02EB
     868:	90 91 ec 02 	lds	r25, 0x02EC
     86c:	89 2b       	or	r24, r25
     86e:	19 f0       	breq	.+6      	; 0x876 <_Z7OS_Initv+0xec>
     870:	8b ee       	ldi	r24, 0xEB	; 235
     872:	92 e0       	ldi	r25, 0x02	; 2
     874:	3d c0       	rjmp	.+122    	; 0x8f0 <_Z7OS_Initv+0x166>
     876:	80 91 ef 02 	lds	r24, 0x02EF
     87a:	90 91 f0 02 	lds	r25, 0x02F0
     87e:	00 97       	sbiw	r24, 0x00	; 0
     880:	79 f1       	breq	.+94     	; 0x8e0 <_Z7OS_Initv+0x156>
     882:	20 e0       	ldi	r18, 0x00	; 0
     884:	30 e0       	ldi	r19, 0x00	; 0
     886:	40 e0       	ldi	r20, 0x00	; 0
     888:	50 e0       	ldi	r21, 0x00	; 0
     88a:	fc 01       	movw	r30, r24
     88c:	ee 5f       	subi	r30, 0xFE	; 254
     88e:	fe 4f       	sbci	r31, 0xFE	; 254
     890:	60 81       	ld	r22, Z
     892:	71 81       	ldd	r23, Z+1	; 0x01
     894:	67 2b       	or	r22, r23
     896:	81 f4       	brne	.+32     	; 0x8b8 <_Z7OS_Initv+0x12e>
     898:	dc 01       	movw	r26, r24
     89a:	aa 5f       	subi	r26, 0xFA	; 250
     89c:	be 4f       	sbci	r27, 0xFE	; 254
     89e:	2d 91       	ld	r18, X+
     8a0:	3c 91       	ld	r19, X
     8a2:	31 83       	std	Z+1, r19	; 0x01
     8a4:	20 83       	st	Z, r18
     8a6:	36 96       	adiw	r30, 0x06	; 6
     8a8:	20 81       	ld	r18, Z
     8aa:	31 81       	ldd	r19, Z+1	; 0x01
     8ac:	34 97       	sbiw	r30, 0x04	; 4
     8ae:	31 83       	std	Z+1, r19	; 0x01
     8b0:	20 83       	st	Z, r18
     8b2:	4f 5f       	subi	r20, 0xFF	; 255
     8b4:	5f 4f       	sbci	r21, 0xFF	; 255
     8b6:	9c 01       	movw	r18, r24
     8b8:	42 30       	cpi	r20, 0x02	; 2
     8ba:	51 05       	cpc	r21, r1
     8bc:	14 f0       	brlt	.+4      	; 0x8c2 <_Z7OS_Initv+0x138>
     8be:	8b e0       	ldi	r24, 0x0B	; 11
     8c0:	66 c0       	rjmp	.+204    	; 0x98e <_Z7OS_Initv+0x204>
     8c2:	fc 01       	movw	r30, r24
     8c4:	e0 5f       	subi	r30, 0xF0	; 240
     8c6:	fe 4f       	sbci	r31, 0xFE	; 254
     8c8:	80 81       	ld	r24, Z
     8ca:	91 81       	ldd	r25, Z+1	; 0x01
     8cc:	00 97       	sbiw	r24, 0x00	; 0
     8ce:	e9 f6       	brne	.-70     	; 0x88a <_Z7OS_Initv+0x100>
     8d0:	21 15       	cp	r18, r1
     8d2:	31 05       	cpc	r19, r1
     8d4:	29 f0       	breq	.+10     	; 0x8e0 <_Z7OS_Initv+0x156>
     8d6:	30 93 c4 0c 	sts	0x0CC4, r19
     8da:	20 93 c3 0c 	sts	0x0CC3, r18
     8de:	12 c0       	rjmp	.+36     	; 0x904 <_Z7OS_Initv+0x17a>
     8e0:	80 91 f3 02 	lds	r24, 0x02F3
     8e4:	90 91 f4 02 	lds	r25, 0x02F4
     8e8:	89 2b       	or	r24, r25
     8ea:	41 f0       	breq	.+16     	; 0x8fc <_Z7OS_Initv+0x172>
     8ec:	83 ef       	ldi	r24, 0xF3	; 243
     8ee:	92 e0       	ldi	r25, 0x02	; 2
     8f0:	b0 dd       	rcall	.-1184   	; 0x452 <_ZL7dequeueP7queue_t.isra.1>
     8f2:	90 93 c4 0c 	sts	0x0CC4, r25
     8f6:	80 93 c3 0c 	sts	0x0CC3, r24
     8fa:	04 c0       	rjmp	.+8      	; 0x904 <_Z7OS_Initv+0x17a>
     8fc:	10 93 c4 0c 	sts	0x0CC4, r17
     900:	00 93 c3 0c 	sts	0x0CC3, r16
     904:	e0 91 c3 0c 	lds	r30, 0x0CC3
     908:	f0 91 c4 0c 	lds	r31, 0x0CC4
     90c:	e4 5f       	subi	r30, 0xF4	; 244
     90e:	fe 4f       	sbci	r31, 0xFE	; 254
     910:	e0 82       	st	Z, r14
     912:	cd dc       	rcall	.-1638   	; 0x2ae <_ZL11exit_kernelv>
     914:	20 91 0c 03 	lds	r18, 0x030C
     918:	22 30       	cpi	r18, 0x02	; 2
     91a:	09 f4       	brne	.+2      	; 0x91e <_Z7OS_Initv+0x194>
     91c:	5b c0       	rjmp	.+182    	; 0x9d4 <_Z7OS_Initv+0x24a>
     91e:	c0 90 c3 0c 	lds	r12, 0x0CC3
     922:	d0 90 c4 0c 	lds	r13, 0x0CC4
     926:	23 30       	cpi	r18, 0x03	; 3
     928:	30 f4       	brcc	.+12     	; 0x936 <_Z7OS_Initv+0x1ac>
     92a:	22 23       	and	r18, r18
     92c:	09 f4       	brne	.+2      	; 0x930 <_Z7OS_Initv+0x1a6>
     92e:	ec c0       	rjmp	.+472    	; 0xb08 <_Z7OS_Initv+0x37e>
     930:	21 30       	cpi	r18, 0x01	; 1
     932:	51 f0       	breq	.+20     	; 0x948 <_Z7OS_Initv+0x1be>
     934:	e1 c0       	rjmp	.+450    	; 0xaf8 <_Z7OS_Initv+0x36e>
     936:	24 30       	cpi	r18, 0x04	; 4
     938:	09 f4       	brne	.+2      	; 0x93c <_Z7OS_Initv+0x1b2>
     93a:	c9 c0       	rjmp	.+402    	; 0xace <_Z7OS_Initv+0x344>
     93c:	08 f4       	brcc	.+2      	; 0x940 <_Z7OS_Initv+0x1b6>
     93e:	6a c0       	rjmp	.+212    	; 0xa14 <_Z7OS_Initv+0x28a>
     940:	25 30       	cpi	r18, 0x05	; 5
     942:	09 f4       	brne	.+2      	; 0x946 <_Z7OS_Initv+0x1bc>
     944:	e1 c0       	rjmp	.+450    	; 0xb08 <_Z7OS_Initv+0x37e>
     946:	d8 c0       	rjmp	.+432    	; 0xaf8 <_Z7OS_Initv+0x36e>
     948:	80 91 84 00 	lds	r24, 0x0084
     94c:	90 91 85 00 	lds	r25, 0x0085
     950:	90 93 48 02 	sts	0x0248, r25
     954:	80 93 47 02 	sts	0x0247, r24
     958:	80 91 49 02 	lds	r24, 0x0249
     95c:	8f 5f       	subi	r24, 0xFF	; 255
     95e:	80 93 49 02 	sts	0x0249, r24
     962:	f6 01       	movw	r30, r12
     964:	e1 5f       	subi	r30, 0xF1	; 241
     966:	fe 4f       	sbci	r31, 0xFE	; 254
     968:	40 81       	ld	r20, Z
     96a:	42 30       	cpi	r20, 0x02	; 2
     96c:	99 f4       	brne	.+38     	; 0x994 <_Z7OS_Initv+0x20a>
     96e:	33 97       	sbiw	r30, 0x03	; 3
     970:	80 81       	ld	r24, Z
     972:	81 30       	cpi	r24, 0x01	; 1
     974:	79 f4       	brne	.+30     	; 0x994 <_Z7OS_Initv+0x20a>
     976:	38 97       	sbiw	r30, 0x08	; 8
     978:	80 81       	ld	r24, Z
     97a:	91 81       	ldd	r25, Z+1	; 0x01
     97c:	01 97       	sbiw	r24, 0x01	; 1
     97e:	91 83       	std	Z+1, r25	; 0x01
     980:	80 83       	st	Z, r24
     982:	34 96       	adiw	r30, 0x04	; 4
     984:	80 81       	ld	r24, Z
     986:	91 81       	ldd	r25, Z+1	; 0x01
     988:	89 2b       	or	r24, r25
     98a:	21 f4       	brne	.+8      	; 0x994 <_Z7OS_Initv+0x20a>
     98c:	88 e0       	ldi	r24, 0x08	; 8
     98e:	80 93 00 02 	sts	0x0200, r24
     992:	da dd       	rcall	.-1100   	; 0x548 <OS_Abort>
     994:	80 91 ef 02 	lds	r24, 0x02EF
     998:	90 91 f0 02 	lds	r25, 0x02F0
     99c:	00 97       	sbiw	r24, 0x00	; 0
     99e:	69 f0       	breq	.+26     	; 0x9ba <_Z7OS_Initv+0x230>
     9a0:	fc 01       	movw	r30, r24
     9a2:	ee 5f       	subi	r30, 0xFE	; 254
     9a4:	fe 4f       	sbci	r31, 0xFE	; 254
     9a6:	20 81       	ld	r18, Z
     9a8:	31 81       	ldd	r19, Z+1	; 0x01
     9aa:	21 50       	subi	r18, 0x01	; 1
     9ac:	31 09       	sbc	r19, r1
     9ae:	31 83       	std	Z+1, r19	; 0x01
     9b0:	20 83       	st	Z, r18
     9b2:	3e 96       	adiw	r30, 0x0e	; 14
     9b4:	80 81       	ld	r24, Z
     9b6:	91 81       	ldd	r25, Z+1	; 0x01
     9b8:	f1 cf       	rjmp	.-30     	; 0x99c <_Z7OS_Initv+0x212>
     9ba:	41 30       	cpi	r20, 0x01	; 1
     9bc:	09 f0       	breq	.+2      	; 0x9c0 <_Z7OS_Initv+0x236>
     9be:	a4 c0       	rjmp	.+328    	; 0xb08 <_Z7OS_Initv+0x37e>
     9c0:	f6 01       	movw	r30, r12
     9c2:	e4 5f       	subi	r30, 0xF4	; 244
     9c4:	fe 4f       	sbci	r31, 0xFE	; 254
     9c6:	80 81       	ld	r24, Z
     9c8:	81 30       	cpi	r24, 0x01	; 1
     9ca:	09 f0       	breq	.+2      	; 0x9ce <_Z7OS_Initv+0x244>
     9cc:	9d c0       	rjmp	.+314    	; 0xb08 <_Z7OS_Initv+0x37e>
     9ce:	f0 82       	st	Z, r15
     9d0:	b6 01       	movw	r22, r12
     9d2:	a7 c0       	rjmp	.+334    	; 0xb22 <_Z7OS_Initv+0x398>
     9d4:	29 83       	std	Y+1, r18	; 0x01
     9d6:	13 de       	rcall	.-986    	; 0x5fe <_ZL18kernel_create_taskv>
     9d8:	90 93 fc 02 	sts	0x02FC, r25
     9dc:	80 93 fb 02 	sts	0x02FB, r24
     9e0:	80 91 fb 02 	lds	r24, 0x02FB
     9e4:	90 91 fc 02 	lds	r25, 0x02FC
     9e8:	29 81       	ldd	r18, Y+1	; 0x01
     9ea:	89 2b       	or	r24, r25
     9ec:	89 f0       	breq	.+34     	; 0xa10 <_Z7OS_Initv+0x286>
     9ee:	60 91 c3 0c 	lds	r22, 0x0CC3
     9f2:	70 91 c4 0c 	lds	r23, 0x0CC4
     9f6:	fb 01       	movw	r30, r22
     9f8:	e1 5f       	subi	r30, 0xF1	; 241
     9fa:	fe 4f       	sbci	r31, 0xFE	; 254
     9fc:	80 81       	ld	r24, Z
     9fe:	83 30       	cpi	r24, 0x03	; 3
     a00:	09 f4       	brne	.+2      	; 0xa04 <_Z7OS_Initv+0x27a>
     a02:	82 c0       	rjmp	.+260    	; 0xb08 <_Z7OS_Initv+0x37e>
     a04:	90 91 01 03 	lds	r25, 0x0301
     a08:	93 30       	cpi	r25, 0x03	; 3
     a0a:	09 f0       	breq	.+2      	; 0xa0e <_Z7OS_Initv+0x284>
     a0c:	80 c0       	rjmp	.+256    	; 0xb0e <_Z7OS_Initv+0x384>
     a0e:	76 c0       	rjmp	.+236    	; 0xafc <_Z7OS_Initv+0x372>
     a10:	87 e0       	ldi	r24, 0x07	; 7
     a12:	bd cf       	rjmp	.-134    	; 0x98e <_Z7OS_Initv+0x204>
     a14:	fd ea       	ldi	r31, 0xAD	; 173
     a16:	cf 16       	cp	r12, r31
     a18:	fb e0       	ldi	r31, 0x0B	; 11
     a1a:	df 06       	cpc	r13, r31
     a1c:	09 f4       	brne	.+2      	; 0xa20 <_Z7OS_Initv+0x296>
     a1e:	74 c0       	rjmp	.+232    	; 0xb08 <_Z7OS_Initv+0x37e>
     a20:	f6 01       	movw	r30, r12
     a22:	e4 5f       	subi	r30, 0xF4	; 244
     a24:	fe 4f       	sbci	r31, 0xFE	; 254
     a26:	10 82       	st	Z, r1
     a28:	33 96       	adiw	r30, 0x03	; 3
     a2a:	80 81       	ld	r24, Z
     a2c:	82 30       	cpi	r24, 0x02	; 2
     a2e:	09 f0       	breq	.+2      	; 0xa32 <_Z7OS_Initv+0x2a8>
     a30:	4a c0       	rjmp	.+148    	; 0xac6 <_Z7OS_Initv+0x33c>
     a32:	20 91 ef 02 	lds	r18, 0x02EF
     a36:	30 91 f0 02 	lds	r19, 0x02F0
     a3a:	2c 15       	cp	r18, r12
     a3c:	3d 05       	cpc	r19, r13
     a3e:	69 f4       	brne	.+26     	; 0xa5a <_Z7OS_Initv+0x2d0>
     a40:	31 96       	adiw	r30, 0x01	; 1
     a42:	80 81       	ld	r24, Z
     a44:	91 81       	ldd	r25, Z+1	; 0x01
     a46:	00 97       	sbiw	r24, 0x00	; 0
     a48:	41 f0       	breq	.+16     	; 0xa5a <_Z7OS_Initv+0x2d0>
     a4a:	90 93 f0 02 	sts	0x02F0, r25
     a4e:	80 93 ef 02 	sts	0x02EF, r24
     a52:	fc 01       	movw	r30, r24
     a54:	ee 5e       	subi	r30, 0xEE	; 238
     a56:	fe 4f       	sbci	r31, 0xFE	; 254
     a58:	15 c0       	rjmp	.+42     	; 0xa84 <_Z7OS_Initv+0x2fa>
     a5a:	80 91 f1 02 	lds	r24, 0x02F1
     a5e:	90 91 f2 02 	lds	r25, 0x02F2
     a62:	f6 01       	movw	r30, r12
     a64:	ee 5e       	subi	r30, 0xEE	; 238
     a66:	fe 4f       	sbci	r31, 0xFE	; 254
     a68:	8c 15       	cp	r24, r12
     a6a:	9d 05       	cpc	r25, r13
     a6c:	d1 f4       	brne	.+52     	; 0xaa2 <_Z7OS_Initv+0x318>
     a6e:	80 81       	ld	r24, Z
     a70:	91 81       	ldd	r25, Z+1	; 0x01
     a72:	00 97       	sbiw	r24, 0x00	; 0
     a74:	51 f0       	breq	.+20     	; 0xa8a <_Z7OS_Initv+0x300>
     a76:	90 93 f2 02 	sts	0x02F2, r25
     a7a:	80 93 f1 02 	sts	0x02F1, r24
     a7e:	fc 01       	movw	r30, r24
     a80:	e0 5f       	subi	r30, 0xF0	; 240
     a82:	fe 4f       	sbci	r31, 0xFE	; 254
     a84:	11 82       	std	Z+1, r1	; 0x01
     a86:	10 82       	st	Z, r1
     a88:	1e c0       	rjmp	.+60     	; 0xac6 <_Z7OS_Initv+0x33c>
     a8a:	2c 15       	cp	r18, r12
     a8c:	3d 05       	cpc	r19, r13
     a8e:	49 f4       	brne	.+18     	; 0xaa2 <_Z7OS_Initv+0x318>
     a90:	10 92 f2 02 	sts	0x02F2, r1
     a94:	10 92 f1 02 	sts	0x02F1, r1
     a98:	10 92 f0 02 	sts	0x02F0, r1
     a9c:	10 92 ef 02 	sts	0x02EF, r1
     aa0:	12 c0       	rjmp	.+36     	; 0xac6 <_Z7OS_Initv+0x33c>
     aa2:	80 81       	ld	r24, Z
     aa4:	91 81       	ldd	r25, Z+1	; 0x01
     aa6:	fc 01       	movw	r30, r24
     aa8:	e0 5f       	subi	r30, 0xF0	; 240
     aaa:	fe 4f       	sbci	r31, 0xFE	; 254
     aac:	a0 81       	ld	r26, Z
     aae:	b1 81       	ldd	r27, Z+1	; 0x01
     ab0:	a0 5f       	subi	r26, 0xF0	; 240
     ab2:	be 4f       	sbci	r27, 0xFE	; 254
     ab4:	2d 91       	ld	r18, X+
     ab6:	3c 91       	ld	r19, X
     ab8:	31 83       	std	Z+1, r19	; 0x01
     aba:	20 83       	st	Z, r18
     abc:	f9 01       	movw	r30, r18
     abe:	ee 5e       	subi	r30, 0xEE	; 238
     ac0:	fe 4f       	sbci	r31, 0xFE	; 254
     ac2:	91 83       	std	Z+1, r25	; 0x01
     ac4:	80 83       	st	Z, r24
     ac6:	b6 01       	movw	r22, r12
     ac8:	87 ef       	ldi	r24, 0xF7	; 247
     aca:	92 e0       	ldi	r25, 0x02	; 2
     acc:	2c c0       	rjmp	.+88     	; 0xb26 <_Z7OS_Initv+0x39c>
     ace:	f6 01       	movw	r30, r12
     ad0:	e1 5f       	subi	r30, 0xF1	; 241
     ad2:	fe 4f       	sbci	r31, 0xFE	; 254
     ad4:	80 81       	ld	r24, Z
     ad6:	81 30       	cpi	r24, 0x01	; 1
     ad8:	31 f0       	breq	.+12     	; 0xae6 <_Z7OS_Initv+0x35c>
     ada:	83 30       	cpi	r24, 0x03	; 3
     adc:	41 f4       	brne	.+16     	; 0xaee <_Z7OS_Initv+0x364>
     ade:	b6 01       	movw	r22, r12
     ae0:	8b ee       	ldi	r24, 0xEB	; 235
     ae2:	92 e0       	ldi	r25, 0x02	; 2
     ae4:	03 c0       	rjmp	.+6      	; 0xaec <_Z7OS_Initv+0x362>
     ae6:	b6 01       	movw	r22, r12
     ae8:	83 ef       	ldi	r24, 0xF3	; 243
     aea:	92 e0       	ldi	r25, 0x02	; 2
     aec:	92 dc       	rcall	.-1756   	; 0x412 <_ZL7enqueueP7queue_tP9td_struct>
     aee:	f6 01       	movw	r30, r12
     af0:	e4 5f       	subi	r30, 0xF4	; 244
     af2:	fe 4f       	sbci	r31, 0xFE	; 254
     af4:	f0 82       	st	Z, r15
     af6:	08 c0       	rjmp	.+16     	; 0xb08 <_Z7OS_Initv+0x37e>
     af8:	8f ef       	ldi	r24, 0xFF	; 255
     afa:	49 cf       	rjmp	.-366    	; 0x98e <_Z7OS_Initv+0x204>
     afc:	fb 01       	movw	r30, r22
     afe:	e4 5f       	subi	r30, 0xF4	; 244
     b00:	fe 4f       	sbci	r31, 0xFE	; 254
     b02:	20 83       	st	Z, r18
     b04:	81 30       	cpi	r24, 0x01	; 1
     b06:	69 f0       	breq	.+26     	; 0xb22 <_Z7OS_Initv+0x398>
     b08:	10 92 0c 03 	sts	0x030C, r1
     b0c:	9d ce       	rjmp	.-710    	; 0x848 <_Z7OS_Initv+0xbe>
     b0e:	81 30       	cpi	r24, 0x01	; 1
     b10:	d9 f7       	brne	.-10     	; 0xb08 <_Z7OS_Initv+0x37e>
     b12:	80 91 01 03 	lds	r24, 0x0301
     b16:	82 30       	cpi	r24, 0x02	; 2
     b18:	b9 f7       	brne	.-18     	; 0xb08 <_Z7OS_Initv+0x37e>
     b1a:	fb 01       	movw	r30, r22
     b1c:	e4 5f       	subi	r30, 0xF4	; 244
     b1e:	fe 4f       	sbci	r31, 0xFE	; 254
     b20:	80 83       	st	Z, r24
     b22:	83 ef       	ldi	r24, 0xF3	; 243
     b24:	92 e0       	ldi	r25, 0x02	; 2
     b26:	75 dc       	rcall	.-1814   	; 0x412 <_ZL7enqueueP7queue_tP9td_struct>
     b28:	ef cf       	rjmp	.-34     	; 0xb08 <_Z7OS_Initv+0x37e>

00000b2a <Service_Init>:
     b2a:	9f b7       	in	r25, 0x3f	; 63
     b2c:	f8 94       	cli
     b2e:	80 91 4a 02 	lds	r24, 0x024A
     b32:	8a 30       	cpi	r24, 0x0A	; 10
     b34:	a8 f4       	brcc	.+42     	; 0xb60 <Service_Init+0x36>
     b36:	20 e1       	ldi	r18, 0x10	; 16
     b38:	82 9f       	mul	r24, r18
     b3a:	f0 01       	movw	r30, r0
     b3c:	11 24       	eor	r1, r1
     b3e:	e5 5b       	subi	r30, 0xB5	; 181
     b40:	fd 4f       	sbci	r31, 0xFD	; 253
     b42:	17 86       	std	Z+15, r1	; 0x0f
     b44:	16 86       	std	Z+14, r1	; 0x0e
     b46:	8f 5f       	subi	r24, 0xFF	; 255
     b48:	80 93 4a 02 	sts	0x024A, r24
     b4c:	9f bf       	out	0x3f, r25	; 63
     b4e:	80 91 4a 02 	lds	r24, 0x024A
     b52:	20 e1       	ldi	r18, 0x10	; 16
     b54:	82 9f       	mul	r24, r18
     b56:	c0 01       	movw	r24, r0
     b58:	11 24       	eor	r1, r1
     b5a:	85 5c       	subi	r24, 0xC5	; 197
     b5c:	9d 4f       	sbci	r25, 0xFD	; 253
     b5e:	08 95       	ret
     b60:	8e e0       	ldi	r24, 0x0E	; 14
     b62:	80 93 00 02 	sts	0x0200, r24
     b66:	f0 dc       	rcall	.-1568   	; 0x548 <OS_Abort>

00000b68 <Service_Subscribe>:
     b68:	cf 93       	push	r28
     b6a:	cf b7       	in	r28, 0x3f	; 63
     b6c:	f8 94       	cli
     b6e:	20 91 c3 0c 	lds	r18, 0x0CC3
     b72:	30 91 c4 0c 	lds	r19, 0x0CC4
     b76:	f9 01       	movw	r30, r18
     b78:	e1 5f       	subi	r30, 0xF1	; 241
     b7a:	fe 4f       	sbci	r31, 0xFE	; 254
     b7c:	40 81       	ld	r20, Z
     b7e:	42 30       	cpi	r20, 0x02	; 2
     b80:	11 f4       	brne	.+4      	; 0xb86 <Service_Subscribe+0x1e>
     b82:	8d e0       	ldi	r24, 0x0D	; 13
     b84:	1f c0       	rjmp	.+62     	; 0xbc4 <Service_Subscribe+0x5c>
     b86:	fc 01       	movw	r30, r24
     b88:	46 85       	ldd	r20, Z+14	; 0x0e
     b8a:	57 85       	ldd	r21, Z+15	; 0x0f
     b8c:	43 30       	cpi	r20, 0x03	; 3
     b8e:	51 05       	cpc	r21, r1
     b90:	c4 f4       	brge	.+48     	; 0xbc2 <Service_Subscribe+0x5a>
     b92:	fa 01       	movw	r30, r20
     b94:	ee 0f       	add	r30, r30
     b96:	ff 1f       	adc	r31, r31
     b98:	e8 0f       	add	r30, r24
     b9a:	f9 1f       	adc	r31, r25
     b9c:	31 83       	std	Z+1, r19	; 0x01
     b9e:	20 83       	st	Z, r18
     ba0:	77 83       	std	Z+7, r23	; 0x07
     ba2:	66 83       	std	Z+6, r22	; 0x06
     ba4:	4f 5f       	subi	r20, 0xFF	; 255
     ba6:	5f 4f       	sbci	r21, 0xFF	; 255
     ba8:	fc 01       	movw	r30, r24
     baa:	57 87       	std	Z+15, r21	; 0x0f
     bac:	46 87       	std	Z+14, r20	; 0x0e
     bae:	f9 01       	movw	r30, r18
     bb0:	e4 5f       	subi	r30, 0xF4	; 244
     bb2:	fe 4f       	sbci	r31, 0xFE	; 254
     bb4:	83 e0       	ldi	r24, 0x03	; 3
     bb6:	80 83       	st	Z, r24
     bb8:	cf bf       	out	0x3f, r28	; 63
     bba:	d2 db       	rcall	.-2140   	; 0x360 <_ZL12enter_kernelv>
     bbc:	cf bf       	out	0x3f, r28	; 63
     bbe:	cf 91       	pop	r28
     bc0:	08 95       	ret
     bc2:	8c e0       	ldi	r24, 0x0C	; 12
     bc4:	80 93 00 02 	sts	0x0200, r24
     bc8:	bf dc       	rcall	.-1666   	; 0x548 <OS_Abort>

00000bca <Service_Publish>:
     bca:	af 92       	push	r10
     bcc:	bf 92       	push	r11
     bce:	cf 92       	push	r12
     bd0:	df 92       	push	r13
     bd2:	ef 92       	push	r14
     bd4:	ff 92       	push	r15
     bd6:	0f 93       	push	r16
     bd8:	1f 93       	push	r17
     bda:	cf 93       	push	r28
     bdc:	df 93       	push	r29
     bde:	ec 01       	movw	r28, r24
     be0:	6b 01       	movw	r12, r22
     be2:	af b6       	in	r10, 0x3f	; 63
     be4:	f8 94       	cli
     be6:	7d 87       	std	Y+13, r23	; 0x0d
     be8:	6c 87       	std	Y+12, r22	; 0x0c
     bea:	7c 01       	movw	r14, r24
     bec:	00 e0       	ldi	r16, 0x00	; 0
     bee:	10 e0       	ldi	r17, 0x00	; 0
     bf0:	b2 e0       	ldi	r27, 0x02	; 2
     bf2:	bb 2e       	mov	r11, r27
     bf4:	8e 85       	ldd	r24, Y+14	; 0x0e
     bf6:	9f 85       	ldd	r25, Y+15	; 0x0f
     bf8:	08 17       	cp	r16, r24
     bfa:	19 07       	cpc	r17, r25
     bfc:	c4 f5       	brge	.+112    	; 0xc6e <Service_Publish+0xa4>
     bfe:	d7 01       	movw	r26, r14
     c00:	16 96       	adiw	r26, 0x06	; 6
     c02:	ed 91       	ld	r30, X+
     c04:	fc 91       	ld	r31, X
     c06:	17 97       	sbiw	r26, 0x07	; 7
     c08:	d1 82       	std	Z+1, r13	; 0x01
     c0a:	c0 82       	st	Z, r12
     c0c:	f7 01       	movw	r30, r14
     c0e:	61 91       	ld	r22, Z+
     c10:	71 91       	ld	r23, Z+
     c12:	7f 01       	movw	r14, r30
     c14:	fb 01       	movw	r30, r22
     c16:	e4 5f       	subi	r30, 0xF4	; 244
     c18:	fe 4f       	sbci	r31, 0xFE	; 254
     c1a:	b0 82       	st	Z, r11
     c1c:	33 96       	adiw	r30, 0x03	; 3
     c1e:	80 81       	ld	r24, Z
     c20:	83 30       	cpi	r24, 0x03	; 3
     c22:	b9 f4       	brne	.+46     	; 0xc52 <Service_Publish+0x88>
     c24:	8b ee       	ldi	r24, 0xEB	; 235
     c26:	92 e0       	ldi	r25, 0x02	; 2
     c28:	f4 db       	rcall	.-2072   	; 0x412 <_ZL7enqueueP7queue_tP9td_struct>
     c2a:	60 91 c3 0c 	lds	r22, 0x0CC3
     c2e:	70 91 c4 0c 	lds	r23, 0x0CC4
     c32:	fb 01       	movw	r30, r22
     c34:	e1 5f       	subi	r30, 0xF1	; 241
     c36:	fe 4f       	sbci	r31, 0xFE	; 254
     c38:	80 81       	ld	r24, Z
     c3a:	81 30       	cpi	r24, 0x01	; 1
     c3c:	19 f4       	brne	.+6      	; 0xc44 <Service_Publish+0x7a>
     c3e:	33 97       	sbiw	r30, 0x03	; 3
     c40:	b0 82       	st	Z, r11
     c42:	0f c0       	rjmp	.+30     	; 0xc62 <Service_Publish+0x98>
     c44:	82 30       	cpi	r24, 0x02	; 2
     c46:	81 f4       	brne	.+32     	; 0xc68 <Service_Publish+0x9e>
     c48:	fb 01       	movw	r30, r22
     c4a:	e4 5f       	subi	r30, 0xF4	; 244
     c4c:	fe 4f       	sbci	r31, 0xFE	; 254
     c4e:	80 83       	st	Z, r24
     c50:	0b c0       	rjmp	.+22     	; 0xc68 <Service_Publish+0x9e>
     c52:	82 30       	cpi	r24, 0x02	; 2
     c54:	21 f4       	brne	.+8      	; 0xc5e <Service_Publish+0x94>
     c56:	8a e0       	ldi	r24, 0x0A	; 10
     c58:	80 93 00 02 	sts	0x0200, r24
     c5c:	75 dc       	rcall	.-1814   	; 0x548 <OS_Abort>
     c5e:	81 30       	cpi	r24, 0x01	; 1
     c60:	19 f4       	brne	.+6      	; 0xc68 <Service_Publish+0x9e>
     c62:	83 ef       	ldi	r24, 0xF3	; 243
     c64:	92 e0       	ldi	r25, 0x02	; 2
     c66:	d5 db       	rcall	.-2134   	; 0x412 <_ZL7enqueueP7queue_tP9td_struct>
     c68:	0f 5f       	subi	r16, 0xFF	; 255
     c6a:	1f 4f       	sbci	r17, 0xFF	; 255
     c6c:	c3 cf       	rjmp	.-122    	; 0xbf4 <Service_Publish+0x2a>
     c6e:	1f 86       	std	Y+15, r1	; 0x0f
     c70:	1e 86       	std	Y+14, r1	; 0x0e
     c72:	76 db       	rcall	.-2324   	; 0x360 <_ZL12enter_kernelv>
     c74:	af be       	out	0x3f, r10	; 63
     c76:	df 91       	pop	r29
     c78:	cf 91       	pop	r28
     c7a:	1f 91       	pop	r17
     c7c:	0f 91       	pop	r16
     c7e:	ff 90       	pop	r15
     c80:	ef 90       	pop	r14
     c82:	df 90       	pop	r13
     c84:	cf 90       	pop	r12
     c86:	bf 90       	pop	r11
     c88:	af 90       	pop	r10
     c8a:	08 95       	ret

00000c8c <Task_Create_System>:
     c8c:	cf 93       	push	r28
     c8e:	cf b7       	in	r28, 0x3f	; 63
     c90:	f8 94       	cli
     c92:	90 93 fe 02 	sts	0x02FE, r25
     c96:	80 93 fd 02 	sts	0x02FD, r24
     c9a:	70 93 00 03 	sts	0x0300, r23
     c9e:	60 93 ff 02 	sts	0x02FF, r22
     ca2:	83 e0       	ldi	r24, 0x03	; 3
     ca4:	80 93 01 03 	sts	0x0301, r24
     ca8:	82 e0       	ldi	r24, 0x02	; 2
     caa:	80 93 0c 03 	sts	0x030C, r24
     cae:	58 db       	rcall	.-2384   	; 0x360 <_ZL12enter_kernelv>
     cb0:	80 91 fb 02 	lds	r24, 0x02FB
     cb4:	90 91 fc 02 	lds	r25, 0x02FC
     cb8:	cf bf       	out	0x3f, r28	; 63
     cba:	cf 91       	pop	r28
     cbc:	08 95       	ret

00000cbe <Task_Create_Periodic>:
     cbe:	0f 93       	push	r16
     cc0:	1f 93       	push	r17
     cc2:	cf 93       	push	r28
     cc4:	cf b7       	in	r28, 0x3f	; 63
     cc6:	f8 94       	cli
     cc8:	90 93 fe 02 	sts	0x02FE, r25
     ccc:	80 93 fd 02 	sts	0x02FD, r24
     cd0:	70 93 00 03 	sts	0x0300, r23
     cd4:	60 93 ff 02 	sts	0x02FF, r22
     cd8:	82 e0       	ldi	r24, 0x02	; 2
     cda:	80 93 01 03 	sts	0x0301, r24
     cde:	50 93 07 03 	sts	0x0307, r21
     ce2:	40 93 06 03 	sts	0x0306, r20
     ce6:	30 93 09 03 	sts	0x0309, r19
     cea:	20 93 08 03 	sts	0x0308, r18
     cee:	10 93 0b 03 	sts	0x030B, r17
     cf2:	00 93 0a 03 	sts	0x030A, r16
     cf6:	10 93 03 03 	sts	0x0303, r17
     cfa:	00 93 02 03 	sts	0x0302, r16
     cfe:	30 93 05 03 	sts	0x0305, r19
     d02:	20 93 04 03 	sts	0x0304, r18
     d06:	80 93 0c 03 	sts	0x030C, r24
     d0a:	2a db       	rcall	.-2476   	; 0x360 <_ZL12enter_kernelv>
     d0c:	80 91 fb 02 	lds	r24, 0x02FB
     d10:	90 91 fc 02 	lds	r25, 0x02FC
     d14:	cf bf       	out	0x3f, r28	; 63
     d16:	cf 91       	pop	r28
     d18:	1f 91       	pop	r17
     d1a:	0f 91       	pop	r16
     d1c:	08 95       	ret

00000d1e <Task_Next>:
     d1e:	cf 93       	push	r28
     d20:	df 93       	push	r29
     d22:	1f 92       	push	r1
     d24:	cd b7       	in	r28, 0x3d	; 61
     d26:	de b7       	in	r29, 0x3e	; 62
     d28:	8f b7       	in	r24, 0x3f	; 63
     d2a:	89 83       	std	Y+1, r24	; 0x01
     d2c:	f8 94       	cli
     d2e:	84 e0       	ldi	r24, 0x04	; 4
     d30:	80 93 0c 03 	sts	0x030C, r24
     d34:	15 db       	rcall	.-2518   	; 0x360 <_ZL12enter_kernelv>
     d36:	89 81       	ldd	r24, Y+1	; 0x01
     d38:	8f bf       	out	0x3f, r24	; 63
     d3a:	0f 90       	pop	r0
     d3c:	df 91       	pop	r29
     d3e:	cf 91       	pop	r28
     d40:	08 95       	ret

00000d42 <main>:
int main()
{
    //DDRB = (_BV(PB5));
	//PORTB &= ~_BV(PB5);

	OS_Init();
     d42:	23 dd       	rcall	.-1466   	; 0x78a <_Z7OS_Initv>

00000d44 <_Z18send_recieve_radiov>:
			Task_Next();
		}
	}
}

void send_IR_Command(){
     d44:	cf 93       	push	r28
     d46:	df 93       	push	r29
     d48:	cd b7       	in	r28, 0x3d	; 61
     d4a:	de b7       	in	r29, 0x3e	; 62
     d4c:	a2 97       	sbiw	r28, 0x22	; 34
     d4e:	0f b6       	in	r0, 0x3f	; 63
     d50:	f8 94       	cli
     d52:	de bf       	out	0x3e, r29	; 62
     d54:	0f be       	out	0x3f, r0	; 63
     d56:	cd bf       	out	0x3d, r28	; 61
     d58:	27 9a       	sbi	0x04, 7	; 4
     d5a:	15 b8       	out	0x05, r1	; 5
     d5c:	88 e1       	ldi	r24, 0x18	; 24
     d5e:	92 e0       	ldi	r25, 0x02	; 2
     d60:	e7 d2       	rcall	.+1486   	; 0x1330 <_Z17Radio_Set_Tx_AddrPh>
     d62:	11 e0       	ldi	r17, 0x01	; 1
     d64:	be 01       	movw	r22, r28
     d66:	6f 5d       	subi	r22, 0xDF	; 223
     d68:	7f 4f       	sbci	r23, 0xFF	; 255
     d6a:	80 91 e1 0c 	lds	r24, 0x0CE1
     d6e:	90 91 e2 0c 	lds	r25, 0x0CE2
     d72:	fa de       	rcall	.-524    	; 0xb68 <Service_Subscribe>
     d74:	ce 01       	movw	r24, r28
     d76:	01 96       	adiw	r24, 0x01	; 1
     d78:	64 d3       	rcall	.+1736   	; 0x1442 <_Z13Radio_ReceiveP3_rp>
     d7a:	73 9a       	sbi	0x0e, 3	; 14
     d7c:	83 50       	subi	r24, 0x03	; 3
     d7e:	82 30       	cpi	r24, 0x02	; 2
     d80:	88 f7       	brcc	.-30     	; 0xd64 <_Z18send_recieve_radiov+0x20>
     d82:	20 91 df 0c 	lds	r18, 0x0CDF
     d86:	e5 e0       	ldi	r30, 0x05	; 5
     d88:	f0 e0       	ldi	r31, 0x00	; 0
     d8a:	ec 0f       	add	r30, r28
     d8c:	fd 1f       	adc	r31, r29
     d8e:	e2 0f       	add	r30, r18
     d90:	f1 1d       	adc	r31, r1
     d92:	80 81       	ld	r24, Z
     d94:	99 81       	ldd	r25, Y+1	; 0x01
     d96:	91 11       	cpse	r25, r1
     d98:	e5 cf       	rjmp	.-54     	; 0xd64 <_Z18send_recieve_radiov+0x20>
     d9a:	90 91 e0 0c 	lds	r25, 0x0CE0
     d9e:	89 17       	cp	r24, r25
     da0:	71 f0       	breq	.+28     	; 0xdbe <_Z18send_recieve_radiov+0x7a>
     da2:	81 fd       	sbrc	r24, 1
     da4:	0a c0       	rjmp	.+20     	; 0xdba <_Z18send_recieve_radiov+0x76>
     da6:	91 fd       	sbrc	r25, 1
     da8:	08 c0       	rjmp	.+16     	; 0xdba <_Z18send_recieve_radiov+0x76>
     daa:	2c 83       	std	Y+4, r18	; 0x04
     dac:	9d 83       	std	Y+5, r25	; 0x05
     dae:	19 83       	std	Y+1, r17	; 0x01
     db0:	61 e0       	ldi	r22, 0x01	; 1
     db2:	ce 01       	movw	r24, r28
     db4:	01 96       	adiw	r24, 0x01	; 1
     db6:	f6 d2       	rcall	.+1516   	; 0x13a4 <_Z14Radio_TransmitP3_rp14_radio_tx_wait>
     db8:	02 c0       	rjmp	.+4      	; 0xdbe <_Z18send_recieve_radiov+0x7a>
     dba:	80 93 e0 0c 	sts	0x0CE0, r24
     dbe:	ce 01       	movw	r24, r28
     dc0:	01 96       	adiw	r24, 0x01	; 1
     dc2:	3f d3       	rcall	.+1662   	; 0x1442 <_Z13Radio_ReceiveP3_rp>
     dc4:	db cf       	rjmp	.-74     	; 0xd7c <_Z18send_recieve_radiov+0x38>

00000dc6 <_Z18Send_Drive_Commandv>:
     dc6:	cf 92       	push	r12
     dc8:	df 92       	push	r13
     dca:	ef 92       	push	r14
     dcc:	ff 92       	push	r15
     dce:	0f 93       	push	r16
     dd0:	1f 93       	push	r17
     dd2:	cf 93       	push	r28
     dd4:	df 93       	push	r29
     dd6:	80 91 e0 0c 	lds	r24, 0x0CE0
     dda:	80 fd       	sbrc	r24, 0
     ddc:	3d c0       	rjmp	.+122    	; 0xe58 <_Z18Send_Drive_Commandv+0x92>
     dde:	00 ef       	ldi	r16, 0xF0	; 240
     de0:	10 e0       	ldi	r17, 0x00	; 0
     de2:	c4 e6       	ldi	r28, 0x64	; 100
     de4:	d0 e0       	ldi	r29, 0x00	; 0
     de6:	ee 24       	eor	r14, r14
     de8:	ea 94       	dec	r14
     dea:	fe 2c       	mov	r15, r14
     dec:	cc 24       	eor	r12, r12
     dee:	c3 94       	inc	r12
     df0:	d1 2c       	mov	r13, r1
     df2:	65 ec       	ldi	r22, 0xC5	; 197
     df4:	7c e0       	ldi	r23, 0x0C	; 12
     df6:	82 e0       	ldi	r24, 0x02	; 2
     df8:	3a d4       	rcall	.+2164   	; 0x166e <_Z25Roomba_UpdateSensorPacket4_rsgP20roomba_sensor_data_t>
     dfa:	65 ec       	ldi	r22, 0xC5	; 197
     dfc:	7c e0       	ldi	r23, 0x0C	; 12
     dfe:	81 e0       	ldi	r24, 0x01	; 1
     e00:	36 d4       	rcall	.+2156   	; 0x166e <_Z25Roomba_UpdateSensorPacket4_rsgP20roomba_sensor_data_t>
     e02:	80 91 c5 0c 	lds	r24, 0x0CC5
     e06:	80 ff       	sbrs	r24, 0
     e08:	09 c0       	rjmp	.+18     	; 0xe1c <_Z18Send_Drive_Commandv+0x56>
     e0a:	d0 93 02 02 	sts	0x0202, r29
     e0e:	c0 93 01 02 	sts	0x0201, r28
     e12:	d0 92 e4 0c 	sts	0x0CE4, r13
     e16:	c0 92 e3 0c 	sts	0x0CE3, r12
     e1a:	13 c0       	rjmp	.+38     	; 0xe42 <_Z18Send_Drive_Commandv+0x7c>
     e1c:	81 ff       	sbrs	r24, 1
     e1e:	09 c0       	rjmp	.+18     	; 0xe32 <_Z18Send_Drive_Commandv+0x6c>
     e20:	d0 93 02 02 	sts	0x0202, r29
     e24:	c0 93 01 02 	sts	0x0201, r28
     e28:	f0 92 e4 0c 	sts	0x0CE4, r15
     e2c:	e0 92 e3 0c 	sts	0x0CE3, r14
     e30:	08 c0       	rjmp	.+16     	; 0xe42 <_Z18Send_Drive_Commandv+0x7c>
     e32:	10 93 02 02 	sts	0x0202, r17
     e36:	00 93 01 02 	sts	0x0201, r16
     e3a:	10 92 e4 0c 	sts	0x0CE4, r1
     e3e:	10 92 e3 0c 	sts	0x0CE3, r1
     e42:	60 91 e3 0c 	lds	r22, 0x0CE3
     e46:	70 91 e4 0c 	lds	r23, 0x0CE4
     e4a:	80 91 01 02 	lds	r24, 0x0201
     e4e:	90 91 02 02 	lds	r25, 0x0202
     e52:	95 d4       	rcall	.+2346   	; 0x177e <_Z12Roomba_Driveii>
     e54:	64 df       	rcall	.-312    	; 0xd1e <Task_Next>
     e56:	cd cf       	rjmp	.-102    	; 0xdf2 <_Z18Send_Drive_Commandv+0x2c>
     e58:	df 91       	pop	r29
     e5a:	cf 91       	pop	r28
     e5c:	1f 91       	pop	r17
     e5e:	0f 91       	pop	r16
     e60:	ff 90       	pop	r15
     e62:	ef 90       	pop	r14
     e64:	df 90       	pop	r13
     e66:	cf 90       	pop	r12
     e68:	08 95       	ret

00000e6a <_Z12ir_rxhandlerv>:
     e6a:	1d da       	rcall	.-3014   	; 0x2a6 <_Z10IR_getLastv>
     e6c:	82 34       	cpi	r24, 0x42	; 66
     e6e:	59 f4       	brne	.+22     	; 0xe86 <_Z12ir_rxhandlerv+0x1c>
     e70:	80 91 e0 0c 	lds	r24, 0x0CE0
     e74:	81 fd       	sbrc	r24, 1
     e76:	2b c0       	rjmp	.+86     	; 0xece <_Z12ir_rxhandlerv+0x64>
     e78:	20 91 df 0c 	lds	r18, 0x0CDF
     e7c:	98 2f       	mov	r25, r24
     e7e:	91 70       	andi	r25, 0x01	; 1
     e80:	22 30       	cpi	r18, 0x02	; 2
     e82:	98 f4       	brcc	.+38     	; 0xeaa <_Z12ir_rxhandlerv+0x40>
     e84:	0c c0       	rjmp	.+24     	; 0xe9e <_Z12ir_rxhandlerv+0x34>
     e86:	81 34       	cpi	r24, 0x41	; 65
     e88:	11 f5       	brne	.+68     	; 0xece <_Z12ir_rxhandlerv+0x64>
     e8a:	80 91 e0 0c 	lds	r24, 0x0CE0
     e8e:	81 fd       	sbrc	r24, 1
     e90:	1e c0       	rjmp	.+60     	; 0xece <_Z12ir_rxhandlerv+0x64>
     e92:	20 91 df 0c 	lds	r18, 0x0CDF
     e96:	98 2f       	mov	r25, r24
     e98:	91 70       	andi	r25, 0x01	; 1
     e9a:	22 30       	cpi	r18, 0x02	; 2
     e9c:	30 f0       	brcs	.+12     	; 0xeaa <_Z12ir_rxhandlerv+0x40>
     e9e:	91 30       	cpi	r25, 0x01	; 1
     ea0:	b1 f4       	brne	.+44     	; 0xece <_Z12ir_rxhandlerv+0x64>
     ea2:	89 27       	eor	r24, r25
     ea4:	80 93 e0 0c 	sts	0x0CE0, r24
     ea8:	06 c0       	rjmp	.+12     	; 0xeb6 <_Z12ir_rxhandlerv+0x4c>
     eaa:	91 11       	cpse	r25, r1
     eac:	10 c0       	rjmp	.+32     	; 0xece <_Z12ir_rxhandlerv+0x64>
     eae:	91 e0       	ldi	r25, 0x01	; 1
     eb0:	98 27       	eor	r25, r24
     eb2:	90 93 e0 0c 	sts	0x0CE0, r25
     eb6:	80 91 02 01 	lds	r24, 0x0102
     eba:	98 e0       	ldi	r25, 0x08	; 8
     ebc:	89 27       	eor	r24, r25
     ebe:	80 93 02 01 	sts	0x0102, r24
     ec2:	80 91 02 01 	lds	r24, 0x0102
     ec6:	90 e1       	ldi	r25, 0x10	; 16
     ec8:	89 27       	eor	r24, r25
     eca:	80 93 02 01 	sts	0x0102, r24
     ece:	08 95       	ret

00000ed0 <_Z15radio_rxhandlerh>:
     ed0:	9e b1       	in	r25, 0x0e	; 14
     ed2:	28 e0       	ldi	r18, 0x08	; 8
     ed4:	92 27       	eor	r25, r18
     ed6:	9e b9       	out	0x0e, r25	; 14
     ed8:	68 2f       	mov	r22, r24
     eda:	70 e0       	ldi	r23, 0x00	; 0
     edc:	80 91 e1 0c 	lds	r24, 0x0CE1
     ee0:	90 91 e2 0c 	lds	r25, 0x0CE2
     ee4:	72 de       	rcall	.-796    	; 0xbca <Service_Publish>
     ee6:	80 91 e0 0c 	lds	r24, 0x0CE0
     eea:	80 fd       	sbrc	r24, 0
     eec:	09 c0       	rjmp	.+18     	; 0xf00 <_Z15radio_rxhandlerh+0x30>
     eee:	80 91 02 01 	lds	r24, 0x0102
     ef2:	8f 7e       	andi	r24, 0xEF	; 239
     ef4:	80 93 02 01 	sts	0x0102, r24
     ef8:	80 91 02 01 	lds	r24, 0x0102
     efc:	88 60       	ori	r24, 0x08	; 8
     efe:	08 c0       	rjmp	.+16     	; 0xf10 <_Z15radio_rxhandlerh+0x40>
     f00:	80 91 02 01 	lds	r24, 0x0102
     f04:	80 61       	ori	r24, 0x10	; 16
     f06:	80 93 02 01 	sts	0x0102, r24
     f0a:	80 91 02 01 	lds	r24, 0x0102
     f0e:	87 7f       	andi	r24, 0xF7	; 247
     f10:	80 93 02 01 	sts	0x0102, r24
     f14:	08 95       	ret

00000f16 <setup>:
     f16:	80 91 01 01 	lds	r24, 0x0101
     f1a:	88 61       	ori	r24, 0x18	; 24
     f1c:	80 93 01 01 	sts	0x0101, r24
     f20:	6b 9a       	sbi	0x0d, 3	; 13
     f22:	80 91 e0 0c 	lds	r24, 0x0CE0
     f26:	80 fd       	sbrc	r24, 0
     f28:	04 c0       	rjmp	.+8      	; 0xf32 <setup+0x1c>
     f2a:	80 91 02 01 	lds	r24, 0x0102
     f2e:	88 60       	ori	r24, 0x08	; 8
     f30:	03 c0       	rjmp	.+6      	; 0xf38 <setup+0x22>
     f32:	80 91 02 01 	lds	r24, 0x0102
     f36:	80 61       	ori	r24, 0x10	; 16
     f38:	80 93 02 01 	sts	0x0102, r24
     f3c:	80 91 0a 01 	lds	r24, 0x010A
     f40:	84 60       	ori	r24, 0x04	; 4
     f42:	80 93 0a 01 	sts	0x010A, r24
     f46:	80 91 0b 01 	lds	r24, 0x010B
     f4a:	8b 7f       	andi	r24, 0xFB	; 251
     f4c:	80 93 0b 01 	sts	0x010B, r24
     f50:	2f ef       	ldi	r18, 0xFF	; 255
     f52:	89 e6       	ldi	r24, 0x69	; 105
     f54:	98 e1       	ldi	r25, 0x18	; 24
     f56:	21 50       	subi	r18, 0x01	; 1
     f58:	80 40       	sbci	r24, 0x00	; 0
     f5a:	90 40       	sbci	r25, 0x00	; 0
     f5c:	e1 f7       	brne	.-8      	; 0xf56 <setup+0x40>
     f5e:	00 c0       	rjmp	.+0      	; 0xf60 <setup+0x4a>
     f60:	00 00       	nop
     f62:	80 91 0b 01 	lds	r24, 0x010B
     f66:	84 60       	ori	r24, 0x04	; 4
     f68:	80 93 0b 01 	sts	0x010B, r24
     f6c:	2f ef       	ldi	r18, 0xFF	; 255
     f6e:	89 e6       	ldi	r24, 0x69	; 105
     f70:	98 e1       	ldi	r25, 0x18	; 24
     f72:	21 50       	subi	r18, 0x01	; 1
     f74:	80 40       	sbci	r24, 0x00	; 0
     f76:	90 40       	sbci	r25, 0x00	; 0
     f78:	e1 f7       	brne	.-8      	; 0xf72 <setup+0x5c>
     f7a:	00 c0       	rjmp	.+0      	; 0xf7c <setup+0x66>
     f7c:	00 00       	nop
     f7e:	80 91 03 02 	lds	r24, 0x0203
     f82:	ee d0       	rcall	.+476    	; 0x1160 <_Z10Radio_Inith>
     f84:	60 91 df 0c 	lds	r22, 0x0CDF
     f88:	25 e0       	ldi	r18, 0x05	; 5
     f8a:	62 9f       	mul	r22, r18
     f8c:	b0 01       	movw	r22, r0
     f8e:	11 24       	eor	r1, r1
     f90:	6c 5f       	subi	r22, 0xFC	; 252
     f92:	7d 4f       	sbci	r23, 0xFD	; 253
     f94:	41 e0       	ldi	r20, 0x01	; 1
     f96:	80 e0       	ldi	r24, 0x00	; 0
     f98:	57 d1       	rcall	.+686    	; 0x1248 <_Z18Radio_Configure_Rx11_radio_pipePh3_ed>
     f9a:	63 e0       	ldi	r22, 0x03	; 3
     f9c:	80 e0       	ldi	r24, 0x00	; 0
     f9e:	dc d1       	rcall	.+952    	; 0x1358 <_Z15Radio_Configure9_radio_dr15_radio_tx_power>
     fa0:	c4 dd       	rcall	.-1144   	; 0xb2a <Service_Init>
     fa2:	90 93 e2 0c 	sts	0x0CE2, r25
     fa6:	80 93 e1 0c 	sts	0x0CE1, r24
     faa:	2c d3       	rcall	.+1624   	; 0x1604 <_Z11Roomba_Initv>
     fac:	bc c8       	rjmp	.-3720   	; 0x126 <_Z7IR_initv>

00000fae <_Z6r_mainv>:
		Task_Next();
	}
}

int r_main(void)
{
     fae:	0f 93       	push	r16
     fb0:	1f 93       	push	r17
	
	setup();
     fb2:	b1 df       	rcall	.-158    	; 0xf16 <setup>
	Task_Create_System(send_recieve_radio, 0);
     fb4:	60 e0       	ldi	r22, 0x00	; 0
     fb6:	70 e0       	ldi	r23, 0x00	; 0
     fb8:	82 ea       	ldi	r24, 0xA2	; 162
     fba:	96 e0       	ldi	r25, 0x06	; 6
     fbc:	67 de       	rcall	.-818    	; 0xc8c <Task_Create_System>
	Task_Create_Periodic(Send_Drive_Command,0,10,4,5);
     fbe:	05 e0       	ldi	r16, 0x05	; 5
     fc0:	10 e0       	ldi	r17, 0x00	; 0
     fc2:	24 e0       	ldi	r18, 0x04	; 4
     fc4:	30 e0       	ldi	r19, 0x00	; 0
     fc6:	4a e0       	ldi	r20, 0x0A	; 10
     fc8:	50 e0       	ldi	r21, 0x00	; 0
     fca:	60 e0       	ldi	r22, 0x00	; 0
     fcc:	70 e0       	ldi	r23, 0x00	; 0
     fce:	83 ee       	ldi	r24, 0xE3	; 227
     fd0:	96 e0       	ldi	r25, 0x06	; 6
     fd2:	75 de       	rcall	.-790    	; 0xcbe <Task_Create_Periodic>
	
	return 1;
}
     fd4:	81 e0       	ldi	r24, 0x01	; 1
     fd6:	90 e0       	ldi	r25, 0x00	; 0
     fd8:	1f 91       	pop	r17
     fda:	0f 91       	pop	r16
     fdc:	08 95       	ret

00000fde <_ZL10get_statusv>:
}

void Radio_Flush()
{
	send_instruction(FLUSH_TX, NULL, NULL, 0);
	send_instruction(FLUSH_RX, NULL, NULL, 0);
     fde:	cf 93       	push	r28
     fe0:	df 93       	push	r29
     fe2:	c2 e0       	ldi	r28, 0x02	; 2
     fe4:	d1 e0       	ldi	r29, 0x01	; 1
     fe6:	88 81       	ld	r24, Y
     fe8:	8f 7b       	andi	r24, 0xBF	; 191
     fea:	88 83       	st	Y, r24
     fec:	8f ef       	ldi	r24, 0xFF	; 255
     fee:	04 d3       	rcall	.+1544   	; 0x15f8 <_Z14SPI_Write_Byteh>
     ff0:	98 81       	ld	r25, Y
     ff2:	90 64       	ori	r25, 0x40	; 64
     ff4:	98 83       	st	Y, r25
     ff6:	df 91       	pop	r29
     ff8:	cf 91       	pop	r28
     ffa:	08 95       	ret

00000ffc <_ZL12set_registerhPhh>:
     ffc:	cf 92       	push	r12
     ffe:	df 92       	push	r13
    1000:	ff 92       	push	r15
    1002:	0f 93       	push	r16
    1004:	1f 93       	push	r17
    1006:	cf 93       	push	r28
    1008:	df 93       	push	r29
    100a:	1f 92       	push	r1
    100c:	cd b7       	in	r28, 0x3d	; 61
    100e:	de b7       	in	r29, 0x3e	; 62
    1010:	8b 01       	movw	r16, r22
    1012:	92 e0       	ldi	r25, 0x02	; 2
    1014:	c9 2e       	mov	r12, r25
    1016:	dd 24       	eor	r13, r13
    1018:	d3 94       	inc	r13
    101a:	f6 01       	movw	r30, r12
    101c:	90 81       	ld	r25, Z
    101e:	9f 7b       	andi	r25, 0xBF	; 191
    1020:	90 83       	st	Z, r25
    1022:	8f 71       	andi	r24, 0x1F	; 31
    1024:	80 62       	ori	r24, 0x20	; 32
    1026:	49 83       	std	Y+1, r20	; 0x01
    1028:	e7 d2       	rcall	.+1486   	; 0x15f8 <_Z14SPI_Write_Byteh>
    102a:	f8 2e       	mov	r15, r24
    102c:	49 81       	ldd	r20, Y+1	; 0x01
    102e:	64 2f       	mov	r22, r20
    1030:	c8 01       	movw	r24, r16
    1032:	d5 d2       	rcall	.+1450   	; 0x15de <_Z15SPI_Write_BlockPhh>
    1034:	f6 01       	movw	r30, r12
    1036:	90 81       	ld	r25, Z
    1038:	90 64       	ori	r25, 0x40	; 64
    103a:	90 83       	st	Z, r25
    103c:	8f 2d       	mov	r24, r15
    103e:	0f 90       	pop	r0
    1040:	df 91       	pop	r29
    1042:	cf 91       	pop	r28
    1044:	1f 91       	pop	r17
    1046:	0f 91       	pop	r16
    1048:	ff 90       	pop	r15
    104a:	df 90       	pop	r13
    104c:	cf 90       	pop	r12
    104e:	08 95       	ret

00001050 <_ZL16send_instructionhPhS_h>:
    1050:	ef 92       	push	r14
    1052:	ff 92       	push	r15
    1054:	0f 93       	push	r16
    1056:	1f 93       	push	r17
    1058:	cf 93       	push	r28
    105a:	df 93       	push	r29
    105c:	1f 92       	push	r1
    105e:	cd b7       	in	r28, 0x3d	; 61
    1060:	de b7       	in	r29, 0x3e	; 62
    1062:	7b 01       	movw	r14, r22
    1064:	8a 01       	movw	r16, r20
    1066:	90 91 02 01 	lds	r25, 0x0102
    106a:	9f 7b       	andi	r25, 0xBF	; 191
    106c:	90 93 02 01 	sts	0x0102, r25
    1070:	29 83       	std	Y+1, r18	; 0x01
    1072:	c2 d2       	rcall	.+1412   	; 0x15f8 <_Z14SPI_Write_Byteh>
    1074:	29 81       	ldd	r18, Y+1	; 0x01
    1076:	22 23       	and	r18, r18
    1078:	59 f0       	breq	.+22     	; 0x1090 <_ZL16send_instructionhPhS_h+0x40>
    107a:	01 15       	cp	r16, r1
    107c:	11 05       	cpc	r17, r1
    107e:	21 f4       	brne	.+8      	; 0x1088 <_ZL16send_instructionhPhS_h+0x38>
    1080:	62 2f       	mov	r22, r18
    1082:	c7 01       	movw	r24, r14
    1084:	ac d2       	rcall	.+1368   	; 0x15de <_Z15SPI_Write_BlockPhh>
    1086:	04 c0       	rjmp	.+8      	; 0x1090 <_ZL16send_instructionhPhS_h+0x40>
    1088:	42 2f       	mov	r20, r18
    108a:	b8 01       	movw	r22, r16
    108c:	c7 01       	movw	r24, r14
    108e:	96 d2       	rcall	.+1324   	; 0x15bc <_Z19SPI_ReadWrite_BlockPhS_h>
    1090:	80 91 02 01 	lds	r24, 0x0102
    1094:	80 64       	ori	r24, 0x40	; 64
    1096:	80 93 02 01 	sts	0x0102, r24
    109a:	0f 90       	pop	r0
    109c:	df 91       	pop	r29
    109e:	cf 91       	pop	r28
    10a0:	1f 91       	pop	r17
    10a2:	0f 91       	pop	r16
    10a4:	ff 90       	pop	r15
    10a6:	ef 90       	pop	r14
    10a8:	08 95       	ret

000010aa <_ZL19reset_pipe0_addressv>:
    10aa:	80 91 2a 02 	lds	r24, 0x022A
    10ae:	88 23       	and	r24, r24
    10b0:	29 f0       	breq	.+10     	; 0x10bc <_ZL19reset_pipe0_addressv+0x12>
    10b2:	45 e0       	ldi	r20, 0x05	; 5
    10b4:	60 e2       	ldi	r22, 0x20	; 32
    10b6:	72 e0       	ldi	r23, 0x02	; 2
    10b8:	8a e0       	ldi	r24, 0x0A	; 10
    10ba:	a0 cf       	rjmp	.-192    	; 0xffc <_ZL12set_registerhPhh>
    10bc:	08 95       	ret

000010be <_ZL12get_registerhPhh.constprop.1>:
    10be:	ef 92       	push	r14
    10c0:	ff 92       	push	r15
    10c2:	1f 93       	push	r17
    10c4:	cf 93       	push	r28
    10c6:	df 93       	push	r29
    10c8:	1f 92       	push	r1
    10ca:	1f 92       	push	r1
    10cc:	cd b7       	in	r28, 0x3d	; 61
    10ce:	de b7       	in	r29, 0x3e	; 62
    10d0:	9f ef       	ldi	r25, 0xFF	; 255
    10d2:	fb 01       	movw	r30, r22
    10d4:	90 83       	st	Z, r25
    10d6:	22 e0       	ldi	r18, 0x02	; 2
    10d8:	e2 2e       	mov	r14, r18
    10da:	ff 24       	eor	r15, r15
    10dc:	f3 94       	inc	r15
    10de:	f7 01       	movw	r30, r14
    10e0:	90 81       	ld	r25, Z
    10e2:	9f 7b       	andi	r25, 0xBF	; 191
    10e4:	90 83       	st	Z, r25
    10e6:	8f 71       	andi	r24, 0x1F	; 31
    10e8:	69 83       	std	Y+1, r22	; 0x01
    10ea:	7a 83       	std	Y+2, r23	; 0x02
    10ec:	85 d2       	rcall	.+1290   	; 0x15f8 <_Z14SPI_Write_Byteh>
    10ee:	18 2f       	mov	r17, r24
    10f0:	41 e0       	ldi	r20, 0x01	; 1
    10f2:	69 81       	ldd	r22, Y+1	; 0x01
    10f4:	7a 81       	ldd	r23, Y+2	; 0x02
    10f6:	80 e0       	ldi	r24, 0x00	; 0
    10f8:	90 e0       	ldi	r25, 0x00	; 0
    10fa:	60 d2       	rcall	.+1216   	; 0x15bc <_Z19SPI_ReadWrite_BlockPhS_h>
    10fc:	f7 01       	movw	r30, r14
    10fe:	90 81       	ld	r25, Z
    1100:	90 64       	ori	r25, 0x40	; 64
    1102:	90 83       	st	Z, r25
    1104:	81 2f       	mov	r24, r17
    1106:	0f 90       	pop	r0
    1108:	0f 90       	pop	r0
    110a:	df 91       	pop	r29
    110c:	cf 91       	pop	r28
    110e:	1f 91       	pop	r17
    1110:	ff 90       	pop	r15
    1112:	ef 90       	pop	r14
    1114:	08 95       	ret

00001116 <_ZL11set_rx_modev>:
    1116:	cf 93       	push	r28
    1118:	df 93       	push	r29
    111a:	1f 92       	push	r1
    111c:	cd b7       	in	r28, 0x3d	; 61
    111e:	de b7       	in	r29, 0x3e	; 62
    1120:	be 01       	movw	r22, r28
    1122:	6f 5f       	subi	r22, 0xFF	; 255
    1124:	7f 4f       	sbci	r23, 0xFF	; 255
    1126:	80 e0       	ldi	r24, 0x00	; 0
    1128:	ca df       	rcall	.-108    	; 0x10be <_ZL12get_registerhPhh.constprop.1>
    112a:	89 81       	ldd	r24, Y+1	; 0x01
    112c:	80 fd       	sbrc	r24, 0
    112e:	14 c0       	rjmp	.+40     	; 0x1158 <_ZL11set_rx_modev+0x42>
    1130:	81 60       	ori	r24, 0x01	; 1
    1132:	89 83       	std	Y+1, r24	; 0x01
    1134:	41 e0       	ldi	r20, 0x01	; 1
    1136:	be 01       	movw	r22, r28
    1138:	6f 5f       	subi	r22, 0xFF	; 255
    113a:	7f 4f       	sbci	r23, 0xFF	; 255
    113c:	80 e0       	ldi	r24, 0x00	; 0
    113e:	5e df       	rcall	.-324    	; 0xffc <_ZL12set_registerhPhh>
    1140:	83 e0       	ldi	r24, 0x03	; 3
    1142:	91 e0       	ldi	r25, 0x01	; 1
    1144:	01 97       	sbiw	r24, 0x01	; 1
    1146:	f1 f7       	brne	.-4      	; 0x1144 <_ZL11set_rx_modev+0x2e>
    1148:	00 c0       	rjmp	.+0      	; 0x114a <_ZL11set_rx_modev+0x34>
    114a:	00 00       	nop
    114c:	83 e0       	ldi	r24, 0x03	; 3
    114e:	91 e0       	ldi	r25, 0x01	; 1
    1150:	01 97       	sbiw	r24, 0x01	; 1
    1152:	f1 f7       	brne	.-4      	; 0x1150 <_ZL11set_rx_modev+0x3a>
    1154:	00 c0       	rjmp	.+0      	; 0x1156 <_ZL11set_rx_modev+0x40>
    1156:	00 00       	nop
    1158:	0f 90       	pop	r0
    115a:	df 91       	pop	r29
    115c:	cf 91       	pop	r28
    115e:	08 95       	ret

00001160 <_Z10Radio_Inith>:
    1160:	1f 93       	push	r17
    1162:	cf 93       	push	r28
    1164:	df 93       	push	r29
    1166:	1f 92       	push	r1
    1168:	cd b7       	in	r28, 0x3d	; 61
    116a:	de b7       	in	r29, 0x3e	; 62
    116c:	18 2f       	mov	r17, r24
    116e:	10 92 e5 0c 	sts	0x0CE5, r1
    1172:	e2 e0       	ldi	r30, 0x02	; 2
    1174:	f1 e0       	ldi	r31, 0x01	; 1
    1176:	90 81       	ld	r25, Z
    1178:	9f 7d       	andi	r25, 0xDF	; 223
    117a:	90 83       	st	Z, r25
    117c:	e1 e0       	ldi	r30, 0x01	; 1
    117e:	f1 e0       	ldi	r31, 0x01	; 1
    1180:	90 81       	ld	r25, Z
    1182:	90 62       	ori	r25, 0x20	; 32
    1184:	90 83       	st	Z, r25
    1186:	90 81       	ld	r25, Z
    1188:	90 64       	ori	r25, 0x40	; 64
    118a:	90 83       	st	Z, r25
    118c:	6c 98       	cbi	0x0d, 4	; 13
    118e:	ea e6       	ldi	r30, 0x6A	; 106
    1190:	f0 e0       	ldi	r31, 0x00	; 0
    1192:	90 81       	ld	r25, Z
    1194:	92 60       	ori	r25, 0x02	; 2
    1196:	90 83       	st	Z, r25
    1198:	90 81       	ld	r25, Z
    119a:	9e 7f       	andi	r25, 0xFE	; 254
    119c:	90 83       	st	Z, r25
    119e:	ec 9a       	sbi	0x1d, 4	; 29
    11a0:	e4 9a       	sbi	0x1c, 4	; 28
    11a2:	8f ed       	ldi	r24, 0xDF	; 223
    11a4:	9b ea       	ldi	r25, 0xAB	; 171
    11a6:	01 97       	sbiw	r24, 0x01	; 1
    11a8:	f1 f7       	brne	.-4      	; 0x11a6 <_Z10Radio_Inith+0x46>
    11aa:	00 c0       	rjmp	.+0      	; 0x11ac <_Z10Radio_Inith+0x4c>
    11ac:	00 00       	nop
    11ae:	f9 d1       	rcall	.+1010   	; 0x15a2 <_Z8SPI_Initv>
    11b0:	83 e0       	ldi	r24, 0x03	; 3
    11b2:	89 83       	std	Y+1, r24	; 0x01
    11b4:	41 e0       	ldi	r20, 0x01	; 1
    11b6:	be 01       	movw	r22, r28
    11b8:	6f 5f       	subi	r22, 0xFF	; 255
    11ba:	7f 4f       	sbci	r23, 0xFF	; 255
    11bc:	1f df       	rcall	.-450    	; 0xffc <_ZL12set_registerhPhh>
    11be:	85 e1       	ldi	r24, 0x15	; 21
    11c0:	89 83       	std	Y+1, r24	; 0x01
    11c2:	41 e0       	ldi	r20, 0x01	; 1
    11c4:	be 01       	movw	r22, r28
    11c6:	6f 5f       	subi	r22, 0xFF	; 255
    11c8:	7f 4f       	sbci	r23, 0xFF	; 255
    11ca:	84 e0       	ldi	r24, 0x04	; 4
    11cc:	17 df       	rcall	.-466    	; 0xffc <_ZL12set_registerhPhh>
    11ce:	19 83       	std	Y+1, r17	; 0x01
    11d0:	41 e0       	ldi	r20, 0x01	; 1
    11d2:	be 01       	movw	r22, r28
    11d4:	6f 5f       	subi	r22, 0xFF	; 255
    11d6:	7f 4f       	sbci	r23, 0xFF	; 255
    11d8:	85 e0       	ldi	r24, 0x05	; 5
    11da:	10 df       	rcall	.-480    	; 0xffc <_ZL12set_registerhPhh>
    11dc:	89 e0       	ldi	r24, 0x09	; 9
    11de:	89 83       	std	Y+1, r24	; 0x01
    11e0:	41 e0       	ldi	r20, 0x01	; 1
    11e2:	be 01       	movw	r22, r28
    11e4:	6f 5f       	subi	r22, 0xFF	; 255
    11e6:	7f 4f       	sbci	r23, 0xFF	; 255
    11e8:	86 e0       	ldi	r24, 0x06	; 6
    11ea:	08 df       	rcall	.-496    	; 0xffc <_ZL12set_registerhPhh>
    11ec:	8f e0       	ldi	r24, 0x0F	; 15
    11ee:	89 83       	std	Y+1, r24	; 0x01
    11f0:	41 e0       	ldi	r20, 0x01	; 1
    11f2:	be 01       	movw	r22, r28
    11f4:	6f 5f       	subi	r22, 0xFF	; 255
    11f6:	7f 4f       	sbci	r23, 0xFF	; 255
    11f8:	80 e0       	ldi	r24, 0x00	; 0
    11fa:	00 df       	rcall	.-512    	; 0xffc <_ZL12set_registerhPhh>
    11fc:	80 e7       	ldi	r24, 0x70	; 112
    11fe:	89 83       	std	Y+1, r24	; 0x01
    1200:	41 e0       	ldi	r20, 0x01	; 1
    1202:	be 01       	movw	r22, r28
    1204:	6f 5f       	subi	r22, 0xFF	; 255
    1206:	7f 4f       	sbci	r23, 0xFF	; 255
    1208:	87 e0       	ldi	r24, 0x07	; 7
    120a:	f8 de       	rcall	.-528    	; 0xffc <_ZL12set_registerhPhh>
    120c:	20 e0       	ldi	r18, 0x00	; 0
    120e:	40 e0       	ldi	r20, 0x00	; 0
    1210:	50 e0       	ldi	r21, 0x00	; 0
    1212:	60 e0       	ldi	r22, 0x00	; 0
    1214:	70 e0       	ldi	r23, 0x00	; 0
    1216:	81 ee       	ldi	r24, 0xE1	; 225
    1218:	1b df       	rcall	.-458    	; 0x1050 <_ZL16send_instructionhPhS_h>
    121a:	20 e0       	ldi	r18, 0x00	; 0
    121c:	40 e0       	ldi	r20, 0x00	; 0
    121e:	50 e0       	ldi	r21, 0x00	; 0
    1220:	60 e0       	ldi	r22, 0x00	; 0
    1222:	70 e0       	ldi	r23, 0x00	; 0
    1224:	82 ee       	ldi	r24, 0xE2	; 226
    1226:	14 df       	rcall	.-472    	; 0x1050 <_ZL16send_instructionhPhS_h>
    1228:	8f e3       	ldi	r24, 0x3F	; 63
    122a:	9f e1       	ldi	r25, 0x1F	; 31
    122c:	01 97       	sbiw	r24, 0x01	; 1
    122e:	f1 f7       	brne	.-4      	; 0x122c <_Z10Radio_Inith+0xcc>
    1230:	00 c0       	rjmp	.+0      	; 0x1232 <_Z10Radio_Inith+0xd2>
    1232:	00 00       	nop
    1234:	e2 e0       	ldi	r30, 0x02	; 2
    1236:	f1 e0       	ldi	r31, 0x01	; 1
    1238:	80 81       	ld	r24, Z
    123a:	80 62       	ori	r24, 0x20	; 32
    123c:	80 83       	st	Z, r24
    123e:	0f 90       	pop	r0
    1240:	df 91       	pop	r29
    1242:	cf 91       	pop	r28
    1244:	1f 91       	pop	r17
    1246:	08 95       	ret

00001248 <_Z18Radio_Configure_Rx11_radio_pipePh3_ed>:
    1248:	df 92       	push	r13
    124a:	ef 92       	push	r14
    124c:	ff 92       	push	r15
    124e:	0f 93       	push	r16
    1250:	1f 93       	push	r17
    1252:	cf 93       	push	r28
    1254:	df 93       	push	r29
    1256:	1f 92       	push	r1
    1258:	1f 92       	push	r1
    125a:	cd b7       	in	r28, 0x3d	; 61
    125c:	de b7       	in	r29, 0x3e	; 62
    125e:	98 2f       	mov	r25, r24
    1260:	fb 01       	movw	r30, r22
    1262:	d4 2e       	mov	r13, r20
    1264:	86 30       	cpi	r24, 0x06	; 6
    1266:	08 f0       	brcs	.+2      	; 0x126a <_Z18Radio_Configure_Rx11_radio_pipePh3_ed+0x22>
    1268:	59 c0       	rjmp	.+178    	; 0x131c <_Z18Radio_Configure_Rx11_radio_pipePh3_ed+0xd4>
    126a:	81 11       	cpse	r24, r1
    126c:	10 c0       	rjmp	.+32     	; 0x128e <_Z18Radio_Configure_Rx11_radio_pipePh3_ed+0x46>
    126e:	80 81       	ld	r24, Z
    1270:	80 93 20 02 	sts	0x0220, r24
    1274:	81 81       	ldd	r24, Z+1	; 0x01
    1276:	80 93 21 02 	sts	0x0221, r24
    127a:	82 81       	ldd	r24, Z+2	; 0x02
    127c:	80 93 22 02 	sts	0x0222, r24
    1280:	83 81       	ldd	r24, Z+3	; 0x03
    1282:	80 93 23 02 	sts	0x0223, r24
    1286:	84 81       	ldd	r24, Z+4	; 0x04
    1288:	80 93 24 02 	sts	0x0224, r24
    128c:	04 c0       	rjmp	.+8      	; 0x1296 <_Z18Radio_Configure_Rx11_radio_pipePh3_ed+0x4e>
    128e:	81 30       	cpi	r24, 0x01	; 1
    1290:	11 f0       	breq	.+4      	; 0x1296 <_Z18Radio_Configure_Rx11_radio_pipePh3_ed+0x4e>
    1292:	41 e0       	ldi	r20, 0x01	; 1
    1294:	01 c0       	rjmp	.+2      	; 0x1298 <_Z18Radio_Configure_Rx11_radio_pipePh3_ed+0x50>
    1296:	45 e0       	ldi	r20, 0x05	; 5
    1298:	bf 01       	movw	r22, r30
    129a:	8a e0       	ldi	r24, 0x0A	; 10
    129c:	89 0f       	add	r24, r25
    129e:	9a 83       	std	Y+2, r25	; 0x02
    12a0:	ad de       	rcall	.-678    	; 0xffc <_ZL12set_registerhPhh>
    12a2:	be 01       	movw	r22, r28
    12a4:	6f 5f       	subi	r22, 0xFF	; 255
    12a6:	7f 4f       	sbci	r23, 0xFF	; 255
    12a8:	81 e0       	ldi	r24, 0x01	; 1
    12aa:	09 df       	rcall	.-494    	; 0x10be <_ZL12get_registerhPhh.constprop.1>
    12ac:	9a 81       	ldd	r25, Y+2	; 0x02
    12ae:	e9 2e       	mov	r14, r25
    12b0:	f1 2c       	mov	r15, r1
    12b2:	01 e0       	ldi	r16, 0x01	; 1
    12b4:	10 e0       	ldi	r17, 0x00	; 0
    12b6:	01 c0       	rjmp	.+2      	; 0x12ba <_Z18Radio_Configure_Rx11_radio_pipePh3_ed+0x72>
    12b8:	00 0f       	add	r16, r16
    12ba:	9a 95       	dec	r25
    12bc:	ea f7       	brpl	.-6      	; 0x12b8 <_Z18Radio_Configure_Rx11_radio_pipePh3_ed+0x70>
    12be:	89 81       	ldd	r24, Y+1	; 0x01
    12c0:	80 2b       	or	r24, r16
    12c2:	89 83       	std	Y+1, r24	; 0x01
    12c4:	41 e0       	ldi	r20, 0x01	; 1
    12c6:	be 01       	movw	r22, r28
    12c8:	6f 5f       	subi	r22, 0xFF	; 255
    12ca:	7f 4f       	sbci	r23, 0xFF	; 255
    12cc:	81 e0       	ldi	r24, 0x01	; 1
    12ce:	96 de       	rcall	.-724    	; 0xffc <_ZL12set_registerhPhh>
    12d0:	9a 81       	ldd	r25, Y+2	; 0x02
    12d2:	dd 20       	and	r13, r13
    12d4:	11 f0       	breq	.+4      	; 0x12da <_Z18Radio_Configure_Rx11_radio_pipePh3_ed+0x92>
    12d6:	80 e2       	ldi	r24, 0x20	; 32
    12d8:	01 c0       	rjmp	.+2      	; 0x12dc <_Z18Radio_Configure_Rx11_radio_pipePh3_ed+0x94>
    12da:	80 e0       	ldi	r24, 0x00	; 0
    12dc:	89 83       	std	Y+1, r24	; 0x01
    12de:	41 e0       	ldi	r20, 0x01	; 1
    12e0:	be 01       	movw	r22, r28
    12e2:	6f 5f       	subi	r22, 0xFF	; 255
    12e4:	7f 4f       	sbci	r23, 0xFF	; 255
    12e6:	81 e1       	ldi	r24, 0x11	; 17
    12e8:	89 0f       	add	r24, r25
    12ea:	88 de       	rcall	.-752    	; 0xffc <_ZL12set_registerhPhh>
    12ec:	89 81       	ldd	r24, Y+1	; 0x01
    12ee:	f7 01       	movw	r30, r14
    12f0:	e6 5d       	subi	r30, 0xD6	; 214
    12f2:	fd 4f       	sbci	r31, 0xFD	; 253
    12f4:	80 83       	st	Z, r24
    12f6:	be 01       	movw	r22, r28
    12f8:	6f 5f       	subi	r22, 0xFF	; 255
    12fa:	7f 4f       	sbci	r23, 0xFF	; 255
    12fc:	82 e0       	ldi	r24, 0x02	; 2
    12fe:	df de       	rcall	.-578    	; 0x10be <_ZL12get_registerhPhh.constprop.1>
    1300:	89 81       	ldd	r24, Y+1	; 0x01
    1302:	dd 20       	and	r13, r13
    1304:	11 f0       	breq	.+4      	; 0x130a <_Z18Radio_Configure_Rx11_radio_pipePh3_ed+0xc2>
    1306:	08 2b       	or	r16, r24
    1308:	02 c0       	rjmp	.+4      	; 0x130e <_Z18Radio_Configure_Rx11_radio_pipePh3_ed+0xc6>
    130a:	00 95       	com	r16
    130c:	08 23       	and	r16, r24
    130e:	09 83       	std	Y+1, r16	; 0x01
    1310:	41 e0       	ldi	r20, 0x01	; 1
    1312:	be 01       	movw	r22, r28
    1314:	6f 5f       	subi	r22, 0xFF	; 255
    1316:	7f 4f       	sbci	r23, 0xFF	; 255
    1318:	82 e0       	ldi	r24, 0x02	; 2
    131a:	70 de       	rcall	.-800    	; 0xffc <_ZL12set_registerhPhh>
    131c:	0f 90       	pop	r0
    131e:	0f 90       	pop	r0
    1320:	df 91       	pop	r29
    1322:	cf 91       	pop	r28
    1324:	1f 91       	pop	r17
    1326:	0f 91       	pop	r16
    1328:	ff 90       	pop	r15
    132a:	ef 90       	pop	r14
    132c:	df 90       	pop	r13
    132e:	08 95       	ret

00001330 <_Z17Radio_Set_Tx_AddrPh>:
    1330:	fc 01       	movw	r30, r24
    1332:	80 81       	ld	r24, Z
    1334:	80 93 25 02 	sts	0x0225, r24
    1338:	81 81       	ldd	r24, Z+1	; 0x01
    133a:	80 93 26 02 	sts	0x0226, r24
    133e:	82 81       	ldd	r24, Z+2	; 0x02
    1340:	80 93 27 02 	sts	0x0227, r24
    1344:	83 81       	ldd	r24, Z+3	; 0x03
    1346:	80 93 28 02 	sts	0x0228, r24
    134a:	84 81       	ldd	r24, Z+4	; 0x04
    134c:	80 93 29 02 	sts	0x0229, r24
    1350:	45 e0       	ldi	r20, 0x05	; 5
    1352:	bf 01       	movw	r22, r30
    1354:	80 e1       	ldi	r24, 0x10	; 16
    1356:	52 ce       	rjmp	.-860    	; 0xffc <_ZL12set_registerhPhh>

00001358 <_Z15Radio_Configure9_radio_dr15_radio_tx_power>:
    1358:	0f 93       	push	r16
    135a:	1f 93       	push	r17
    135c:	cf 93       	push	r28
    135e:	df 93       	push	r29
    1360:	1f 92       	push	r1
    1362:	cd b7       	in	r28, 0x3d	; 61
    1364:	de b7       	in	r29, 0x3e	; 62
    1366:	18 2f       	mov	r17, r24
    1368:	06 2f       	mov	r16, r22
    136a:	64 30       	cpi	r22, 0x04	; 4
    136c:	a8 f4       	brcc	.+42     	; 0x1398 <_Z15Radio_Configure9_radio_dr15_radio_tx_power+0x40>
    136e:	82 30       	cpi	r24, 0x02	; 2
    1370:	98 f4       	brcc	.+38     	; 0x1398 <_Z15Radio_Configure9_radio_dr15_radio_tx_power+0x40>
    1372:	be 01       	movw	r22, r28
    1374:	6f 5f       	subi	r22, 0xFF	; 255
    1376:	7f 4f       	sbci	r23, 0xFF	; 255
    1378:	86 e0       	ldi	r24, 0x06	; 6
    137a:	a1 de       	rcall	.-702    	; 0x10be <_ZL12get_registerhPhh.constprop.1>
    137c:	60 2f       	mov	r22, r16
    137e:	66 0f       	add	r22, r22
    1380:	99 81       	ldd	r25, Y+1	; 0x01
    1382:	96 60       	ori	r25, 0x06	; 6
    1384:	69 23       	and	r22, r25
    1386:	11 11       	cpse	r17, r1
    1388:	68 60       	ori	r22, 0x08	; 8
    138a:	69 83       	std	Y+1, r22	; 0x01
    138c:	41 e0       	ldi	r20, 0x01	; 1
    138e:	be 01       	movw	r22, r28
    1390:	6f 5f       	subi	r22, 0xFF	; 255
    1392:	7f 4f       	sbci	r23, 0xFF	; 255
    1394:	86 e0       	ldi	r24, 0x06	; 6
    1396:	32 de       	rcall	.-924    	; 0xffc <_ZL12set_registerhPhh>
    1398:	0f 90       	pop	r0
    139a:	df 91       	pop	r29
    139c:	cf 91       	pop	r28
    139e:	1f 91       	pop	r17
    13a0:	0f 91       	pop	r16
    13a2:	08 95       	ret

000013a4 <_Z14Radio_TransmitP3_rp14_radio_tx_wait>:
    13a4:	ff 92       	push	r15
    13a6:	0f 93       	push	r16
    13a8:	1f 93       	push	r17
    13aa:	cf 93       	push	r28
    13ac:	df 93       	push	r29
    13ae:	1f 92       	push	r1
    13b0:	cd b7       	in	r28, 0x3d	; 61
    13b2:	de b7       	in	r29, 0x3e	; 62
    13b4:	8c 01       	movw	r16, r24
    13b6:	f6 2e       	mov	r15, r22
    13b8:	81 e0       	ldi	r24, 0x01	; 1
    13ba:	80 93 e5 0c 	sts	0x0CE5, r24
    13be:	80 91 02 01 	lds	r24, 0x0102
    13c2:	8f 7d       	andi	r24, 0xDF	; 223
    13c4:	80 93 02 01 	sts	0x0102, r24
    13c8:	be 01       	movw	r22, r28
    13ca:	6f 5f       	subi	r22, 0xFF	; 255
    13cc:	7f 4f       	sbci	r23, 0xFF	; 255
    13ce:	80 e0       	ldi	r24, 0x00	; 0
    13d0:	76 de       	rcall	.-788    	; 0x10be <_ZL12get_registerhPhh.constprop.1>
    13d2:	89 81       	ldd	r24, Y+1	; 0x01
    13d4:	80 ff       	sbrs	r24, 0
    13d6:	14 c0       	rjmp	.+40     	; 0x1400 <_Z14Radio_TransmitP3_rp14_radio_tx_wait+0x5c>
    13d8:	8e 7f       	andi	r24, 0xFE	; 254
    13da:	89 83       	std	Y+1, r24	; 0x01
    13dc:	41 e0       	ldi	r20, 0x01	; 1
    13de:	be 01       	movw	r22, r28
    13e0:	6f 5f       	subi	r22, 0xFF	; 255
    13e2:	7f 4f       	sbci	r23, 0xFF	; 255
    13e4:	80 e0       	ldi	r24, 0x00	; 0
    13e6:	0a de       	rcall	.-1004   	; 0xffc <_ZL12set_registerhPhh>
    13e8:	83 e0       	ldi	r24, 0x03	; 3
    13ea:	91 e0       	ldi	r25, 0x01	; 1
    13ec:	01 97       	sbiw	r24, 0x01	; 1
    13ee:	f1 f7       	brne	.-4      	; 0x13ec <_Z14Radio_TransmitP3_rp14_radio_tx_wait+0x48>
    13f0:	00 c0       	rjmp	.+0      	; 0x13f2 <_Z14Radio_TransmitP3_rp14_radio_tx_wait+0x4e>
    13f2:	00 00       	nop
    13f4:	83 e0       	ldi	r24, 0x03	; 3
    13f6:	91 e0       	ldi	r25, 0x01	; 1
    13f8:	01 97       	sbiw	r24, 0x01	; 1
    13fa:	f1 f7       	brne	.-4      	; 0x13f8 <_Z14Radio_TransmitP3_rp14_radio_tx_wait+0x54>
    13fc:	00 c0       	rjmp	.+0      	; 0x13fe <_Z14Radio_TransmitP3_rp14_radio_tx_wait+0x5a>
    13fe:	00 00       	nop
    1400:	45 e0       	ldi	r20, 0x05	; 5
    1402:	65 e2       	ldi	r22, 0x25	; 37
    1404:	72 e0       	ldi	r23, 0x02	; 2
    1406:	8a e0       	ldi	r24, 0x0A	; 10
    1408:	f9 dd       	rcall	.-1038   	; 0xffc <_ZL12set_registerhPhh>
    140a:	20 e2       	ldi	r18, 0x20	; 32
    140c:	40 e0       	ldi	r20, 0x00	; 0
    140e:	50 e0       	ldi	r21, 0x00	; 0
    1410:	b8 01       	movw	r22, r16
    1412:	80 ea       	ldi	r24, 0xA0	; 160
    1414:	1d de       	rcall	.-966    	; 0x1050 <_ZL16send_instructionhPhS_h>
    1416:	80 91 02 01 	lds	r24, 0x0102
    141a:	80 62       	ori	r24, 0x20	; 32
    141c:	80 93 02 01 	sts	0x0102, r24
    1420:	f1 10       	cpse	r15, r1
    1422:	07 c0       	rjmp	.+14     	; 0x1432 <_Z14Radio_TransmitP3_rp14_radio_tx_wait+0x8e>
    1424:	80 91 e5 0c 	lds	r24, 0x0CE5
    1428:	81 11       	cpse	r24, r1
    142a:	fc cf       	rjmp	.-8      	; 0x1424 <_Z14Radio_TransmitP3_rp14_radio_tx_wait+0x80>
    142c:	80 91 1d 02 	lds	r24, 0x021D
    1430:	01 c0       	rjmp	.+2      	; 0x1434 <_Z14Radio_TransmitP3_rp14_radio_tx_wait+0x90>
    1432:	81 e0       	ldi	r24, 0x01	; 1
    1434:	0f 90       	pop	r0
    1436:	df 91       	pop	r29
    1438:	cf 91       	pop	r28
    143a:	1f 91       	pop	r17
    143c:	0f 91       	pop	r16
    143e:	ff 90       	pop	r15
    1440:	08 95       	ret

00001442 <_Z13Radio_ReceiveP3_rp>:
    1442:	cf 93       	push	r28
    1444:	df 93       	push	r29
    1446:	ec 01       	movw	r28, r24
    1448:	10 92 e5 0c 	sts	0x0CE5, r1
    144c:	80 91 02 01 	lds	r24, 0x0102
    1450:	8f 7d       	andi	r24, 0xDF	; 223
    1452:	80 93 02 01 	sts	0x0102, r24
    1456:	c3 dd       	rcall	.-1146   	; 0xfde <_ZL10get_statusv>
    1458:	8e 70       	andi	r24, 0x0E	; 14
    145a:	28 2f       	mov	r18, r24
    145c:	30 e0       	ldi	r19, 0x00	; 0
    145e:	35 95       	asr	r19
    1460:	27 95       	ror	r18
    1462:	f9 01       	movw	r30, r18
    1464:	e6 5d       	subi	r30, 0xD6	; 214
    1466:	fd 4f       	sbci	r31, 0xFD	; 253
    1468:	80 81       	ld	r24, Z
    146a:	81 32       	cpi	r24, 0x21	; 33
    146c:	68 f4       	brcc	.+26     	; 0x1488 <_Z13Radio_ReceiveP3_rp+0x46>
    146e:	27 30       	cpi	r18, 0x07	; 7
    1470:	69 f0       	breq	.+26     	; 0x148c <_Z13Radio_ReceiveP3_rp+0x4a>
    1472:	20 81       	ld	r18, Z
    1474:	ae 01       	movw	r20, r28
    1476:	be 01       	movw	r22, r28
    1478:	81 e6       	ldi	r24, 0x61	; 97
    147a:	ea dd       	rcall	.-1068   	; 0x1050 <_ZL16send_instructionhPhS_h>
    147c:	b0 dd       	rcall	.-1184   	; 0xfde <_ZL10get_statusv>
    147e:	8e 70       	andi	r24, 0x0E	; 14
    1480:	8e 30       	cpi	r24, 0x0E	; 14
    1482:	31 f0       	breq	.+12     	; 0x1490 <_Z13Radio_ReceiveP3_rp+0x4e>
    1484:	83 e0       	ldi	r24, 0x03	; 3
    1486:	05 c0       	rjmp	.+10     	; 0x1492 <_Z13Radio_ReceiveP3_rp+0x50>
    1488:	80 e0       	ldi	r24, 0x00	; 0
    148a:	03 c0       	rjmp	.+6      	; 0x1492 <_Z13Radio_ReceiveP3_rp+0x50>
    148c:	82 e0       	ldi	r24, 0x02	; 2
    148e:	01 c0       	rjmp	.+2      	; 0x1492 <_Z13Radio_ReceiveP3_rp+0x50>
    1490:	84 e0       	ldi	r24, 0x04	; 4
    1492:	90 91 02 01 	lds	r25, 0x0102
    1496:	90 62       	ori	r25, 0x20	; 32
    1498:	90 93 02 01 	sts	0x0102, r25
    149c:	10 92 e5 0c 	sts	0x0CE5, r1
    14a0:	df 91       	pop	r29
    14a2:	cf 91       	pop	r28
    14a4:	08 95       	ret

000014a6 <__vector_5>:
}


// Interrupt handler
ISR(INT4_vect)
{
    14a6:	1f 92       	push	r1
    14a8:	0f 92       	push	r0
    14aa:	0f b6       	in	r0, 0x3f	; 63
    14ac:	0f 92       	push	r0
    14ae:	11 24       	eor	r1, r1
    14b0:	0b b6       	in	r0, 0x3b	; 59
    14b2:	0f 92       	push	r0
    14b4:	2f 93       	push	r18
    14b6:	3f 93       	push	r19
    14b8:	4f 93       	push	r20
    14ba:	5f 93       	push	r21
    14bc:	6f 93       	push	r22
    14be:	7f 93       	push	r23
    14c0:	8f 93       	push	r24
    14c2:	9f 93       	push	r25
    14c4:	af 93       	push	r26
    14c6:	bf 93       	push	r27
    14c8:	ef 93       	push	r30
    14ca:	ff 93       	push	r31
    14cc:	cf 93       	push	r28
    14ce:	df 93       	push	r29
    14d0:	1f 92       	push	r1
    14d2:	cd b7       	in	r28, 0x3d	; 61
    14d4:	de b7       	in	r29, 0x3e	; 62
    uint8_t status;
    uint8_t pipe_number;

	//DEBUG_2_LOW;
    CE_LOW();
    14d6:	80 91 02 01 	lds	r24, 0x0102
    14da:	8f 7d       	andi	r24, 0xDF	; 223
    14dc:	80 93 02 01 	sts	0x0102, r24

    status = get_status();
    14e0:	7e dd       	rcall	.-1284   	; 0xfde <_ZL10get_statusv>
    14e2:	89 83       	std	Y+1, r24	; 0x01

    if (status & _BV(RX_DR))
    14e4:	86 ff       	sbrs	r24, 6
    14e6:	03 c0       	rjmp	.+6      	; 0x14ee <__vector_5+0x48>
    {
    	pipe_number =  (status & 0xE) >> 1;
    14e8:	8e 70       	andi	r24, 0x0E	; 14
    	radio_rxhandler(pipe_number);
    14ea:	86 95       	lsr	r24
    14ec:	f1 dc       	rcall	.-1566   	; 0xed0 <_Z15radio_rxhandlerh>
    }
    // We can get the TX_DS or the MAX_RT interrupt, but not both.
    if (status & _BV(TX_DS))
    14ee:	89 81       	ldd	r24, Y+1	; 0x01
    14f0:	85 ff       	sbrs	r24, 5
    14f2:	1b c0       	rjmp	.+54     	; 0x152a <__vector_5+0x84>
    {
        // if there's nothing left to transmit, switch back to receive mode.
        transmit_lock = 0;
    14f4:	10 92 e5 0c 	sts	0x0CE5, r1
        reset_pipe0_address();
    14f8:	d8 dd       	rcall	.-1104   	; 0x10aa <_ZL19reset_pipe0_addressv>
        set_rx_mode();
    14fa:	0d de       	rcall	.-998    	; 0x1116 <_ZL11set_rx_modev>

    	// indicate in the history that a packet was transmitted successfully by appending a 1.
    	tx_history <<= 1;
    14fc:	80 91 1e 02 	lds	r24, 0x021E
    1500:	90 91 1f 02 	lds	r25, 0x021F
    1504:	88 0f       	add	r24, r24
    1506:	99 1f       	adc	r25, r25
    1508:	90 93 1f 02 	sts	0x021F, r25
    150c:	80 93 1e 02 	sts	0x021E, r24
    	tx_history |= 1;
    1510:	80 91 1e 02 	lds	r24, 0x021E
    1514:	90 91 1f 02 	lds	r25, 0x021F
    1518:	81 60       	ori	r24, 0x01	; 1
    151a:	90 93 1f 02 	sts	0x021F, r25
    151e:	80 93 1e 02 	sts	0x021E, r24

    	tx_last_status = RADIO_TX_SUCCESS;
    1522:	81 e0       	ldi	r24, 0x01	; 1
    1524:	80 93 1d 02 	sts	0x021D, r24
    1528:	19 c0       	rjmp	.+50     	; 0x155c <__vector_5+0xb6>
    }
    else if (status & _BV(MAX_RT))
    152a:	84 ff       	sbrs	r24, 4
    152c:	17 c0       	rjmp	.+46     	; 0x155c <__vector_5+0xb6>
    {
        send_instruction(FLUSH_TX, NULL, NULL, 0);
    152e:	20 e0       	ldi	r18, 0x00	; 0
    1530:	40 e0       	ldi	r20, 0x00	; 0
    1532:	50 e0       	ldi	r21, 0x00	; 0
    1534:	60 e0       	ldi	r22, 0x00	; 0
    1536:	70 e0       	ldi	r23, 0x00	; 0
    1538:	81 ee       	ldi	r24, 0xE1	; 225
    153a:	8a dd       	rcall	.-1260   	; 0x1050 <_ZL16send_instructionhPhS_h>

    	transmit_lock = 0;
    153c:	10 92 e5 0c 	sts	0x0CE5, r1
    	reset_pipe0_address();
    1540:	b4 dd       	rcall	.-1176   	; 0x10aa <_ZL19reset_pipe0_addressv>
		set_rx_mode();
    1542:	e9 dd       	rcall	.-1070   	; 0x1116 <_ZL11set_rx_modev>
    	// indicate in the history that a packet was dropped by appending a 0.
    	tx_history <<= 1;
    1544:	80 91 1e 02 	lds	r24, 0x021E
    1548:	90 91 1f 02 	lds	r25, 0x021F
    154c:	88 0f       	add	r24, r24
    154e:	99 1f       	adc	r25, r25
    1550:	90 93 1f 02 	sts	0x021F, r25
    1554:	80 93 1e 02 	sts	0x021E, r24

    	tx_last_status = RADIO_TX_MAX_RT;
    1558:	10 92 1d 02 	sts	0x021D, r1
    }

    // clear the interrupt flags.
	status = _BV(RX_DR) | _BV(TX_DS) | _BV(MAX_RT);
    155c:	80 e7       	ldi	r24, 0x70	; 112
    155e:	89 83       	std	Y+1, r24	; 0x01
	set_register(STATUS, &status, 1);
    1560:	41 e0       	ldi	r20, 0x01	; 1
    1562:	be 01       	movw	r22, r28
    1564:	6f 5f       	subi	r22, 0xFF	; 255
    1566:	7f 4f       	sbci	r23, 0xFF	; 255
    1568:	87 e0       	ldi	r24, 0x07	; 7
    156a:	48 dd       	rcall	.-1392   	; 0xffc <_ZL12set_registerhPhh>
	//DEBUG_2_HIGH;

    CE_HIGH();
    156c:	80 91 02 01 	lds	r24, 0x0102
    1570:	80 62       	ori	r24, 0x20	; 32
    1572:	80 93 02 01 	sts	0x0102, r24
    1576:	0f 90       	pop	r0
    1578:	df 91       	pop	r29
    157a:	cf 91       	pop	r28
    157c:	ff 91       	pop	r31
    157e:	ef 91       	pop	r30
    1580:	bf 91       	pop	r27
    1582:	af 91       	pop	r26
    1584:	9f 91       	pop	r25
    1586:	8f 91       	pop	r24
    1588:	7f 91       	pop	r23
    158a:	6f 91       	pop	r22
    158c:	5f 91       	pop	r21
    158e:	4f 91       	pop	r20
    1590:	3f 91       	pop	r19
    1592:	2f 91       	pop	r18
    1594:	0f 90       	pop	r0
    1596:	0b be       	out	0x3b, r0	; 59
    1598:	0f 90       	pop	r0
    159a:	0f be       	out	0x3f, r0	; 63
    159c:	0f 90       	pop	r0
    159e:	1f 90       	pop	r1
    15a0:	18 95       	reti

000015a2 <_Z8SPI_Initv>:
	// The DDR operations are pretty fragile and doing this less awkwardly breaks SPI.  I don't care enough
	// to figure out why right now.  Note that SPI_SS is the actual SPI port's SS pin, which is not necessarily
	// the SS pin that's used for a given slave.  Anything that uses this driver must handle its own slave selection.
	// It must set its SS pin direction to output, set the pin low before doing an SPI operation, and set it high
	// when the SPI operation is complete.
    SPI_DDR &= ~(_BV(SPI_MOSI)|_BV(SPI_MISO)|_BV(SPI_SS)|_BV(SPI_SCK));
    15a2:	84 b1       	in	r24, 0x04	; 4
    15a4:	80 7f       	andi	r24, 0xF0	; 240
    15a6:	84 b9       	out	0x04, r24	; 4
    // Define the following pins as output
    SPI_DDR |= (_BV(SPI_MOSI) | _BV(SPI_SS) | _BV(SPI_SCK));
    15a8:	84 b1       	in	r24, 0x04	; 4
    15aa:	87 60       	ori	r24, 0x07	; 7
    15ac:	84 b9       	out	0x04, r24	; 4
	 * SPR1 | SPR0 - Determines SCK frequency along with the SPI2X bit in SPSR.  See Table 17-4 in hardware manual [p178].
	 * bit 0
	 */

    // Set the AT90's SS pin high during config (this disables the Flash RAM or something)
    SPI_PORT |= _BV(SPI_SS);
    15ae:	28 9a       	sbi	0x05, 0	; 5

	SPCR = _BV(SPE) | _BV(MSTR);	// enable SPI, set as master, set prescaler to f(osc)/4
    15b0:	80 e5       	ldi	r24, 0x50	; 80
    15b2:	8c bd       	out	0x2c, r24	; 44

	SPSR = _BV(SPI2X);							// Double SCK to f(osc)/2 (4 MHz)
    15b4:	81 e0       	ldi	r24, 0x01	; 1
    15b6:	8d bd       	out	0x2d, r24	; 45

	SPI_PORT &= ~_BV(SPI_SS);
    15b8:	28 98       	cbi	0x05, 0	; 5
    15ba:	08 95       	ret

000015bc <_Z19SPI_ReadWrite_BlockPhS_h>:
}

void SPI_ReadWrite_Block(uint8_t* data, uint8_t* buffer, uint8_t len)
{
    15bc:	26 2f       	mov	r18, r22
    uint8_t i;
    for (i = 0; i < len; i++) {
    15be:	fb 01       	movw	r30, r22
    15c0:	3e 2f       	mov	r19, r30
    15c2:	32 1b       	sub	r19, r18
    15c4:	34 17       	cp	r19, r20
    15c6:	50 f4       	brcc	.+20     	; 0x15dc <_Z19SPI_ReadWrite_BlockPhS_h+0x20>
          SPDR = data[i];
    15c8:	dc 01       	movw	r26, r24
    15ca:	3d 91       	ld	r19, X+
    15cc:	cd 01       	movw	r24, r26
    15ce:	3e bd       	out	0x2e, r19	; 46
          SPI_WAIT();
    15d0:	0d b4       	in	r0, 0x2d	; 45
    15d2:	07 fe       	sbrs	r0, 7
    15d4:	fd cf       	rjmp	.-6      	; 0x15d0 <_Z19SPI_ReadWrite_BlockPhS_h+0x14>
          buffer[i] = SPDR;
    15d6:	3e b5       	in	r19, 0x2e	; 46
    15d8:	31 93       	st	Z+, r19
    15da:	f2 cf       	rjmp	.-28     	; 0x15c0 <_Z19SPI_ReadWrite_BlockPhS_h+0x4>
    }
}
    15dc:	08 95       	ret

000015de <_Z15SPI_Write_BlockPhh>:

void SPI_Write_Block(uint8_t* data, uint8_t len)
{
    15de:	28 2f       	mov	r18, r24
    uint8_t i;
    for (i = 0; i < len; i++) {
    15e0:	fc 01       	movw	r30, r24
    15e2:	8e 2f       	mov	r24, r30
    15e4:	82 1b       	sub	r24, r18
    15e6:	86 17       	cp	r24, r22
    15e8:	30 f4       	brcc	.+12     	; 0x15f6 <_Z15SPI_Write_BlockPhh+0x18>
          SPDR = data[i];
    15ea:	81 91       	ld	r24, Z+
    15ec:	8e bd       	out	0x2e, r24	; 46
          SPI_WAIT();
    15ee:	0d b4       	in	r0, 0x2d	; 45
    15f0:	07 fe       	sbrs	r0, 7
    15f2:	fd cf       	rjmp	.-6      	; 0x15ee <_Z15SPI_Write_BlockPhh+0x10>
    15f4:	f6 cf       	rjmp	.-20     	; 0x15e2 <_Z15SPI_Write_BlockPhh+0x4>
    }
}
    15f6:	08 95       	ret

000015f8 <_Z14SPI_Write_Byteh>:

uint8_t SPI_Write_Byte(uint8_t byte)
{
    SPDR = byte;
    15f8:	8e bd       	out	0x2e, r24	; 46
    SPI_WAIT();
    15fa:	0d b4       	in	r0, 0x2d	; 45
    15fc:	07 fe       	sbrs	r0, 7
    15fe:	fd cf       	rjmp	.-6      	; 0x15fa <_Z14SPI_Write_Byteh+0x2>
    return SPDR;
    1600:	8e b5       	in	r24, 0x2e	; 46
}
    1602:	08 95       	ret

00001604 <_Z11Roomba_Initv>:
	Roomba_Send_Byte(SAFE);
	_delay_ms(20);
}

void Roomba_Finish() {
	Roomba_Send_Byte(STOP);
    1604:	51 9a       	sbi	0x0a, 1	; 10
    1606:	59 98       	cbi	0x0b, 1	; 11
    1608:	83 e0       	ldi	r24, 0x03	; 3
    160a:	dd d0       	rcall	.+442    	; 0x17c6 <_Z16Roomba_UART_Init9_uart_bps>
    160c:	80 e8       	ldi	r24, 0x80	; 128
    160e:	d4 d0       	rcall	.+424    	; 0x17b8 <_Z16Roomba_Send_Byteh>
    1610:	2f ef       	ldi	r18, 0xFF	; 255
    1612:	89 ef       	ldi	r24, 0xF9	; 249
    1614:	90 e0       	ldi	r25, 0x00	; 0
    1616:	21 50       	subi	r18, 0x01	; 1
    1618:	80 40       	sbci	r24, 0x00	; 0
    161a:	90 40       	sbci	r25, 0x00	; 0
    161c:	e1 f7       	brne	.-8      	; 0x1616 <_Z11Roomba_Initv+0x12>
    161e:	00 c0       	rjmp	.+0      	; 0x1620 <_Z11Roomba_Initv+0x1c>
    1620:	00 00       	nop
    1622:	81 e8       	ldi	r24, 0x81	; 129
    1624:	c9 d0       	rcall	.+402    	; 0x17b8 <_Z16Roomba_Send_Byteh>
    1626:	87 e0       	ldi	r24, 0x07	; 7
    1628:	c7 d0       	rcall	.+398    	; 0x17b8 <_Z16Roomba_Send_Byteh>
    162a:	2f ef       	ldi	r18, 0xFF	; 255
    162c:	81 ee       	ldi	r24, 0xE1	; 225
    162e:	94 e0       	ldi	r25, 0x04	; 4
    1630:	21 50       	subi	r18, 0x01	; 1
    1632:	80 40       	sbci	r24, 0x00	; 0
    1634:	90 40       	sbci	r25, 0x00	; 0
    1636:	e1 f7       	brne	.-8      	; 0x1630 <_Z11Roomba_Initv+0x2c>
    1638:	00 c0       	rjmp	.+0      	; 0x163a <_Z11Roomba_Initv+0x36>
    163a:	00 00       	nop
    163c:	80 e0       	ldi	r24, 0x00	; 0
    163e:	c3 d0       	rcall	.+390    	; 0x17c6 <_Z16Roomba_UART_Init9_uart_bps>
    1640:	80 e8       	ldi	r24, 0x80	; 128
    1642:	ba d0       	rcall	.+372    	; 0x17b8 <_Z16Roomba_Send_Byteh>
    1644:	2f ef       	ldi	r18, 0xFF	; 255
    1646:	89 ef       	ldi	r24, 0xF9	; 249
    1648:	90 e0       	ldi	r25, 0x00	; 0
    164a:	21 50       	subi	r18, 0x01	; 1
    164c:	80 40       	sbci	r24, 0x00	; 0
    164e:	90 40       	sbci	r25, 0x00	; 0
    1650:	e1 f7       	brne	.-8      	; 0x164a <_Z11Roomba_Initv+0x46>
    1652:	00 c0       	rjmp	.+0      	; 0x1654 <_Z11Roomba_Initv+0x50>
    1654:	00 00       	nop
    1656:	83 e8       	ldi	r24, 0x83	; 131
    1658:	af d0       	rcall	.+350    	; 0x17b8 <_Z16Roomba_Send_Byteh>
    165a:	2f ef       	ldi	r18, 0xFF	; 255
    165c:	89 ef       	ldi	r24, 0xF9	; 249
    165e:	90 e0       	ldi	r25, 0x00	; 0
    1660:	21 50       	subi	r18, 0x01	; 1
    1662:	80 40       	sbci	r24, 0x00	; 0
    1664:	90 40       	sbci	r25, 0x00	; 0
    1666:	e1 f7       	brne	.-8      	; 0x1660 <_Z11Roomba_Initv+0x5c>
    1668:	00 c0       	rjmp	.+0      	; 0x166a <_Z11Roomba_Initv+0x66>
    166a:	00 00       	nop
    166c:	08 95       	ret

0000166e <_Z25Roomba_UpdateSensorPacket4_rsgP20roomba_sensor_data_t>:
}

void Roomba_UpdateSensorPacket(ROOMBA_SENSOR_GROUP group, roomba_sensor_data_t* sensor_packet)
{
    166e:	1f 93       	push	r17
    1670:	cf 93       	push	r28
    1672:	df 93       	push	r29
    1674:	18 2f       	mov	r17, r24
    1676:	eb 01       	movw	r28, r22
	Roomba_Send_Byte(SENSORS);
    1678:	8e e8       	ldi	r24, 0x8E	; 142
    167a:	9e d0       	rcall	.+316    	; 0x17b8 <_Z16Roomba_Send_Byteh>
	Roomba_Send_Byte(group);
    167c:	81 2f       	mov	r24, r17
    167e:	9c d0       	rcall	.+312    	; 0x17b8 <_Z16Roomba_Send_Byteh>
	switch(group)
    1680:	12 30       	cpi	r17, 0x02	; 2
    1682:	91 f1       	breq	.+100    	; 0x16e8 <_Z25Roomba_UpdateSensorPacket4_rsgP20roomba_sensor_data_t+0x7a>
    1684:	13 30       	cpi	r17, 0x03	; 3
    1686:	09 f4       	brne	.+2      	; 0x168a <_Z25Roomba_UpdateSensorPacket4_rsgP20roomba_sensor_data_t+0x1c>
    1688:	4b c0       	rjmp	.+150    	; 0x1720 <_Z25Roomba_UpdateSensorPacket4_rsgP20roomba_sensor_data_t+0xb2>
    168a:	11 30       	cpi	r17, 0x01	; 1
    168c:	09 f0       	breq	.+2      	; 0x1690 <_Z25Roomba_UpdateSensorPacket4_rsgP20roomba_sensor_data_t+0x22>
    168e:	73 c0       	rjmp	.+230    	; 0x1776 <_Z25Roomba_UpdateSensorPacket4_rsgP20roomba_sensor_data_t+0x108>
	{
	case EXTERNAL_ROOMBA:
		// environment sensors
		while (uart_bytes_received() != 10);
    1690:	c7 d0       	rcall	.+398    	; 0x1820 <_Z19uart_bytes_receivedv>
    1692:	8a 30       	cpi	r24, 0x0A	; 10
    1694:	e9 f7       	brne	.-6      	; 0x1690 <_Z25Roomba_UpdateSensorPacket4_rsgP20roomba_sensor_data_t+0x22>
		sensor_packet->bumps_wheeldrops = uart_get_byte(0);
    1696:	80 e0       	ldi	r24, 0x00	; 0
    1698:	90 e0       	ldi	r25, 0x00	; 0
    169a:	ee d0       	rcall	.+476    	; 0x1878 <_Z13uart_get_bytei>
    169c:	88 83       	st	Y, r24
		sensor_packet->wall = uart_get_byte(1);
    169e:	81 e0       	ldi	r24, 0x01	; 1
    16a0:	90 e0       	ldi	r25, 0x00	; 0
    16a2:	ea d0       	rcall	.+468    	; 0x1878 <_Z13uart_get_bytei>
    16a4:	89 83       	std	Y+1, r24	; 0x01
		sensor_packet->cliff_left = uart_get_byte(2);
    16a6:	82 e0       	ldi	r24, 0x02	; 2
    16a8:	90 e0       	ldi	r25, 0x00	; 0
    16aa:	e6 d0       	rcall	.+460    	; 0x1878 <_Z13uart_get_bytei>
    16ac:	8a 83       	std	Y+2, r24	; 0x02
		sensor_packet->cliff_front_left = uart_get_byte(3);
    16ae:	83 e0       	ldi	r24, 0x03	; 3
    16b0:	90 e0       	ldi	r25, 0x00	; 0
    16b2:	e2 d0       	rcall	.+452    	; 0x1878 <_Z13uart_get_bytei>
    16b4:	8b 83       	std	Y+3, r24	; 0x03
		sensor_packet->cliff_front_right = uart_get_byte(4);
    16b6:	84 e0       	ldi	r24, 0x04	; 4
    16b8:	90 e0       	ldi	r25, 0x00	; 0
    16ba:	de d0       	rcall	.+444    	; 0x1878 <_Z13uart_get_bytei>
    16bc:	8c 83       	std	Y+4, r24	; 0x04
		sensor_packet->cliff_right = uart_get_byte(5);
    16be:	85 e0       	ldi	r24, 0x05	; 5
    16c0:	90 e0       	ldi	r25, 0x00	; 0
    16c2:	da d0       	rcall	.+436    	; 0x1878 <_Z13uart_get_bytei>
    16c4:	8d 83       	std	Y+5, r24	; 0x05
		sensor_packet->virtual_wall = uart_get_byte(6);
    16c6:	86 e0       	ldi	r24, 0x06	; 6
    16c8:	90 e0       	ldi	r25, 0x00	; 0
    16ca:	d6 d0       	rcall	.+428    	; 0x1878 <_Z13uart_get_bytei>
    16cc:	8e 83       	std	Y+6, r24	; 0x06
		sensor_packet->motor_overcurrents = uart_get_byte(7);
    16ce:	87 e0       	ldi	r24, 0x07	; 7
    16d0:	90 e0       	ldi	r25, 0x00	; 0
    16d2:	d2 d0       	rcall	.+420    	; 0x1878 <_Z13uart_get_bytei>
    16d4:	8f 83       	std	Y+7, r24	; 0x07
		sensor_packet->dirt_left = uart_get_byte(8);
    16d6:	88 e0       	ldi	r24, 0x08	; 8
    16d8:	90 e0       	ldi	r25, 0x00	; 0
    16da:	ce d0       	rcall	.+412    	; 0x1878 <_Z13uart_get_bytei>
    16dc:	88 87       	std	Y+8, r24	; 0x08
		sensor_packet->dirt_right = uart_get_byte(9);
    16de:	89 e0       	ldi	r24, 0x09	; 9
    16e0:	90 e0       	ldi	r25, 0x00	; 0
    16e2:	ca d0       	rcall	.+404    	; 0x1878 <_Z13uart_get_bytei>
    16e4:	89 87       	std	Y+9, r24	; 0x09
		break;
    16e6:	47 c0       	rjmp	.+142    	; 0x1776 <_Z25Roomba_UpdateSensorPacket4_rsgP20roomba_sensor_data_t+0x108>
	case CHASSIS:
		// chassis sensors
		while (uart_bytes_received() != 6);
    16e8:	9b d0       	rcall	.+310    	; 0x1820 <_Z19uart_bytes_receivedv>
    16ea:	86 30       	cpi	r24, 0x06	; 6
    16ec:	e9 f7       	brne	.-6      	; 0x16e8 <_Z25Roomba_UpdateSensorPacket4_rsgP20roomba_sensor_data_t+0x7a>
		sensor_packet->remote_opcode = uart_get_byte(0);
    16ee:	80 e0       	ldi	r24, 0x00	; 0
    16f0:	90 e0       	ldi	r25, 0x00	; 0
    16f2:	c2 d0       	rcall	.+388    	; 0x1878 <_Z13uart_get_bytei>
    16f4:	8a 87       	std	Y+10, r24	; 0x0a
		sensor_packet->buttons = uart_get_byte(1);
    16f6:	81 e0       	ldi	r24, 0x01	; 1
    16f8:	90 e0       	ldi	r25, 0x00	; 0
    16fa:	be d0       	rcall	.+380    	; 0x1878 <_Z13uart_get_bytei>
    16fc:	8b 87       	std	Y+11, r24	; 0x0b
		sensor_packet->distance.bytes.high_byte = uart_get_byte(2);
    16fe:	82 e0       	ldi	r24, 0x02	; 2
    1700:	90 e0       	ldi	r25, 0x00	; 0
    1702:	ba d0       	rcall	.+372    	; 0x1878 <_Z13uart_get_bytei>
    1704:	8d 87       	std	Y+13, r24	; 0x0d
		sensor_packet->distance.bytes.low_byte = uart_get_byte(3);
    1706:	83 e0       	ldi	r24, 0x03	; 3
    1708:	90 e0       	ldi	r25, 0x00	; 0
    170a:	b6 d0       	rcall	.+364    	; 0x1878 <_Z13uart_get_bytei>
    170c:	8c 87       	std	Y+12, r24	; 0x0c
		sensor_packet->angle.bytes.high_byte = uart_get_byte(4);
    170e:	84 e0       	ldi	r24, 0x04	; 4
    1710:	90 e0       	ldi	r25, 0x00	; 0
    1712:	b2 d0       	rcall	.+356    	; 0x1878 <_Z13uart_get_bytei>
    1714:	8f 87       	std	Y+15, r24	; 0x0f
		sensor_packet->angle.bytes.low_byte = uart_get_byte(5);
    1716:	85 e0       	ldi	r24, 0x05	; 5
    1718:	90 e0       	ldi	r25, 0x00	; 0
    171a:	ae d0       	rcall	.+348    	; 0x1878 <_Z13uart_get_bytei>
    171c:	8e 87       	std	Y+14, r24	; 0x0e
		break;
    171e:	2b c0       	rjmp	.+86     	; 0x1776 <_Z25Roomba_UpdateSensorPacket4_rsgP20roomba_sensor_data_t+0x108>
	case INTERNAL:
		// internal sensors
		while (uart_bytes_received() != 10);
    1720:	7f d0       	rcall	.+254    	; 0x1820 <_Z19uart_bytes_receivedv>
    1722:	8a 30       	cpi	r24, 0x0A	; 10
    1724:	e9 f7       	brne	.-6      	; 0x1720 <_Z25Roomba_UpdateSensorPacket4_rsgP20roomba_sensor_data_t+0xb2>
		sensor_packet->charging_state = uart_get_byte(0);
    1726:	80 e0       	ldi	r24, 0x00	; 0
    1728:	90 e0       	ldi	r25, 0x00	; 0
    172a:	a6 d0       	rcall	.+332    	; 0x1878 <_Z13uart_get_bytei>
    172c:	88 8b       	std	Y+16, r24	; 0x10
		sensor_packet->voltage.bytes.high_byte = uart_get_byte(1);
    172e:	81 e0       	ldi	r24, 0x01	; 1
    1730:	90 e0       	ldi	r25, 0x00	; 0
    1732:	a2 d0       	rcall	.+324    	; 0x1878 <_Z13uart_get_bytei>
    1734:	8a 8b       	std	Y+18, r24	; 0x12
		sensor_packet->voltage.bytes.low_byte = uart_get_byte(2);
    1736:	82 e0       	ldi	r24, 0x02	; 2
    1738:	90 e0       	ldi	r25, 0x00	; 0
    173a:	9e d0       	rcall	.+316    	; 0x1878 <_Z13uart_get_bytei>
    173c:	89 8b       	std	Y+17, r24	; 0x11
		sensor_packet->current.bytes.high_byte = uart_get_byte(3);
    173e:	83 e0       	ldi	r24, 0x03	; 3
    1740:	90 e0       	ldi	r25, 0x00	; 0
    1742:	9a d0       	rcall	.+308    	; 0x1878 <_Z13uart_get_bytei>
    1744:	8c 8b       	std	Y+20, r24	; 0x14
		sensor_packet->current.bytes.low_byte = uart_get_byte(4);
    1746:	84 e0       	ldi	r24, 0x04	; 4
    1748:	90 e0       	ldi	r25, 0x00	; 0
    174a:	96 d0       	rcall	.+300    	; 0x1878 <_Z13uart_get_bytei>
    174c:	8b 8b       	std	Y+19, r24	; 0x13
		sensor_packet->temperature = uart_get_byte(5);
    174e:	85 e0       	ldi	r24, 0x05	; 5
    1750:	90 e0       	ldi	r25, 0x00	; 0
    1752:	92 d0       	rcall	.+292    	; 0x1878 <_Z13uart_get_bytei>
    1754:	8d 8b       	std	Y+21, r24	; 0x15
		sensor_packet->charge.bytes.high_byte = uart_get_byte(6);
    1756:	86 e0       	ldi	r24, 0x06	; 6
    1758:	90 e0       	ldi	r25, 0x00	; 0
    175a:	8e d0       	rcall	.+284    	; 0x1878 <_Z13uart_get_bytei>
    175c:	8f 8b       	std	Y+23, r24	; 0x17
		sensor_packet->charge.bytes.low_byte = uart_get_byte(7);
    175e:	87 e0       	ldi	r24, 0x07	; 7
    1760:	90 e0       	ldi	r25, 0x00	; 0
    1762:	8a d0       	rcall	.+276    	; 0x1878 <_Z13uart_get_bytei>
    1764:	8e 8b       	std	Y+22, r24	; 0x16
		sensor_packet->capacity.bytes.high_byte = uart_get_byte(8);
    1766:	88 e0       	ldi	r24, 0x08	; 8
    1768:	90 e0       	ldi	r25, 0x00	; 0
    176a:	86 d0       	rcall	.+268    	; 0x1878 <_Z13uart_get_bytei>
    176c:	89 8f       	std	Y+25, r24	; 0x19
		sensor_packet->capacity.bytes.low_byte = uart_get_byte(9);
    176e:	89 e0       	ldi	r24, 0x09	; 9
    1770:	90 e0       	ldi	r25, 0x00	; 0
    1772:	82 d0       	rcall	.+260    	; 0x1878 <_Z13uart_get_bytei>
    1774:	88 8f       	std	Y+24, r24	; 0x18
		break;
	}
	uart_reset_receive();
}
    1776:	df 91       	pop	r29
    1778:	cf 91       	pop	r28
    177a:	1f 91       	pop	r17
		sensor_packet->charge.bytes.low_byte = uart_get_byte(7);
		sensor_packet->capacity.bytes.high_byte = uart_get_byte(8);
		sensor_packet->capacity.bytes.low_byte = uart_get_byte(9);
		break;
	}
	uart_reset_receive();
    177c:	54 c0       	rjmp	.+168    	; 0x1826 <_Z18uart_reset_receivev>

0000177e <_Z12Roomba_Driveii>:
}

void Roomba_Drive( int16_t velocity, int16_t radius )
{
    177e:	1f 93       	push	r17
    1780:	cf 93       	push	r28
    1782:	df 93       	push	r29
    1784:	00 d0       	rcall	.+0      	; 0x1786 <_Z12Roomba_Driveii+0x8>
    1786:	cd b7       	in	r28, 0x3d	; 61
    1788:	de b7       	in	r29, 0x3e	; 62
    178a:	18 2f       	mov	r17, r24
	Roomba_Send_Byte(DRIVE);
    178c:	89 e8       	ldi	r24, 0x89	; 137
    178e:	6b 83       	std	Y+3, r22	; 0x03
    1790:	7a 83       	std	Y+2, r23	; 0x02
    1792:	99 83       	std	Y+1, r25	; 0x01
    1794:	11 d0       	rcall	.+34     	; 0x17b8 <_Z16Roomba_Send_Byteh>
	Roomba_Send_Byte(HIGH_BYTE(velocity));
    1796:	99 81       	ldd	r25, Y+1	; 0x01
    1798:	89 2f       	mov	r24, r25
    179a:	0e d0       	rcall	.+28     	; 0x17b8 <_Z16Roomba_Send_Byteh>
	Roomba_Send_Byte(LOW_BYTE(velocity));
    179c:	81 2f       	mov	r24, r17
    179e:	0c d0       	rcall	.+24     	; 0x17b8 <_Z16Roomba_Send_Byteh>
	Roomba_Send_Byte(HIGH_BYTE(radius));
    17a0:	7a 81       	ldd	r23, Y+2	; 0x02
    17a2:	87 2f       	mov	r24, r23
    17a4:	09 d0       	rcall	.+18     	; 0x17b8 <_Z16Roomba_Send_Byteh>
	Roomba_Send_Byte(LOW_BYTE(radius));
    17a6:	6b 81       	ldd	r22, Y+3	; 0x03
    17a8:	86 2f       	mov	r24, r22
}
    17aa:	0f 90       	pop	r0
    17ac:	0f 90       	pop	r0
    17ae:	0f 90       	pop	r0
    17b0:	df 91       	pop	r29
    17b2:	cf 91       	pop	r28
    17b4:	1f 91       	pop	r17
{
	Roomba_Send_Byte(DRIVE);
	Roomba_Send_Byte(HIGH_BYTE(velocity));
	Roomba_Send_Byte(LOW_BYTE(velocity));
	Roomba_Send_Byte(HIGH_BYTE(radius));
	Roomba_Send_Byte(LOW_BYTE(radius));
    17b6:	00 c0       	rjmp	.+0      	; 0x17b8 <_Z16Roomba_Send_Byteh>

000017b8 <_Z16Roomba_Send_Byteh>:

static volatile uint8_t uart_buffer[UART_BUFFER_SIZE];
static volatile uint8_t uart_buffer_index;

void Roomba_Send_Byte(uint8_t data_out){
	while(! (UCSR1A & (1<<UDRE1)));
    17b8:	90 91 c8 00 	lds	r25, 0x00C8
    17bc:	95 ff       	sbrs	r25, 5
    17be:	fc cf       	rjmp	.-8      	; 0x17b8 <_Z16Roomba_Send_Byteh>
	UDR1 = data_out;
    17c0:	80 93 ce 00 	sts	0x00CE, r24
    17c4:	08 95       	ret

000017c6 <_Z16Roomba_UART_Init9_uart_bps>:
}

void Roomba_UART_Init(UART_BPS baud){
	uint8_t sreg = SREG;
    17c6:	2f b7       	in	r18, 0x3f	; 63
	cli();
    17c8:	f8 94       	cli
	
	// Make sure I/O clock to USART1 is enabled
	PRR1 &= ~(1 << PRUSART1);
    17ca:	90 91 65 00 	lds	r25, 0x0065
    17ce:	9e 7f       	andi	r25, 0xFE	; 254
    17d0:	90 93 65 00 	sts	0x0065, r25
	
	// Set baud rate to 19.2k at fOSC = 16 MHz
	
	switch(baud) {
    17d4:	81 30       	cpi	r24, 0x01	; 1
    17d6:	59 f0       	breq	.+22     	; 0x17ee <_Z16Roomba_UART_Init9_uart_bps+0x28>
    17d8:	38 f0       	brcs	.+14     	; 0x17e8 <_Z16Roomba_UART_Init9_uart_bps+0x22>
    17da:	82 30       	cpi	r24, 0x02	; 2
    17dc:	59 f0       	breq	.+22     	; 0x17f4 <_Z16Roomba_UART_Init9_uart_bps+0x2e>
    17de:	83 30       	cpi	r24, 0x03	; 3
    17e0:	49 f4       	brne	.+18     	; 0x17f4 <_Z16Roomba_UART_Init9_uart_bps+0x2e>
			break;
		case UART_57600:
			UBRR1 = 16;
			break;
		case UART_115200:
			UBRR1 = 8;
    17e2:	88 e0       	ldi	r24, 0x08	; 8
    17e4:	90 e0       	ldi	r25, 0x00	; 0
    17e6:	08 c0       	rjmp	.+16     	; 0x17f8 <_Z16Roomba_UART_Init9_uart_bps+0x32>
	
	// Set baud rate to 19.2k at fOSC = 16 MHz
	
	switch(baud) {
		case UART_19200:
			UBRR1 = 51;
    17e8:	83 e3       	ldi	r24, 0x33	; 51
    17ea:	90 e0       	ldi	r25, 0x00	; 0
    17ec:	05 c0       	rjmp	.+10     	; 0x17f8 <_Z16Roomba_UART_Init9_uart_bps+0x32>
			break;
		case UART_38400:
			UBRR1 = 25;
    17ee:	89 e1       	ldi	r24, 0x19	; 25
    17f0:	90 e0       	ldi	r25, 0x00	; 0
    17f2:	02 c0       	rjmp	.+4      	; 0x17f8 <_Z16Roomba_UART_Init9_uart_bps+0x32>
			break;
		case UART_115200:
			UBRR1 = 8;
			break;
		default:
			UBRR1 = 16;
    17f4:	80 e1       	ldi	r24, 0x10	; 16
    17f6:	90 e0       	ldi	r25, 0x00	; 0
    17f8:	90 93 cd 00 	sts	0x00CD, r25
    17fc:	80 93 cc 00 	sts	0x00CC, r24
	}
	
	// Clear USART Transmit complete flag, normal USART transmission speed
	UCSR1A = (1 << TXC1) | (0 << U2X1);
    1800:	80 e4       	ldi	r24, 0x40	; 64
    1802:	80 93 c8 00 	sts	0x00C8, r24
	
	// Enable receiver, transmitter, and rx complete interrupt.
	UCSR1B = (1<<RXEN1)|(1<<TXEN1)|(1<<RXCIE1);  
    1806:	88 e9       	ldi	r24, 0x98	; 152
    1808:	80 93 c9 00 	sts	0x00C9, r24
	// 8-bit data
	UCSR1C = ((1<<UCSZ11)|(1<<UCSZ10));
    180c:	86 e0       	ldi	r24, 0x06	; 6
    180e:	80 93 ca 00 	sts	0x00CA, r24
	// disable 2x speed
	UCSR1A &= ~(1<<U2X1);
    1812:	80 91 c8 00 	lds	r24, 0x00C8
    1816:	8d 7f       	andi	r24, 0xFD	; 253
    1818:	80 93 c8 00 	sts	0x00C8, r24
	
	
	SREG = sreg;
    181c:	2f bf       	out	0x3f, r18	; 63
    181e:	08 95       	ret

00001820 <_Z19uart_bytes_receivedv>:
}

uint8_t uart_bytes_received(void)
{
	return uart_buffer_index;
    1820:	80 91 e6 0c 	lds	r24, 0x0CE6
}
    1824:	08 95       	ret

00001826 <_Z18uart_reset_receivev>:

void uart_reset_receive(void)
{
	uart_buffer_index = 0;
    1826:	10 92 e6 0c 	sts	0x0CE6, r1
    182a:	08 95       	ret

0000182c <__vector_36>:

/**
 * UART receive byte ISR
 */
ISR(USART1_RX_vect)
{
    182c:	1f 92       	push	r1
    182e:	0f 92       	push	r0
    1830:	0f b6       	in	r0, 0x3f	; 63
    1832:	0f 92       	push	r0
    1834:	11 24       	eor	r1, r1
    1836:	0b b6       	in	r0, 0x3b	; 59
    1838:	0f 92       	push	r0
    183a:	8f 93       	push	r24
    183c:	9f 93       	push	r25
    183e:	ef 93       	push	r30
    1840:	ff 93       	push	r31
    uart_buffer[uart_buffer_index] = UDR1;
    1842:	e0 91 e6 0c 	lds	r30, 0x0CE6
    1846:	f0 e0       	ldi	r31, 0x00	; 0
    1848:	80 91 ce 00 	lds	r24, 0x00CE
    184c:	e9 51       	subi	r30, 0x19	; 25
    184e:	f3 4f       	sbci	r31, 0xF3	; 243
    1850:	80 83       	st	Z, r24
    uart_buffer_index = (uart_buffer_index + 1) % UART_BUFFER_SIZE;
    1852:	80 91 e6 0c 	lds	r24, 0x0CE6
    1856:	90 e0       	ldi	r25, 0x00	; 0
    1858:	01 96       	adiw	r24, 0x01	; 1
    185a:	8f 71       	andi	r24, 0x1F	; 31
    185c:	99 27       	eor	r25, r25
    185e:	80 93 e6 0c 	sts	0x0CE6, r24
}
    1862:	ff 91       	pop	r31
    1864:	ef 91       	pop	r30
    1866:	9f 91       	pop	r25
    1868:	8f 91       	pop	r24
    186a:	0f 90       	pop	r0
    186c:	0b be       	out	0x3b, r0	; 59
    186e:	0f 90       	pop	r0
    1870:	0f be       	out	0x3f, r0	; 63
    1872:	0f 90       	pop	r0
    1874:	1f 90       	pop	r1
    1876:	18 95       	reti

00001878 <_Z13uart_get_bytei>:

uint8_t uart_get_byte(int index)
{
	if (index < UART_BUFFER_SIZE)
    1878:	80 32       	cpi	r24, 0x20	; 32
    187a:	91 05       	cpc	r25, r1
    187c:	2c f4       	brge	.+10     	; 0x1888 <_Z13uart_get_bytei+0x10>
	{
		return uart_buffer[index];
    187e:	fc 01       	movw	r30, r24
    1880:	e9 51       	subi	r30, 0x19	; 25
    1882:	f3 4f       	sbci	r31, 0xF3	; 243
    1884:	80 81       	ld	r24, Z
    1886:	08 95       	ret
	}
	return 0;
    1888:	80 e0       	ldi	r24, 0x00	; 0
    188a:	08 95       	ret

0000188c <__vector_23>:
#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)
ISR(TIM0_OVF_vect)
#else
ISR(TIMER0_OVF_vect)
#endif
{
    188c:	1f 92       	push	r1
    188e:	0f 92       	push	r0
    1890:	0f b6       	in	r0, 0x3f	; 63
    1892:	0f 92       	push	r0
    1894:	11 24       	eor	r1, r1
    1896:	2f 93       	push	r18
    1898:	3f 93       	push	r19
    189a:	8f 93       	push	r24
    189c:	9f 93       	push	r25
    189e:	af 93       	push	r26
    18a0:	bf 93       	push	r27
	// copy these to local variables so they can be stored in registers
	// (volatile variables must be read from memory on every access)
	unsigned long m = timer0_millis;
    18a2:	80 91 0b 0d 	lds	r24, 0x0D0B
    18a6:	90 91 0c 0d 	lds	r25, 0x0D0C
    18aa:	a0 91 0d 0d 	lds	r26, 0x0D0D
    18ae:	b0 91 0e 0d 	lds	r27, 0x0D0E
	unsigned char f = timer0_fract;
    18b2:	30 91 0f 0d 	lds	r19, 0x0D0F

	m += MILLIS_INC;
    18b6:	01 96       	adiw	r24, 0x01	; 1
    18b8:	a1 1d       	adc	r26, r1
    18ba:	b1 1d       	adc	r27, r1
	f += FRACT_INC;
    18bc:	23 2f       	mov	r18, r19
    18be:	2d 5f       	subi	r18, 0xFD	; 253
	if (f >= FRACT_MAX) {
    18c0:	2d 37       	cpi	r18, 0x7D	; 125
    18c2:	20 f0       	brcs	.+8      	; 0x18cc <__vector_23+0x40>
		f -= FRACT_MAX;
    18c4:	2d 57       	subi	r18, 0x7D	; 125
		m += 1;
    18c6:	01 96       	adiw	r24, 0x01	; 1
    18c8:	a1 1d       	adc	r26, r1
    18ca:	b1 1d       	adc	r27, r1
	}

	timer0_fract = f;
    18cc:	20 93 0f 0d 	sts	0x0D0F, r18
	timer0_millis = m;
    18d0:	80 93 0b 0d 	sts	0x0D0B, r24
    18d4:	90 93 0c 0d 	sts	0x0D0C, r25
    18d8:	a0 93 0d 0d 	sts	0x0D0D, r26
    18dc:	b0 93 0e 0d 	sts	0x0D0E, r27
	timer0_overflow_count++;
    18e0:	80 91 07 0d 	lds	r24, 0x0D07
    18e4:	90 91 08 0d 	lds	r25, 0x0D08
    18e8:	a0 91 09 0d 	lds	r26, 0x0D09
    18ec:	b0 91 0a 0d 	lds	r27, 0x0D0A
    18f0:	01 96       	adiw	r24, 0x01	; 1
    18f2:	a1 1d       	adc	r26, r1
    18f4:	b1 1d       	adc	r27, r1
    18f6:	80 93 07 0d 	sts	0x0D07, r24
    18fa:	90 93 08 0d 	sts	0x0D08, r25
    18fe:	a0 93 09 0d 	sts	0x0D09, r26
    1902:	b0 93 0a 0d 	sts	0x0D0A, r27
}
    1906:	bf 91       	pop	r27
    1908:	af 91       	pop	r26
    190a:	9f 91       	pop	r25
    190c:	8f 91       	pop	r24
    190e:	3f 91       	pop	r19
    1910:	2f 91       	pop	r18
    1912:	0f 90       	pop	r0
    1914:	0f be       	out	0x3f, r0	; 63
    1916:	0f 90       	pop	r0
    1918:	1f 90       	pop	r1
    191a:	18 95       	reti

0000191c <_exit>:
    191c:	f8 94       	cli

0000191e <__stop_program>:
    191e:	ff cf       	rjmp	.-2      	; 0x191e <__stop_program>
