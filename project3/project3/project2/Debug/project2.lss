
project2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800200  000010fc  00001190  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000010fc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000a1f  00800210  00800210  000011a0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000011a0  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000002f8  00000000  00000000  000011d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 0000008d  00000000  00000000  000014c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003989  00000000  00000000  00001555  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000010d4  00000000  00000000  00004ede  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002007  00000000  00000000  00005fb2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000007c4  00000000  00000000  00007fbc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000157f  00000000  00000000  00008780  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001b3d  00000000  00000000  00009cff  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002c8  00000000  00000000  0000b83c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
       6:	00 00       	nop
       8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
       a:	00 00       	nop
       c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
       e:	00 00       	nop
      10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
      12:	00 00       	nop
      14:	ee c6       	rjmp	.+3548   	; 0xdf2 <__vector_5>
      16:	00 00       	nop
      18:	be c0       	rjmp	.+380    	; 0x196 <__vector_6>
      1a:	00 00       	nop
      1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
      1e:	00 00       	nop
      20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
      22:	00 00       	nop
      24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
      26:	00 00       	nop
      28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
      2e:	00 00       	nop
      30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
      32:	00 00       	nop
      34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
      36:	00 00       	nop
      38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
      3e:	00 00       	nop
      40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
      42:	00 00       	nop
      44:	4e c2       	rjmp	.+1180   	; 0x4e2 <__vector_17>
      46:	00 00       	nop
      48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
      4e:	00 00       	nop
      50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
      52:	00 00       	nop
      54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
      56:	00 00       	nop
      58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	0c 94 34 08 	jmp	0x1068	; 0x1068 <__vector_23>
      60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
      62:	00 00       	nop
      64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
      66:	00 00       	nop
      68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
      6e:	00 00       	nop
      70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
      72:	00 00       	nop
      74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
      76:	00 00       	nop
      78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
      7e:	00 00       	nop
      80:	b3 c0       	rjmp	.+358    	; 0x1e8 <__vector_32>
      82:	00 00       	nop
      84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
      86:	00 00       	nop
      88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
      8e:	00 00       	nop
      90:	c5 c7       	rjmp	.+3978   	; 0x101c <__vector_36>
      92:	00 00       	nop
      94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
      96:	00 00       	nop
      98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
      be:	00 00       	nop
      c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
      da:	00 00       	nop
      dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
      de:	00 00       	nop
      e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	ec ef       	ldi	r30, 0xFC	; 252
      fc:	f0 e1       	ldi	r31, 0x10	; 16
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a0 31       	cpi	r26, 0x10	; 16
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	2c e0       	ldi	r18, 0x0C	; 12
     110:	a0 e1       	ldi	r26, 0x10	; 16
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	af 32       	cpi	r26, 0x2F	; 47
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	7f d5       	rcall	.+2814   	; 0xc1e <main>
     120:	eb c7       	rjmp	.+4054   	; 0x10f8 <_exit>

00000122 <__bad_interrupt>:
     122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <_Z7IR_initv>:

void disable_interrupt() {
	EIMSK &= ~(1<<INT5);
	TIMSK3 &= ~(1<<OCIE3A);
	TIFR3 |= (1<<OCF3A);
	is_receiving = 0;
     124:	ea e0       	ldi	r30, 0x0A	; 10
     126:	f1 e0       	ldi	r31, 0x01	; 1
     128:	80 81       	ld	r24, Z
     12a:	88 62       	ori	r24, 0x28	; 40
     12c:	80 83       	st	Z, r24
     12e:	a0 e2       	ldi	r26, 0x20	; 32
     130:	b1 e0       	ldi	r27, 0x01	; 1
     132:	1c 92       	st	X, r1
     134:	e1 e2       	ldi	r30, 0x21	; 33
     136:	f1 e0       	ldi	r31, 0x01	; 1
     138:	10 82       	st	Z, r1
     13a:	8c 91       	ld	r24, X
     13c:	83 60       	ori	r24, 0x03	; 3
     13e:	8c 93       	st	X, r24
     140:	80 81       	ld	r24, Z
     142:	88 61       	ori	r24, 0x18	; 24
     144:	80 83       	st	Z, r24
     146:	8c 91       	ld	r24, X
     148:	87 7f       	andi	r24, 0xF7	; 247
     14a:	8c 93       	st	X, r24
     14c:	80 81       	ld	r24, Z
     14e:	81 60       	ori	r24, 0x01	; 1
     150:	80 83       	st	Z, r24
     152:	85 ea       	ldi	r24, 0xA5	; 165
     154:	91 e0       	ldi	r25, 0x01	; 1
     156:	90 93 29 01 	sts	0x0129, r25
     15a:	80 93 28 01 	sts	0x0128, r24
     15e:	82 ed       	ldi	r24, 0xD2	; 210
     160:	90 e0       	ldi	r25, 0x00	; 0
     162:	90 93 2d 01 	sts	0x012D, r25
     166:	80 93 2c 01 	sts	0x012C, r24
     16a:	10 92 90 00 	sts	0x0090, r1
     16e:	e1 e9       	ldi	r30, 0x91	; 145
     170:	f0 e0       	ldi	r31, 0x00	; 0
     172:	10 82       	st	Z, r1
     174:	80 81       	ld	r24, Z
     176:	81 60       	ori	r24, 0x01	; 1
     178:	80 83       	st	Z, r24
     17a:	e1 e7       	ldi	r30, 0x71	; 113
     17c:	f0 e0       	ldi	r31, 0x00	; 0
     17e:	80 81       	ld	r24, Z
     180:	8d 7f       	andi	r24, 0xFD	; 253
     182:	80 83       	st	Z, r24
     184:	6d 98       	cbi	0x0d, 5	; 13
     186:	ea e6       	ldi	r30, 0x6A	; 106
     188:	f0 e0       	ldi	r31, 0x00	; 0
     18a:	80 81       	ld	r24, Z
     18c:	8c 60       	ori	r24, 0x0C	; 12
     18e:	80 83       	st	Z, r24
     190:	ed 9a       	sbi	0x1d, 5	; 29
     192:	e5 9a       	sbi	0x1c, 5	; 28
     194:	08 95       	ret

00000196 <__vector_6>:
     196:	1f 92       	push	r1
     198:	0f 92       	push	r0
     19a:	0f b6       	in	r0, 0x3f	; 63
     19c:	0f 92       	push	r0
     19e:	11 24       	eor	r1, r1
     1a0:	8f 93       	push	r24
     1a2:	9f 93       	push	r25
     1a4:	80 91 14 02 	lds	r24, 0x0214
     1a8:	81 11       	cpse	r24, r1
     1aa:	17 c0       	rjmp	.+46     	; 0x1da <__vector_6+0x44>
     1ac:	81 e0       	ldi	r24, 0x01	; 1
     1ae:	80 93 14 02 	sts	0x0214, r24
     1b2:	10 92 12 02 	sts	0x0212, r1
     1b6:	10 92 11 02 	sts	0x0211, r1
     1ba:	c1 9a       	sbi	0x18, 1	; 24
     1bc:	80 91 94 00 	lds	r24, 0x0094
     1c0:	90 91 95 00 	lds	r25, 0x0095
     1c4:	80 52       	subi	r24, 0x20	; 32
     1c6:	91 4d       	sbci	r25, 0xD1	; 209
     1c8:	90 93 99 00 	sts	0x0099, r25
     1cc:	80 93 98 00 	sts	0x0098, r24
     1d0:	80 91 71 00 	lds	r24, 0x0071
     1d4:	82 60       	ori	r24, 0x02	; 2
     1d6:	80 93 71 00 	sts	0x0071, r24
     1da:	9f 91       	pop	r25
     1dc:	8f 91       	pop	r24
     1de:	0f 90       	pop	r0
     1e0:	0f be       	out	0x3f, r0	; 63
     1e2:	0f 90       	pop	r0
     1e4:	1f 90       	pop	r1
     1e6:	18 95       	reti

000001e8 <__vector_32>:
     1e8:	1f 92       	push	r1
     1ea:	0f 92       	push	r0
     1ec:	0f b6       	in	r0, 0x3f	; 63
     1ee:	0f 92       	push	r0
     1f0:	11 24       	eor	r1, r1
     1f2:	0b b6       	in	r0, 0x3b	; 59
     1f4:	0f 92       	push	r0
     1f6:	2f 93       	push	r18
     1f8:	3f 93       	push	r19
     1fa:	4f 93       	push	r20
     1fc:	5f 93       	push	r21
     1fe:	6f 93       	push	r22
     200:	7f 93       	push	r23
     202:	8f 93       	push	r24
     204:	9f 93       	push	r25
     206:	af 93       	push	r26
     208:	bf 93       	push	r27
     20a:	ef 93       	push	r30
     20c:	ff 93       	push	r31
     20e:	80 91 14 02 	lds	r24, 0x0214
     212:	88 23       	and	r24, r24
     214:	91 f1       	breq	.+100    	; 0x27a <__vector_32+0x92>
     216:	65 99       	sbic	0x0c, 5	; 12
     218:	0e c0       	rjmp	.+28     	; 0x236 <__vector_32+0x4e>
     21a:	30 91 12 02 	lds	r19, 0x0212
     21e:	20 91 11 02 	lds	r18, 0x0211
     222:	81 e0       	ldi	r24, 0x01	; 1
     224:	90 e0       	ldi	r25, 0x00	; 0
     226:	03 2e       	mov	r0, r19
     228:	01 c0       	rjmp	.+2      	; 0x22c <__vector_32+0x44>
     22a:	88 0f       	add	r24, r24
     22c:	0a 94       	dec	r0
     22e:	ea f7       	brpl	.-6      	; 0x22a <__vector_32+0x42>
     230:	82 2b       	or	r24, r18
     232:	80 93 11 02 	sts	0x0211, r24
     236:	80 91 12 02 	lds	r24, 0x0212
     23a:	8f 5f       	subi	r24, 0xFF	; 255
     23c:	80 93 12 02 	sts	0x0212, r24
     240:	80 91 98 00 	lds	r24, 0x0098
     244:	90 91 99 00 	lds	r25, 0x0099
     248:	80 5c       	subi	r24, 0xC0	; 192
     24a:	90 4e       	sbci	r25, 0xE0	; 224
     24c:	90 93 99 00 	sts	0x0099, r25
     250:	80 93 98 00 	sts	0x0098, r24
     254:	80 91 12 02 	lds	r24, 0x0212
     258:	88 30       	cpi	r24, 0x08	; 8
     25a:	88 f0       	brcs	.+34     	; 0x27e <__vector_32+0x96>
     25c:	10 92 14 02 	sts	0x0214, r1
     260:	80 91 71 00 	lds	r24, 0x0071
     264:	8d 7f       	andi	r24, 0xFD	; 253
     266:	80 93 71 00 	sts	0x0071, r24
     26a:	c1 9a       	sbi	0x18, 1	; 24
     26c:	e5 9a       	sbi	0x1c, 5	; 28
     26e:	80 91 11 02 	lds	r24, 0x0211
     272:	80 93 10 02 	sts	0x0210, r24
     276:	d9 d4       	rcall	.+2482   	; 0xc2a <_Z12ir_rxhandlerv>
     278:	02 c0       	rjmp	.+4      	; 0x27e <__vector_32+0x96>
     27a:	80 91 13 02 	lds	r24, 0x0213
     27e:	ff 91       	pop	r31
     280:	ef 91       	pop	r30
     282:	bf 91       	pop	r27
     284:	af 91       	pop	r26
     286:	9f 91       	pop	r25
     288:	8f 91       	pop	r24
     28a:	7f 91       	pop	r23
     28c:	6f 91       	pop	r22
     28e:	5f 91       	pop	r21
     290:	4f 91       	pop	r20
     292:	3f 91       	pop	r19
     294:	2f 91       	pop	r18
     296:	0f 90       	pop	r0
     298:	0b be       	out	0x3b, r0	; 59
     29a:	0f 90       	pop	r0
     29c:	0f be       	out	0x3f, r0	; 63
     29e:	0f 90       	pop	r0
     2a0:	1f 90       	pop	r1
     2a2:	18 95       	reti

000002a4 <_Z4markv>:
// //	PORTC &= ~(1 << PC2);
// 	_delay_us(500);
// }

void mark() {
	TCCR5A |= (1<<COM5C1);
     2a4:	e0 e2       	ldi	r30, 0x20	; 32
     2a6:	f1 e0       	ldi	r31, 0x01	; 1
     2a8:	80 81       	ld	r24, Z
     2aa:	88 60       	ori	r24, 0x08	; 8
     2ac:	80 83       	st	Z, r24
	PORTC |= (1 << PC2);
     2ae:	42 9a       	sbi	0x08, 2	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2b0:	8f ec       	ldi	r24, 0xCF	; 207
     2b2:	97 e0       	ldi	r25, 0x07	; 7
     2b4:	01 97       	sbiw	r24, 0x01	; 1
     2b6:	f1 f7       	brne	.-4      	; 0x2b4 <_Z4markv+0x10>
     2b8:	00 c0       	rjmp	.+0      	; 0x2ba <_Z4markv+0x16>
     2ba:	00 00       	nop
     2bc:	08 95       	ret

000002be <_Z5spacev>:
	_delay_us(500);
}
void space() {
	TCCR5A &= ~(1 << COM5C1);
     2be:	e0 e2       	ldi	r30, 0x20	; 32
     2c0:	f1 e0       	ldi	r31, 0x01	; 1
     2c2:	80 81       	ld	r24, Z
     2c4:	87 7f       	andi	r24, 0xF7	; 247
     2c6:	80 83       	st	Z, r24
	PORTC &= ~(1 << PC2);
     2c8:	42 98       	cbi	0x08, 2	; 8
     2ca:	8f ec       	ldi	r24, 0xCF	; 207
     2cc:	97 e0       	ldi	r25, 0x07	; 7
     2ce:	01 97       	sbiw	r24, 0x01	; 1
     2d0:	f1 f7       	brne	.-4      	; 0x2ce <_Z5spacev+0x10>
     2d2:	00 c0       	rjmp	.+0      	; 0x2d4 <_Z5spacev+0x16>
     2d4:	00 00       	nop
     2d6:	08 95       	ret

000002d8 <_Z11IR_transmith>:
// 	//space();
// 	//enable_interupt();
// 	//sei();
// }

void IR_transmit(uint8_t data) {
     2d8:	0f 93       	push	r16
     2da:	1f 93       	push	r17
     2dc:	cf 93       	push	r28
     2de:	df 93       	push	r29
     2e0:	08 2f       	mov	r16, r24
	/*uint8_t sreg = SREG;
	cli();
	disable_interrupt();*/

	mark();
     2e2:	e0 df       	rcall	.-64     	; 0x2a4 <_Z4markv>
	space();
     2e4:	ec df       	rcall	.-40     	; 0x2be <_Z5spacev>
	for(int i = 0; i < 8; i++) {
     2e6:	c0 e0       	ldi	r28, 0x00	; 0
     2e8:	d0 e0       	ldi	r29, 0x00	; 0
		if(((data >> i) & 0x1)) {
     2ea:	10 e0       	ldi	r17, 0x00	; 0
     2ec:	c8 01       	movw	r24, r16
     2ee:	0c 2e       	mov	r0, r28
     2f0:	02 c0       	rjmp	.+4      	; 0x2f6 <_Z11IR_transmith+0x1e>
     2f2:	95 95       	asr	r25
     2f4:	87 95       	ror	r24
     2f6:	0a 94       	dec	r0
     2f8:	e2 f7       	brpl	.-8      	; 0x2f2 <_Z11IR_transmith+0x1a>
     2fa:	80 ff       	sbrs	r24, 0
     2fc:	02 c0       	rjmp	.+4      	; 0x302 <_Z11IR_transmith+0x2a>
			mark();
     2fe:	d2 df       	rcall	.-92     	; 0x2a4 <_Z4markv>
     300:	01 c0       	rjmp	.+2      	; 0x304 <_Z11IR_transmith+0x2c>
			} else {
			space();
     302:	dd df       	rcall	.-70     	; 0x2be <_Z5spacev>
	cli();
	disable_interrupt();*/

	mark();
	space();
	for(int i = 0; i < 8; i++) {
     304:	21 96       	adiw	r28, 0x01	; 1
     306:	c8 30       	cpi	r28, 0x08	; 8
     308:	d1 05       	cpc	r29, r1
     30a:	81 f7       	brne	.-32     	; 0x2ec <_Z11IR_transmith+0x14>
	}
	space();

	/*enable_interrupt();
	SREG = sreg; // sei();*/
}
     30c:	df 91       	pop	r29
     30e:	cf 91       	pop	r28
     310:	1f 91       	pop	r17
     312:	0f 91       	pop	r16
			mark();
			} else {
			space();
		}
	}
	space();
     314:	d4 cf       	rjmp	.-88     	; 0x2be <_Z5spacev>

00000316 <_Z10IR_getLastv>:
	/*enable_interrupt();
	SREG = sreg; // sei();*/
}

uint8_t IR_getLast(){
	return outputByte;
     316:	80 91 10 02 	lds	r24, 0x0210
     31a:	08 95       	ret

0000031c <_ZL4idlev>:
    arg = cur_task->arg;

    SREG = sreg;

    return arg;
}
     31c:	ff cf       	rjmp	.-2      	; 0x31c <_ZL4idlev>

0000031e <_ZL11exit_kernelv>:
     31e:	ff 93       	push	r31
     320:	fc b7       	in	r31, 0x3c	; 60
     322:	ff 93       	push	r31
     324:	ff b7       	in	r31, 0x3f	; 63
     326:	f8 94       	cli
     328:	ff 93       	push	r31
     32a:	ef 93       	push	r30
     32c:	df 93       	push	r29
     32e:	cf 93       	push	r28
     330:	bf 93       	push	r27
     332:	af 93       	push	r26
     334:	9f 93       	push	r25
     336:	8f 93       	push	r24
     338:	7f 93       	push	r23
     33a:	6f 93       	push	r22
     33c:	5f 93       	push	r21
     33e:	4f 93       	push	r20
     340:	3f 93       	push	r19
     342:	2f 93       	push	r18
     344:	1f 93       	push	r17
     346:	0f 93       	push	r16
     348:	ff 92       	push	r15
     34a:	ef 92       	push	r14
     34c:	df 92       	push	r13
     34e:	cf 92       	push	r12
     350:	bf 92       	push	r11
     352:	af 92       	push	r10
     354:	9f 92       	push	r9
     356:	8f 92       	push	r8
     358:	7f 92       	push	r7
     35a:	6f 92       	push	r6
     35c:	5f 92       	push	r5
     35e:	4f 92       	push	r4
     360:	3f 92       	push	r3
     362:	2f 92       	push	r2
     364:	1f 92       	push	r1
     366:	0f 92       	push	r0
     368:	8d b7       	in	r24, 0x3d	; 61
     36a:	9e b7       	in	r25, 0x3e	; 62
     36c:	90 93 01 0c 	sts	0x0C01, r25
     370:	80 93 00 0c 	sts	0x0C00, r24
     374:	e0 91 02 0c 	lds	r30, 0x0C02
     378:	f0 91 03 0c 	lds	r31, 0x0C03
     37c:	f3 95       	inc	r31
     37e:	80 81       	ld	r24, Z
     380:	91 81       	ldd	r25, Z+1	; 0x01
     382:	9e bf       	out	0x3e, r25	; 62
     384:	8d bf       	out	0x3d, r24	; 61
     386:	0f 90       	pop	r0
     388:	1f 90       	pop	r1
     38a:	2f 90       	pop	r2
     38c:	3f 90       	pop	r3
     38e:	4f 90       	pop	r4
     390:	5f 90       	pop	r5
     392:	6f 90       	pop	r6
     394:	7f 90       	pop	r7
     396:	8f 90       	pop	r8
     398:	9f 90       	pop	r9
     39a:	af 90       	pop	r10
     39c:	bf 90       	pop	r11
     39e:	cf 90       	pop	r12
     3a0:	df 90       	pop	r13
     3a2:	ef 90       	pop	r14
     3a4:	ff 90       	pop	r15
     3a6:	0f 91       	pop	r16
     3a8:	1f 91       	pop	r17
     3aa:	2f 91       	pop	r18
     3ac:	3f 91       	pop	r19
     3ae:	4f 91       	pop	r20
     3b0:	5f 91       	pop	r21
     3b2:	6f 91       	pop	r22
     3b4:	7f 91       	pop	r23
     3b6:	8f 91       	pop	r24
     3b8:	9f 91       	pop	r25
     3ba:	af 91       	pop	r26
     3bc:	bf 91       	pop	r27
     3be:	cf 91       	pop	r28
     3c0:	df 91       	pop	r29
     3c2:	ef 91       	pop	r30
     3c4:	ff 91       	pop	r31
     3c6:	ff bf       	out	0x3f, r31	; 63
     3c8:	ff 91       	pop	r31
     3ca:	fc bf       	out	0x3c, r31	; 60
     3cc:	ff 91       	pop	r31
     3ce:	08 95       	ret

000003d0 <_ZL12enter_kernelv>:
     3d0:	ff 93       	push	r31
     3d2:	fc b7       	in	r31, 0x3c	; 60
     3d4:	ff 93       	push	r31
     3d6:	ff b7       	in	r31, 0x3f	; 63
     3d8:	f8 94       	cli
     3da:	ff 93       	push	r31
     3dc:	ef 93       	push	r30
     3de:	df 93       	push	r29
     3e0:	cf 93       	push	r28
     3e2:	bf 93       	push	r27
     3e4:	af 93       	push	r26
     3e6:	9f 93       	push	r25
     3e8:	8f 93       	push	r24
     3ea:	7f 93       	push	r23
     3ec:	6f 93       	push	r22
     3ee:	5f 93       	push	r21
     3f0:	4f 93       	push	r20
     3f2:	3f 93       	push	r19
     3f4:	2f 93       	push	r18
     3f6:	1f 93       	push	r17
     3f8:	0f 93       	push	r16
     3fa:	ff 92       	push	r15
     3fc:	ef 92       	push	r14
     3fe:	df 92       	push	r13
     400:	cf 92       	push	r12
     402:	bf 92       	push	r11
     404:	af 92       	push	r10
     406:	9f 92       	push	r9
     408:	8f 92       	push	r8
     40a:	7f 92       	push	r7
     40c:	6f 92       	push	r6
     40e:	5f 92       	push	r5
     410:	4f 92       	push	r4
     412:	3f 92       	push	r3
     414:	2f 92       	push	r2
     416:	1f 92       	push	r1
     418:	0f 92       	push	r0
     41a:	e0 91 02 0c 	lds	r30, 0x0C02
     41e:	f0 91 03 0c 	lds	r31, 0x0C03
     422:	8d b7       	in	r24, 0x3d	; 61
     424:	9e b7       	in	r25, 0x3e	; 62
     426:	f3 95       	inc	r31
     428:	91 83       	std	Z+1, r25	; 0x01
     42a:	80 83       	st	Z, r24
     42c:	80 91 00 0c 	lds	r24, 0x0C00
     430:	90 91 01 0c 	lds	r25, 0x0C01
     434:	9e bf       	out	0x3e, r25	; 62
     436:	8d bf       	out	0x3d, r24	; 61
     438:	0f 90       	pop	r0
     43a:	1f 90       	pop	r1
     43c:	2f 90       	pop	r2
     43e:	3f 90       	pop	r3
     440:	4f 90       	pop	r4
     442:	5f 90       	pop	r5
     444:	6f 90       	pop	r6
     446:	7f 90       	pop	r7
     448:	8f 90       	pop	r8
     44a:	9f 90       	pop	r9
     44c:	af 90       	pop	r10
     44e:	bf 90       	pop	r11
     450:	cf 90       	pop	r12
     452:	df 90       	pop	r13
     454:	ef 90       	pop	r14
     456:	ff 90       	pop	r15
     458:	0f 91       	pop	r16
     45a:	1f 91       	pop	r17
     45c:	2f 91       	pop	r18
     45e:	3f 91       	pop	r19
     460:	4f 91       	pop	r20
     462:	5f 91       	pop	r21
     464:	6f 91       	pop	r22
     466:	7f 91       	pop	r23
     468:	8f 91       	pop	r24
     46a:	9f 91       	pop	r25
     46c:	af 91       	pop	r26
     46e:	bf 91       	pop	r27
     470:	cf 91       	pop	r28
     472:	df 91       	pop	r29
     474:	ef 91       	pop	r30
     476:	ff 91       	pop	r31
     478:	ff bf       	out	0x3f, r31	; 63
     47a:	ff 91       	pop	r31
     47c:	fc bf       	out	0x3c, r31	; 60
     47e:	ff 91       	pop	r31
     480:	08 95       	ret

00000482 <_ZL7enqueueP7queue_tP9td_struct>:
     482:	fc 01       	movw	r30, r24
     484:	db 01       	movw	r26, r22
     486:	a0 5f       	subi	r26, 0xF0	; 240
     488:	be 4f       	sbci	r27, 0xFE	; 254
     48a:	1d 92       	st	X+, r1
     48c:	1c 92       	st	X, r1
     48e:	80 81       	ld	r24, Z
     490:	91 81       	ldd	r25, Z+1	; 0x01
     492:	89 2b       	or	r24, r25
     494:	19 f4       	brne	.+6      	; 0x49c <_ZL7enqueueP7queue_tP9td_struct+0x1a>
     496:	71 83       	std	Z+1, r23	; 0x01
     498:	60 83       	st	Z, r22
     49a:	06 c0       	rjmp	.+12     	; 0x4a8 <_ZL7enqueueP7queue_tP9td_struct+0x26>
     49c:	a2 81       	ldd	r26, Z+2	; 0x02
     49e:	b3 81       	ldd	r27, Z+3	; 0x03
     4a0:	a0 5f       	subi	r26, 0xF0	; 240
     4a2:	be 4f       	sbci	r27, 0xFE	; 254
     4a4:	6d 93       	st	X+, r22
     4a6:	7c 93       	st	X, r23
     4a8:	73 83       	std	Z+3, r23	; 0x03
     4aa:	62 83       	std	Z+2, r22	; 0x02
     4ac:	08 95       	ret

000004ae <Task_Terminate>:
     4ae:	cf 93       	push	r28
     4b0:	cf b7       	in	r28, 0x3f	; 63
     4b2:	f8 94       	cli
     4b4:	83 e0       	ldi	r24, 0x03	; 3
     4b6:	80 93 4b 02 	sts	0x024B, r24
     4ba:	8a df       	rcall	.-236    	; 0x3d0 <_ZL12enter_kernelv>
     4bc:	cf bf       	out	0x3f, r28	; 63
     4be:	cf 91       	pop	r28
     4c0:	08 95       	ret

000004c2 <_ZL7dequeueP7queue_t.isra.1>:
     4c2:	dc 01       	movw	r26, r24
     4c4:	8d 91       	ld	r24, X+
     4c6:	9c 91       	ld	r25, X
     4c8:	11 97       	sbiw	r26, 0x01	; 1
     4ca:	00 97       	sbiw	r24, 0x00	; 0
     4cc:	49 f0       	breq	.+18     	; 0x4e0 <_ZL7dequeueP7queue_t.isra.1+0x1e>
     4ce:	fc 01       	movw	r30, r24
     4d0:	e0 5f       	subi	r30, 0xF0	; 240
     4d2:	fe 4f       	sbci	r31, 0xFE	; 254
     4d4:	20 81       	ld	r18, Z
     4d6:	31 81       	ldd	r19, Z+1	; 0x01
     4d8:	2d 93       	st	X+, r18
     4da:	3c 93       	st	X, r19
     4dc:	11 82       	std	Z+1, r1	; 0x01
     4de:	10 82       	st	Z, r1
     4e0:	08 95       	ret

000004e2 <__vector_17>:
     4e2:	ff 93       	push	r31
     4e4:	fc b7       	in	r31, 0x3c	; 60
     4e6:	ff 93       	push	r31
     4e8:	ff b7       	in	r31, 0x3f	; 63
     4ea:	f8 94       	cli
     4ec:	f0 68       	ori	r31, 0x80	; 128
     4ee:	ff 93       	push	r31
     4f0:	ef 93       	push	r30
     4f2:	df 93       	push	r29
     4f4:	cf 93       	push	r28
     4f6:	bf 93       	push	r27
     4f8:	af 93       	push	r26
     4fa:	9f 93       	push	r25
     4fc:	8f 93       	push	r24
     4fe:	7f 93       	push	r23
     500:	6f 93       	push	r22
     502:	5f 93       	push	r21
     504:	4f 93       	push	r20
     506:	3f 93       	push	r19
     508:	2f 93       	push	r18
     50a:	1f 93       	push	r17
     50c:	0f 93       	push	r16
     50e:	ff 92       	push	r15
     510:	ef 92       	push	r14
     512:	df 92       	push	r13
     514:	cf 92       	push	r12
     516:	bf 92       	push	r11
     518:	af 92       	push	r10
     51a:	9f 92       	push	r9
     51c:	8f 92       	push	r8
     51e:	7f 92       	push	r7
     520:	6f 92       	push	r6
     522:	5f 92       	push	r5
     524:	4f 92       	push	r4
     526:	3f 92       	push	r3
     528:	2f 92       	push	r2
     52a:	1f 92       	push	r1
     52c:	0f 92       	push	r0
     52e:	e0 91 02 0c 	lds	r30, 0x0C02
     532:	f0 91 03 0c 	lds	r31, 0x0C03
     536:	8d b7       	in	r24, 0x3d	; 61
     538:	9e b7       	in	r25, 0x3e	; 62
     53a:	f3 95       	inc	r31
     53c:	91 83       	std	Z+1, r25	; 0x01
     53e:	80 83       	st	Z, r24
     540:	80 91 00 0c 	lds	r24, 0x0C00
     544:	90 91 01 0c 	lds	r25, 0x0C01
     548:	9e bf       	out	0x3e, r25	; 62
     54a:	8d bf       	out	0x3d, r24	; 61
     54c:	81 e0       	ldi	r24, 0x01	; 1
     54e:	80 93 4b 02 	sts	0x024B, r24
     552:	e8 e8       	ldi	r30, 0x88	; 136
     554:	f0 e0       	ldi	r31, 0x00	; 0
     556:	80 81       	ld	r24, Z
     558:	91 81       	ldd	r25, Z+1	; 0x01
     55a:	80 5f       	subi	r24, 0xF0	; 240
     55c:	98 4d       	sbci	r25, 0xD8	; 216
     55e:	91 83       	std	Z+1, r25	; 0x01
     560:	80 83       	st	Z, r24
     562:	80 91 00 0c 	lds	r24, 0x0C00
     566:	90 91 01 0c 	lds	r25, 0x0C01
     56a:	9e bf       	out	0x3e, r25	; 62
     56c:	8d bf       	out	0x3d, r24	; 61
     56e:	0f 90       	pop	r0
     570:	1f 90       	pop	r1
     572:	2f 90       	pop	r2
     574:	3f 90       	pop	r3
     576:	4f 90       	pop	r4
     578:	5f 90       	pop	r5
     57a:	6f 90       	pop	r6
     57c:	7f 90       	pop	r7
     57e:	8f 90       	pop	r8
     580:	9f 90       	pop	r9
     582:	af 90       	pop	r10
     584:	bf 90       	pop	r11
     586:	cf 90       	pop	r12
     588:	df 90       	pop	r13
     58a:	ef 90       	pop	r14
     58c:	ff 90       	pop	r15
     58e:	0f 91       	pop	r16
     590:	1f 91       	pop	r17
     592:	2f 91       	pop	r18
     594:	3f 91       	pop	r19
     596:	4f 91       	pop	r20
     598:	5f 91       	pop	r21
     59a:	6f 91       	pop	r22
     59c:	7f 91       	pop	r23
     59e:	8f 91       	pop	r24
     5a0:	9f 91       	pop	r25
     5a2:	af 91       	pop	r26
     5a4:	bf 91       	pop	r27
     5a6:	cf 91       	pop	r28
     5a8:	df 91       	pop	r29
     5aa:	ef 91       	pop	r30
     5ac:	ff 91       	pop	r31
     5ae:	ff bf       	out	0x3f, r31	; 63
     5b0:	ff 91       	pop	r31
     5b2:	fc bf       	out	0x3c, r31	; 60
     5b4:	ff 91       	pop	r31
     5b6:	08 95       	ret

000005b8 <OS_Abort>:
     5b8:	f8 94       	cli
     5ba:	80 e6       	ldi	r24, 0x60	; 96
     5bc:	80 93 01 01 	sts	0x0101, r24
     5c0:	80 91 00 02 	lds	r24, 0x0200
     5c4:	86 30       	cpi	r24, 0x06	; 6
     5c6:	28 f4       	brcc	.+10     	; 0x5d2 <OS_Abort+0x1a>
     5c8:	80 91 00 02 	lds	r24, 0x0200
     5cc:	8f 5f       	subi	r24, 0xFF	; 255
     5ce:	30 e4       	ldi	r19, 0x40	; 64
     5d0:	04 c0       	rjmp	.+8      	; 0x5da <OS_Abort+0x22>
     5d2:	80 91 00 02 	lds	r24, 0x0200
     5d6:	85 50       	subi	r24, 0x05	; 5
     5d8:	30 e2       	ldi	r19, 0x20	; 32
     5da:	40 e6       	ldi	r20, 0x60	; 96
     5dc:	40 93 02 01 	sts	0x0102, r20
     5e0:	94 e6       	ldi	r25, 0x64	; 100
     5e2:	2f e7       	ldi	r18, 0x7F	; 127
     5e4:	58 e3       	ldi	r21, 0x38	; 56
     5e6:	61 e0       	ldi	r22, 0x01	; 1
     5e8:	21 50       	subi	r18, 0x01	; 1
     5ea:	50 40       	sbci	r21, 0x00	; 0
     5ec:	60 40       	sbci	r22, 0x00	; 0
     5ee:	e1 f7       	brne	.-8      	; 0x5e8 <OS_Abort+0x30>
     5f0:	00 c0       	rjmp	.+0      	; 0x5f2 <OS_Abort+0x3a>
     5f2:	00 00       	nop
     5f4:	91 50       	subi	r25, 0x01	; 1
     5f6:	a9 f7       	brne	.-22     	; 0x5e2 <OS_Abort+0x2a>
     5f8:	10 92 02 01 	sts	0x0102, r1
     5fc:	98 e2       	ldi	r25, 0x28	; 40
     5fe:	7f e7       	ldi	r23, 0x7F	; 127
     600:	28 e3       	ldi	r18, 0x38	; 56
     602:	51 e0       	ldi	r21, 0x01	; 1
     604:	71 50       	subi	r23, 0x01	; 1
     606:	20 40       	sbci	r18, 0x00	; 0
     608:	50 40       	sbci	r21, 0x00	; 0
     60a:	e1 f7       	brne	.-8      	; 0x604 <OS_Abort+0x4c>
     60c:	00 c0       	rjmp	.+0      	; 0x60e <OS_Abort+0x56>
     60e:	00 00       	nop
     610:	91 50       	subi	r25, 0x01	; 1
     612:	a9 f7       	brne	.-22     	; 0x5fe <OS_Abort+0x46>
     614:	98 17       	cp	r25, r24
     616:	f1 f0       	breq	.+60     	; 0x654 <OS_Abort+0x9c>
     618:	30 93 02 01 	sts	0x0102, r19
     61c:	2a e0       	ldi	r18, 0x0A	; 10
     61e:	6f e7       	ldi	r22, 0x7F	; 127
     620:	78 e3       	ldi	r23, 0x38	; 56
     622:	51 e0       	ldi	r21, 0x01	; 1
     624:	61 50       	subi	r22, 0x01	; 1
     626:	70 40       	sbci	r23, 0x00	; 0
     628:	50 40       	sbci	r21, 0x00	; 0
     62a:	e1 f7       	brne	.-8      	; 0x624 <OS_Abort+0x6c>
     62c:	00 c0       	rjmp	.+0      	; 0x62e <OS_Abort+0x76>
     62e:	00 00       	nop
     630:	21 50       	subi	r18, 0x01	; 1
     632:	a9 f7       	brne	.-22     	; 0x61e <OS_Abort+0x66>
     634:	10 92 02 01 	sts	0x0102, r1
     638:	2a e0       	ldi	r18, 0x0A	; 10
     63a:	6f e7       	ldi	r22, 0x7F	; 127
     63c:	78 e3       	ldi	r23, 0x38	; 56
     63e:	51 e0       	ldi	r21, 0x01	; 1
     640:	61 50       	subi	r22, 0x01	; 1
     642:	70 40       	sbci	r23, 0x00	; 0
     644:	50 40       	sbci	r21, 0x00	; 0
     646:	e1 f7       	brne	.-8      	; 0x640 <OS_Abort+0x88>
     648:	00 c0       	rjmp	.+0      	; 0x64a <OS_Abort+0x92>
     64a:	00 00       	nop
     64c:	21 50       	subi	r18, 0x01	; 1
     64e:	a9 f7       	brne	.-22     	; 0x63a <OS_Abort+0x82>
     650:	9f 5f       	subi	r25, 0xFF	; 255
     652:	e0 cf       	rjmp	.-64     	; 0x614 <OS_Abort+0x5c>
     654:	94 e1       	ldi	r25, 0x14	; 20
     656:	6f e7       	ldi	r22, 0x7F	; 127
     658:	78 e3       	ldi	r23, 0x38	; 56
     65a:	21 e0       	ldi	r18, 0x01	; 1
     65c:	61 50       	subi	r22, 0x01	; 1
     65e:	70 40       	sbci	r23, 0x00	; 0
     660:	20 40       	sbci	r18, 0x00	; 0
     662:	e1 f7       	brne	.-8      	; 0x65c <OS_Abort+0xa4>
     664:	00 c0       	rjmp	.+0      	; 0x666 <OS_Abort+0xae>
     666:	00 00       	nop
     668:	91 50       	subi	r25, 0x01	; 1
     66a:	a9 f7       	brne	.-22     	; 0x656 <OS_Abort+0x9e>
     66c:	b7 cf       	rjmp	.-146    	; 0x5dc <OS_Abort+0x24>

0000066e <_ZL18kernel_create_taskv>:
     66e:	80 91 36 02 	lds	r24, 0x0236
     672:	90 91 37 02 	lds	r25, 0x0237
     676:	89 2b       	or	r24, r25
     678:	09 f4       	brne	.+2      	; 0x67c <_ZL18kernel_create_taskv+0xe>
     67a:	b5 c0       	rjmp	.+362    	; 0x7e6 <_ZL18kernel_create_taskv+0x178>
     67c:	80 91 40 02 	lds	r24, 0x0240
     680:	82 30       	cpi	r24, 0x02	; 2
     682:	f9 f4       	brne	.+62     	; 0x6c2 <_ZL18kernel_create_taskv+0x54>
     684:	80 91 47 02 	lds	r24, 0x0247
     688:	90 91 48 02 	lds	r25, 0x0248
     68c:	89 2b       	or	r24, r25
     68e:	09 f4       	brne	.+2      	; 0x692 <_ZL18kernel_create_taskv+0x24>
     690:	b0 c0       	rjmp	.+352    	; 0x7f2 <_ZL18kernel_create_taskv+0x184>
     692:	80 91 45 02 	lds	r24, 0x0245
     696:	90 91 46 02 	lds	r25, 0x0246
     69a:	89 2b       	or	r24, r25
     69c:	09 f4       	brne	.+2      	; 0x6a0 <_ZL18kernel_create_taskv+0x32>
     69e:	a9 c0       	rjmp	.+338    	; 0x7f2 <_ZL18kernel_create_taskv+0x184>
     6a0:	80 91 49 02 	lds	r24, 0x0249
     6a4:	90 91 4a 02 	lds	r25, 0x024A
     6a8:	20 91 47 02 	lds	r18, 0x0247
     6ac:	30 91 48 02 	lds	r19, 0x0248
     6b0:	80 91 45 02 	lds	r24, 0x0245
     6b4:	90 91 46 02 	lds	r25, 0x0246
     6b8:	82 17       	cp	r24, r18
     6ba:	93 07       	cpc	r25, r19
     6bc:	10 f4       	brcc	.+4      	; 0x6c2 <_ZL18kernel_create_taskv+0x54>
     6be:	83 e0       	ldi	r24, 0x03	; 3
     6c0:	99 c0       	rjmp	.+306    	; 0x7f4 <_ZL18kernel_create_taskv+0x186>
     6c2:	80 91 40 02 	lds	r24, 0x0240
     6c6:	88 23       	and	r24, r24
     6c8:	29 f0       	breq	.+10     	; 0x6d4 <_ZL18kernel_create_taskv+0x66>
     6ca:	86 e3       	ldi	r24, 0x36	; 54
     6cc:	92 e0       	ldi	r25, 0x02	; 2
     6ce:	f9 de       	rcall	.-526    	; 0x4c2 <_ZL7dequeueP7queue_t.isra.1>
     6d0:	bc 01       	movw	r22, r24
     6d2:	02 c0       	rjmp	.+4      	; 0x6d8 <_ZL18kernel_create_taskv+0x6a>
     6d4:	6c ee       	ldi	r22, 0xEC	; 236
     6d6:	7a e0       	ldi	r23, 0x0A	; 10
     6d8:	fb 01       	movw	r30, r22
     6da:	e7 52       	subi	r30, 0x27	; 39
     6dc:	ff 4f       	sbci	r31, 0xFF	; 255
     6de:	10 82       	st	Z, r1
     6e0:	80 e8       	ldi	r24, 0x80	; 128
     6e2:	7e 96       	adiw	r30, 0x1e	; 30
     6e4:	80 83       	st	Z, r24
     6e6:	33 96       	adiw	r30, 0x03	; 3
     6e8:	10 82       	st	Z, r1
     6ea:	80 91 3c 02 	lds	r24, 0x023C
     6ee:	90 91 3d 02 	lds	r25, 0x023D
     6f2:	31 96       	adiw	r30, 0x01	; 1
     6f4:	90 83       	st	Z, r25
     6f6:	80 91 3c 02 	lds	r24, 0x023C
     6fa:	90 91 3d 02 	lds	r25, 0x023D
     6fe:	31 96       	adiw	r30, 0x01	; 1
     700:	80 83       	st	Z, r24
     702:	31 96       	adiw	r30, 0x01	; 1
     704:	10 82       	st	Z, r1
     706:	87 e5       	ldi	r24, 0x57	; 87
     708:	92 e0       	ldi	r25, 0x02	; 2
     70a:	31 96       	adiw	r30, 0x01	; 1
     70c:	90 83       	st	Z, r25
     70e:	31 96       	adiw	r30, 0x01	; 1
     710:	80 83       	st	Z, r24
     712:	31 96       	adiw	r30, 0x01	; 1
     714:	cb 01       	movw	r24, r22
     716:	89 52       	subi	r24, 0x29	; 41
     718:	9f 4f       	sbci	r25, 0xFF	; 255
     71a:	91 83       	std	Z+1, r25	; 0x01
     71c:	80 83       	st	Z, r24
     71e:	82 e0       	ldi	r24, 0x02	; 2
     720:	3c 96       	adiw	r30, 0x0c	; 12
     722:	80 83       	st	Z, r24
     724:	80 91 3e 02 	lds	r24, 0x023E
     728:	90 91 3f 02 	lds	r25, 0x023F
     72c:	31 96       	adiw	r30, 0x01	; 1
     72e:	91 83       	std	Z+1, r25	; 0x01
     730:	80 83       	st	Z, r24
     732:	80 91 40 02 	lds	r24, 0x0240
     736:	32 96       	adiw	r30, 0x02	; 2
     738:	80 83       	st	Z, r24
     73a:	80 91 45 02 	lds	r24, 0x0245
     73e:	90 91 46 02 	lds	r25, 0x0246
     742:	39 97       	sbiw	r30, 0x09	; 9
     744:	91 83       	std	Z+1, r25	; 0x01
     746:	80 83       	st	Z, r24
     748:	80 91 47 02 	lds	r24, 0x0247
     74c:	90 91 48 02 	lds	r25, 0x0248
     750:	32 96       	adiw	r30, 0x02	; 2
     752:	91 83       	std	Z+1, r25	; 0x01
     754:	80 83       	st	Z, r24
     756:	80 91 49 02 	lds	r24, 0x0249
     75a:	90 91 4a 02 	lds	r25, 0x024A
     75e:	32 96       	adiw	r30, 0x02	; 2
     760:	91 83       	std	Z+1, r25	; 0x01
     762:	80 83       	st	Z, r24
     764:	80 91 41 02 	lds	r24, 0x0241
     768:	90 91 42 02 	lds	r25, 0x0242
     76c:	38 97       	sbiw	r30, 0x08	; 8
     76e:	91 83       	std	Z+1, r25	; 0x01
     770:	80 83       	st	Z, r24
     772:	80 91 43 02 	lds	r24, 0x0243
     776:	90 91 44 02 	lds	r25, 0x0244
     77a:	32 96       	adiw	r30, 0x02	; 2
     77c:	91 83       	std	Z+1, r25	; 0x01
     77e:	80 83       	st	Z, r24
     780:	80 91 40 02 	lds	r24, 0x0240
     784:	82 30       	cpi	r24, 0x02	; 2
     786:	51 f0       	breq	.+20     	; 0x79c <_ZL18kernel_create_taskv+0x12e>
     788:	83 30       	cpi	r24, 0x03	; 3
     78a:	29 f0       	breq	.+10     	; 0x796 <_ZL18kernel_create_taskv+0x128>
     78c:	81 30       	cpi	r24, 0x01	; 1
     78e:	71 f5       	brne	.+92     	; 0x7ec <_ZL18kernel_create_taskv+0x17e>
     790:	82 e3       	ldi	r24, 0x32	; 50
     792:	92 e0       	ldi	r25, 0x02	; 2
     794:	26 c0       	rjmp	.+76     	; 0x7e2 <_ZL18kernel_create_taskv+0x174>
     796:	8a e2       	ldi	r24, 0x2A	; 42
     798:	92 e0       	ldi	r25, 0x02	; 2
     79a:	23 c0       	rjmp	.+70     	; 0x7e2 <_ZL18kernel_create_taskv+0x174>
     79c:	fb 01       	movw	r30, r22
     79e:	e0 5f       	subi	r30, 0xF0	; 240
     7a0:	fe 4f       	sbci	r31, 0xFE	; 254
     7a2:	11 82       	std	Z+1, r1	; 0x01
     7a4:	10 82       	st	Z, r1
     7a6:	80 91 2e 02 	lds	r24, 0x022E
     7aa:	90 91 2f 02 	lds	r25, 0x022F
     7ae:	32 96       	adiw	r30, 0x02	; 2
     7b0:	89 2b       	or	r24, r25
     7b2:	39 f4       	brne	.+14     	; 0x7c2 <_ZL18kernel_create_taskv+0x154>
     7b4:	11 82       	std	Z+1, r1	; 0x01
     7b6:	10 82       	st	Z, r1
     7b8:	70 93 2f 02 	sts	0x022F, r23
     7bc:	60 93 2e 02 	sts	0x022E, r22
     7c0:	0b c0       	rjmp	.+22     	; 0x7d8 <_ZL18kernel_create_taskv+0x16a>
     7c2:	80 91 30 02 	lds	r24, 0x0230
     7c6:	90 91 31 02 	lds	r25, 0x0231
     7ca:	dc 01       	movw	r26, r24
     7cc:	a0 5f       	subi	r26, 0xF0	; 240
     7ce:	be 4f       	sbci	r27, 0xFE	; 254
     7d0:	6d 93       	st	X+, r22
     7d2:	7c 93       	st	X, r23
     7d4:	91 83       	std	Z+1, r25	; 0x01
     7d6:	80 83       	st	Z, r24
     7d8:	70 93 31 02 	sts	0x0231, r23
     7dc:	60 93 30 02 	sts	0x0230, r22
     7e0:	05 c0       	rjmp	.+10     	; 0x7ec <_ZL18kernel_create_taskv+0x17e>
     7e2:	4f de       	rcall	.-866    	; 0x482 <_ZL7enqueueP7queue_tP9td_struct>
     7e4:	03 c0       	rjmp	.+6      	; 0x7ec <_ZL18kernel_create_taskv+0x17e>
     7e6:	80 e0       	ldi	r24, 0x00	; 0
     7e8:	90 e0       	ldi	r25, 0x00	; 0
     7ea:	08 95       	ret
     7ec:	81 e0       	ldi	r24, 0x01	; 1
     7ee:	90 e0       	ldi	r25, 0x00	; 0
     7f0:	08 95       	ret
     7f2:	84 e0       	ldi	r24, 0x04	; 4
     7f4:	80 93 00 02 	sts	0x0200, r24
     7f8:	df de       	rcall	.-578    	; 0x5b8 <OS_Abort>

000007fa <_Z7OS_Initv>:
     7fa:	cf 93       	push	r28
     7fc:	df 93       	push	r29
     7fe:	1f 92       	push	r1
     800:	cd b7       	in	r28, 0x3d	; 61
     802:	de b7       	in	r29, 0x3e	; 62
     804:	80 91 81 00 	lds	r24, 0x0081
     808:	82 60       	ori	r24, 0x02	; 2
     80a:	80 93 81 00 	sts	0x0081, r24
     80e:	e8 e5       	ldi	r30, 0x58	; 88
     810:	f3 e0       	ldi	r31, 0x03	; 3
     812:	a5 e1       	ldi	r26, 0x15	; 21
     814:	b2 e0       	ldi	r27, 0x02	; 2
     816:	10 82       	st	Z, r1
     818:	1d 92       	st	X+, r1
     81a:	1d 92       	st	X+, r1
     81c:	cf 01       	movw	r24, r30
     81e:	08 96       	adiw	r24, 0x08	; 8
     820:	95 83       	std	Z+5, r25	; 0x05
     822:	84 83       	std	Z+4, r24	; 0x04
     824:	ec 5e       	subi	r30, 0xEC	; 236
     826:	fe 4f       	sbci	r31, 0xFE	; 254
     828:	2a e0       	ldi	r18, 0x0A	; 10
     82a:	e4 3e       	cpi	r30, 0xE4	; 228
     82c:	f2 07       	cpc	r31, r18
     82e:	99 f7       	brne	.-26     	; 0x816 <_Z7OS_Initv+0x1c>
     830:	10 92 e9 0a 	sts	0x0AE9, r1
     834:	10 92 e8 0a 	sts	0x0AE8, r1
     838:	0c e4       	ldi	r16, 0x4C	; 76
     83a:	12 e0       	ldi	r17, 0x02	; 2
     83c:	10 93 37 02 	sts	0x0237, r17
     840:	00 93 36 02 	sts	0x0236, r16
     844:	88 ed       	ldi	r24, 0xD8	; 216
     846:	99 e0       	ldi	r25, 0x09	; 9
     848:	90 93 39 02 	sts	0x0239, r25
     84c:	80 93 38 02 	sts	0x0238, r24
     850:	8e e8       	ldi	r24, 0x8E	; 142
     852:	91 e0       	ldi	r25, 0x01	; 1
     854:	90 93 3d 02 	sts	0x023D, r25
     858:	80 93 3c 02 	sts	0x023C, r24
     85c:	10 92 40 02 	sts	0x0240, r1
     860:	06 df       	rcall	.-500    	; 0x66e <_ZL18kernel_create_taskv>
     862:	85 e2       	ldi	r24, 0x25	; 37
     864:	96 e0       	ldi	r25, 0x06	; 6
     866:	90 93 3d 02 	sts	0x023D, r25
     86a:	80 93 3c 02 	sts	0x023C, r24
     86e:	83 e0       	ldi	r24, 0x03	; 3
     870:	80 93 40 02 	sts	0x0240, r24
     874:	fc de       	rcall	.-520    	; 0x66e <_ZL18kernel_create_taskv>
     876:	10 93 03 0c 	sts	0x0C03, r17
     87a:	00 93 02 0c 	sts	0x0C02, r16
     87e:	81 e0       	ldi	r24, 0x01	; 1
     880:	80 93 58 03 	sts	0x0358, r24
     884:	8a e2       	ldi	r24, 0x2A	; 42
     886:	92 e0       	ldi	r25, 0x02	; 2
     888:	1c de       	rcall	.-968    	; 0x4c2 <_ZL7dequeueP7queue_t.isra.1>
     88a:	80 91 6f 00 	lds	r24, 0x006F
     88e:	82 60       	ori	r24, 0x02	; 2
     890:	80 93 6f 00 	sts	0x006F, r24
     894:	80 e1       	ldi	r24, 0x10	; 16
     896:	97 e2       	ldi	r25, 0x27	; 39
     898:	90 93 89 00 	sts	0x0089, r25
     89c:	80 93 88 00 	sts	0x0088, r24
     8a0:	10 92 85 00 	sts	0x0085, r1
     8a4:	10 92 84 00 	sts	0x0084, r1
     8a8:	82 e0       	ldi	r24, 0x02	; 2
     8aa:	86 bb       	out	0x16, r24	; 22
     8ac:	ee 24       	eor	r14, r14
     8ae:	e3 94       	inc	r14
     8b0:	0c ee       	ldi	r16, 0xEC	; 236
     8b2:	1a e0       	ldi	r17, 0x0A	; 10
     8b4:	82 e0       	ldi	r24, 0x02	; 2
     8b6:	f8 2e       	mov	r15, r24
     8b8:	80 91 02 0c 	lds	r24, 0x0C02
     8bc:	90 91 03 0c 	lds	r25, 0x0C03
     8c0:	fc 01       	movw	r30, r24
     8c2:	e4 5f       	subi	r30, 0xF4	; 244
     8c4:	fe 4f       	sbci	r31, 0xFE	; 254
     8c6:	20 81       	ld	r18, Z
     8c8:	21 30       	cpi	r18, 0x01	; 1
     8ca:	21 f4       	brne	.+8      	; 0x8d4 <_Z7OS_Initv+0xda>
     8cc:	8c 5e       	subi	r24, 0xEC	; 236
     8ce:	9a 40       	sbci	r25, 0x0A	; 10
     8d0:	09 f0       	breq	.+2      	; 0x8d4 <_Z7OS_Initv+0xda>
     8d2:	57 c0       	rjmp	.+174    	; 0x982 <_Z7OS_Initv+0x188>
     8d4:	80 91 2a 02 	lds	r24, 0x022A
     8d8:	90 91 2b 02 	lds	r25, 0x022B
     8dc:	89 2b       	or	r24, r25
     8de:	19 f0       	breq	.+6      	; 0x8e6 <_Z7OS_Initv+0xec>
     8e0:	8a e2       	ldi	r24, 0x2A	; 42
     8e2:	92 e0       	ldi	r25, 0x02	; 2
     8e4:	3d c0       	rjmp	.+122    	; 0x960 <_Z7OS_Initv+0x166>
     8e6:	80 91 2e 02 	lds	r24, 0x022E
     8ea:	90 91 2f 02 	lds	r25, 0x022F
     8ee:	00 97       	sbiw	r24, 0x00	; 0
     8f0:	79 f1       	breq	.+94     	; 0x950 <_Z7OS_Initv+0x156>
     8f2:	20 e0       	ldi	r18, 0x00	; 0
     8f4:	30 e0       	ldi	r19, 0x00	; 0
     8f6:	40 e0       	ldi	r20, 0x00	; 0
     8f8:	50 e0       	ldi	r21, 0x00	; 0
     8fa:	fc 01       	movw	r30, r24
     8fc:	ee 5f       	subi	r30, 0xFE	; 254
     8fe:	fe 4f       	sbci	r31, 0xFE	; 254
     900:	60 81       	ld	r22, Z
     902:	71 81       	ldd	r23, Z+1	; 0x01
     904:	67 2b       	or	r22, r23
     906:	81 f4       	brne	.+32     	; 0x928 <_Z7OS_Initv+0x12e>
     908:	dc 01       	movw	r26, r24
     90a:	aa 5f       	subi	r26, 0xFA	; 250
     90c:	be 4f       	sbci	r27, 0xFE	; 254
     90e:	2d 91       	ld	r18, X+
     910:	3c 91       	ld	r19, X
     912:	31 83       	std	Z+1, r19	; 0x01
     914:	20 83       	st	Z, r18
     916:	36 96       	adiw	r30, 0x06	; 6
     918:	20 81       	ld	r18, Z
     91a:	31 81       	ldd	r19, Z+1	; 0x01
     91c:	34 97       	sbiw	r30, 0x04	; 4
     91e:	31 83       	std	Z+1, r19	; 0x01
     920:	20 83       	st	Z, r18
     922:	4f 5f       	subi	r20, 0xFF	; 255
     924:	5f 4f       	sbci	r21, 0xFF	; 255
     926:	9c 01       	movw	r18, r24
     928:	42 30       	cpi	r20, 0x02	; 2
     92a:	51 05       	cpc	r21, r1
     92c:	14 f0       	brlt	.+4      	; 0x932 <_Z7OS_Initv+0x138>
     92e:	8b e0       	ldi	r24, 0x0B	; 11
     930:	66 c0       	rjmp	.+204    	; 0x9fe <_Z7OS_Initv+0x204>
     932:	fc 01       	movw	r30, r24
     934:	e0 5f       	subi	r30, 0xF0	; 240
     936:	fe 4f       	sbci	r31, 0xFE	; 254
     938:	80 81       	ld	r24, Z
     93a:	91 81       	ldd	r25, Z+1	; 0x01
     93c:	00 97       	sbiw	r24, 0x00	; 0
     93e:	e9 f6       	brne	.-70     	; 0x8fa <_Z7OS_Initv+0x100>
     940:	21 15       	cp	r18, r1
     942:	31 05       	cpc	r19, r1
     944:	29 f0       	breq	.+10     	; 0x950 <_Z7OS_Initv+0x156>
     946:	30 93 03 0c 	sts	0x0C03, r19
     94a:	20 93 02 0c 	sts	0x0C02, r18
     94e:	12 c0       	rjmp	.+36     	; 0x974 <_Z7OS_Initv+0x17a>
     950:	80 91 32 02 	lds	r24, 0x0232
     954:	90 91 33 02 	lds	r25, 0x0233
     958:	89 2b       	or	r24, r25
     95a:	41 f0       	breq	.+16     	; 0x96c <_Z7OS_Initv+0x172>
     95c:	82 e3       	ldi	r24, 0x32	; 50
     95e:	92 e0       	ldi	r25, 0x02	; 2
     960:	b0 dd       	rcall	.-1184   	; 0x4c2 <_ZL7dequeueP7queue_t.isra.1>
     962:	90 93 03 0c 	sts	0x0C03, r25
     966:	80 93 02 0c 	sts	0x0C02, r24
     96a:	04 c0       	rjmp	.+8      	; 0x974 <_Z7OS_Initv+0x17a>
     96c:	10 93 03 0c 	sts	0x0C03, r17
     970:	00 93 02 0c 	sts	0x0C02, r16
     974:	e0 91 02 0c 	lds	r30, 0x0C02
     978:	f0 91 03 0c 	lds	r31, 0x0C03
     97c:	e4 5f       	subi	r30, 0xF4	; 244
     97e:	fe 4f       	sbci	r31, 0xFE	; 254
     980:	e0 82       	st	Z, r14
     982:	cd dc       	rcall	.-1638   	; 0x31e <_ZL11exit_kernelv>
     984:	20 91 4b 02 	lds	r18, 0x024B
     988:	22 30       	cpi	r18, 0x02	; 2
     98a:	09 f4       	brne	.+2      	; 0x98e <_Z7OS_Initv+0x194>
     98c:	5b c0       	rjmp	.+182    	; 0xa44 <_Z7OS_Initv+0x24a>
     98e:	c0 90 02 0c 	lds	r12, 0x0C02
     992:	d0 90 03 0c 	lds	r13, 0x0C03
     996:	23 30       	cpi	r18, 0x03	; 3
     998:	30 f4       	brcc	.+12     	; 0x9a6 <_Z7OS_Initv+0x1ac>
     99a:	22 23       	and	r18, r18
     99c:	09 f4       	brne	.+2      	; 0x9a0 <_Z7OS_Initv+0x1a6>
     99e:	ec c0       	rjmp	.+472    	; 0xb78 <_Z7OS_Initv+0x37e>
     9a0:	21 30       	cpi	r18, 0x01	; 1
     9a2:	51 f0       	breq	.+20     	; 0x9b8 <_Z7OS_Initv+0x1be>
     9a4:	e1 c0       	rjmp	.+450    	; 0xb68 <_Z7OS_Initv+0x36e>
     9a6:	24 30       	cpi	r18, 0x04	; 4
     9a8:	09 f4       	brne	.+2      	; 0x9ac <_Z7OS_Initv+0x1b2>
     9aa:	c9 c0       	rjmp	.+402    	; 0xb3e <_Z7OS_Initv+0x344>
     9ac:	08 f4       	brcc	.+2      	; 0x9b0 <_Z7OS_Initv+0x1b6>
     9ae:	6a c0       	rjmp	.+212    	; 0xa84 <_Z7OS_Initv+0x28a>
     9b0:	25 30       	cpi	r18, 0x05	; 5
     9b2:	09 f4       	brne	.+2      	; 0x9b6 <_Z7OS_Initv+0x1bc>
     9b4:	e1 c0       	rjmp	.+450    	; 0xb78 <_Z7OS_Initv+0x37e>
     9b6:	d8 c0       	rjmp	.+432    	; 0xb68 <_Z7OS_Initv+0x36e>
     9b8:	80 91 84 00 	lds	r24, 0x0084
     9bc:	90 91 85 00 	lds	r25, 0x0085
     9c0:	90 93 28 02 	sts	0x0228, r25
     9c4:	80 93 27 02 	sts	0x0227, r24
     9c8:	80 91 29 02 	lds	r24, 0x0229
     9cc:	8f 5f       	subi	r24, 0xFF	; 255
     9ce:	80 93 29 02 	sts	0x0229, r24
     9d2:	f6 01       	movw	r30, r12
     9d4:	e1 5f       	subi	r30, 0xF1	; 241
     9d6:	fe 4f       	sbci	r31, 0xFE	; 254
     9d8:	40 81       	ld	r20, Z
     9da:	42 30       	cpi	r20, 0x02	; 2
     9dc:	99 f4       	brne	.+38     	; 0xa04 <_Z7OS_Initv+0x20a>
     9de:	33 97       	sbiw	r30, 0x03	; 3
     9e0:	80 81       	ld	r24, Z
     9e2:	81 30       	cpi	r24, 0x01	; 1
     9e4:	79 f4       	brne	.+30     	; 0xa04 <_Z7OS_Initv+0x20a>
     9e6:	38 97       	sbiw	r30, 0x08	; 8
     9e8:	80 81       	ld	r24, Z
     9ea:	91 81       	ldd	r25, Z+1	; 0x01
     9ec:	01 97       	sbiw	r24, 0x01	; 1
     9ee:	91 83       	std	Z+1, r25	; 0x01
     9f0:	80 83       	st	Z, r24
     9f2:	34 96       	adiw	r30, 0x04	; 4
     9f4:	80 81       	ld	r24, Z
     9f6:	91 81       	ldd	r25, Z+1	; 0x01
     9f8:	89 2b       	or	r24, r25
     9fa:	21 f4       	brne	.+8      	; 0xa04 <_Z7OS_Initv+0x20a>
     9fc:	88 e0       	ldi	r24, 0x08	; 8
     9fe:	80 93 00 02 	sts	0x0200, r24
     a02:	da dd       	rcall	.-1100   	; 0x5b8 <OS_Abort>
     a04:	80 91 2e 02 	lds	r24, 0x022E
     a08:	90 91 2f 02 	lds	r25, 0x022F
     a0c:	00 97       	sbiw	r24, 0x00	; 0
     a0e:	69 f0       	breq	.+26     	; 0xa2a <_Z7OS_Initv+0x230>
     a10:	fc 01       	movw	r30, r24
     a12:	ee 5f       	subi	r30, 0xFE	; 254
     a14:	fe 4f       	sbci	r31, 0xFE	; 254
     a16:	20 81       	ld	r18, Z
     a18:	31 81       	ldd	r19, Z+1	; 0x01
     a1a:	21 50       	subi	r18, 0x01	; 1
     a1c:	31 09       	sbc	r19, r1
     a1e:	31 83       	std	Z+1, r19	; 0x01
     a20:	20 83       	st	Z, r18
     a22:	3e 96       	adiw	r30, 0x0e	; 14
     a24:	80 81       	ld	r24, Z
     a26:	91 81       	ldd	r25, Z+1	; 0x01
     a28:	f1 cf       	rjmp	.-30     	; 0xa0c <_Z7OS_Initv+0x212>
     a2a:	41 30       	cpi	r20, 0x01	; 1
     a2c:	09 f0       	breq	.+2      	; 0xa30 <_Z7OS_Initv+0x236>
     a2e:	a4 c0       	rjmp	.+328    	; 0xb78 <_Z7OS_Initv+0x37e>
     a30:	f6 01       	movw	r30, r12
     a32:	e4 5f       	subi	r30, 0xF4	; 244
     a34:	fe 4f       	sbci	r31, 0xFE	; 254
     a36:	80 81       	ld	r24, Z
     a38:	81 30       	cpi	r24, 0x01	; 1
     a3a:	09 f0       	breq	.+2      	; 0xa3e <_Z7OS_Initv+0x244>
     a3c:	9d c0       	rjmp	.+314    	; 0xb78 <_Z7OS_Initv+0x37e>
     a3e:	f0 82       	st	Z, r15
     a40:	b6 01       	movw	r22, r12
     a42:	a7 c0       	rjmp	.+334    	; 0xb92 <_Z7OS_Initv+0x398>
     a44:	29 83       	std	Y+1, r18	; 0x01
     a46:	13 de       	rcall	.-986    	; 0x66e <_ZL18kernel_create_taskv>
     a48:	90 93 3b 02 	sts	0x023B, r25
     a4c:	80 93 3a 02 	sts	0x023A, r24
     a50:	80 91 3a 02 	lds	r24, 0x023A
     a54:	90 91 3b 02 	lds	r25, 0x023B
     a58:	29 81       	ldd	r18, Y+1	; 0x01
     a5a:	89 2b       	or	r24, r25
     a5c:	89 f0       	breq	.+34     	; 0xa80 <_Z7OS_Initv+0x286>
     a5e:	60 91 02 0c 	lds	r22, 0x0C02
     a62:	70 91 03 0c 	lds	r23, 0x0C03
     a66:	fb 01       	movw	r30, r22
     a68:	e1 5f       	subi	r30, 0xF1	; 241
     a6a:	fe 4f       	sbci	r31, 0xFE	; 254
     a6c:	80 81       	ld	r24, Z
     a6e:	83 30       	cpi	r24, 0x03	; 3
     a70:	09 f4       	brne	.+2      	; 0xa74 <_Z7OS_Initv+0x27a>
     a72:	82 c0       	rjmp	.+260    	; 0xb78 <_Z7OS_Initv+0x37e>
     a74:	90 91 40 02 	lds	r25, 0x0240
     a78:	93 30       	cpi	r25, 0x03	; 3
     a7a:	09 f0       	breq	.+2      	; 0xa7e <_Z7OS_Initv+0x284>
     a7c:	80 c0       	rjmp	.+256    	; 0xb7e <_Z7OS_Initv+0x384>
     a7e:	76 c0       	rjmp	.+236    	; 0xb6c <_Z7OS_Initv+0x372>
     a80:	87 e0       	ldi	r24, 0x07	; 7
     a82:	bd cf       	rjmp	.-134    	; 0x9fe <_Z7OS_Initv+0x204>
     a84:	fc ee       	ldi	r31, 0xEC	; 236
     a86:	cf 16       	cp	r12, r31
     a88:	fa e0       	ldi	r31, 0x0A	; 10
     a8a:	df 06       	cpc	r13, r31
     a8c:	09 f4       	brne	.+2      	; 0xa90 <_Z7OS_Initv+0x296>
     a8e:	74 c0       	rjmp	.+232    	; 0xb78 <_Z7OS_Initv+0x37e>
     a90:	f6 01       	movw	r30, r12
     a92:	e4 5f       	subi	r30, 0xF4	; 244
     a94:	fe 4f       	sbci	r31, 0xFE	; 254
     a96:	10 82       	st	Z, r1
     a98:	33 96       	adiw	r30, 0x03	; 3
     a9a:	80 81       	ld	r24, Z
     a9c:	82 30       	cpi	r24, 0x02	; 2
     a9e:	09 f0       	breq	.+2      	; 0xaa2 <_Z7OS_Initv+0x2a8>
     aa0:	4a c0       	rjmp	.+148    	; 0xb36 <_Z7OS_Initv+0x33c>
     aa2:	20 91 2e 02 	lds	r18, 0x022E
     aa6:	30 91 2f 02 	lds	r19, 0x022F
     aaa:	2c 15       	cp	r18, r12
     aac:	3d 05       	cpc	r19, r13
     aae:	69 f4       	brne	.+26     	; 0xaca <_Z7OS_Initv+0x2d0>
     ab0:	31 96       	adiw	r30, 0x01	; 1
     ab2:	80 81       	ld	r24, Z
     ab4:	91 81       	ldd	r25, Z+1	; 0x01
     ab6:	00 97       	sbiw	r24, 0x00	; 0
     ab8:	41 f0       	breq	.+16     	; 0xaca <_Z7OS_Initv+0x2d0>
     aba:	90 93 2f 02 	sts	0x022F, r25
     abe:	80 93 2e 02 	sts	0x022E, r24
     ac2:	fc 01       	movw	r30, r24
     ac4:	ee 5e       	subi	r30, 0xEE	; 238
     ac6:	fe 4f       	sbci	r31, 0xFE	; 254
     ac8:	15 c0       	rjmp	.+42     	; 0xaf4 <_Z7OS_Initv+0x2fa>
     aca:	80 91 30 02 	lds	r24, 0x0230
     ace:	90 91 31 02 	lds	r25, 0x0231
     ad2:	f6 01       	movw	r30, r12
     ad4:	ee 5e       	subi	r30, 0xEE	; 238
     ad6:	fe 4f       	sbci	r31, 0xFE	; 254
     ad8:	8c 15       	cp	r24, r12
     ada:	9d 05       	cpc	r25, r13
     adc:	d1 f4       	brne	.+52     	; 0xb12 <_Z7OS_Initv+0x318>
     ade:	80 81       	ld	r24, Z
     ae0:	91 81       	ldd	r25, Z+1	; 0x01
     ae2:	00 97       	sbiw	r24, 0x00	; 0
     ae4:	51 f0       	breq	.+20     	; 0xafa <_Z7OS_Initv+0x300>
     ae6:	90 93 31 02 	sts	0x0231, r25
     aea:	80 93 30 02 	sts	0x0230, r24
     aee:	fc 01       	movw	r30, r24
     af0:	e0 5f       	subi	r30, 0xF0	; 240
     af2:	fe 4f       	sbci	r31, 0xFE	; 254
     af4:	11 82       	std	Z+1, r1	; 0x01
     af6:	10 82       	st	Z, r1
     af8:	1e c0       	rjmp	.+60     	; 0xb36 <_Z7OS_Initv+0x33c>
     afa:	2c 15       	cp	r18, r12
     afc:	3d 05       	cpc	r19, r13
     afe:	49 f4       	brne	.+18     	; 0xb12 <_Z7OS_Initv+0x318>
     b00:	10 92 31 02 	sts	0x0231, r1
     b04:	10 92 30 02 	sts	0x0230, r1
     b08:	10 92 2f 02 	sts	0x022F, r1
     b0c:	10 92 2e 02 	sts	0x022E, r1
     b10:	12 c0       	rjmp	.+36     	; 0xb36 <_Z7OS_Initv+0x33c>
     b12:	80 81       	ld	r24, Z
     b14:	91 81       	ldd	r25, Z+1	; 0x01
     b16:	fc 01       	movw	r30, r24
     b18:	e0 5f       	subi	r30, 0xF0	; 240
     b1a:	fe 4f       	sbci	r31, 0xFE	; 254
     b1c:	a0 81       	ld	r26, Z
     b1e:	b1 81       	ldd	r27, Z+1	; 0x01
     b20:	a0 5f       	subi	r26, 0xF0	; 240
     b22:	be 4f       	sbci	r27, 0xFE	; 254
     b24:	2d 91       	ld	r18, X+
     b26:	3c 91       	ld	r19, X
     b28:	31 83       	std	Z+1, r19	; 0x01
     b2a:	20 83       	st	Z, r18
     b2c:	f9 01       	movw	r30, r18
     b2e:	ee 5e       	subi	r30, 0xEE	; 238
     b30:	fe 4f       	sbci	r31, 0xFE	; 254
     b32:	91 83       	std	Z+1, r25	; 0x01
     b34:	80 83       	st	Z, r24
     b36:	b6 01       	movw	r22, r12
     b38:	86 e3       	ldi	r24, 0x36	; 54
     b3a:	92 e0       	ldi	r25, 0x02	; 2
     b3c:	2c c0       	rjmp	.+88     	; 0xb96 <_Z7OS_Initv+0x39c>
     b3e:	f6 01       	movw	r30, r12
     b40:	e1 5f       	subi	r30, 0xF1	; 241
     b42:	fe 4f       	sbci	r31, 0xFE	; 254
     b44:	80 81       	ld	r24, Z
     b46:	81 30       	cpi	r24, 0x01	; 1
     b48:	31 f0       	breq	.+12     	; 0xb56 <_Z7OS_Initv+0x35c>
     b4a:	83 30       	cpi	r24, 0x03	; 3
     b4c:	41 f4       	brne	.+16     	; 0xb5e <_Z7OS_Initv+0x364>
     b4e:	b6 01       	movw	r22, r12
     b50:	8a e2       	ldi	r24, 0x2A	; 42
     b52:	92 e0       	ldi	r25, 0x02	; 2
     b54:	03 c0       	rjmp	.+6      	; 0xb5c <_Z7OS_Initv+0x362>
     b56:	b6 01       	movw	r22, r12
     b58:	82 e3       	ldi	r24, 0x32	; 50
     b5a:	92 e0       	ldi	r25, 0x02	; 2
     b5c:	92 dc       	rcall	.-1756   	; 0x482 <_ZL7enqueueP7queue_tP9td_struct>
     b5e:	f6 01       	movw	r30, r12
     b60:	e4 5f       	subi	r30, 0xF4	; 244
     b62:	fe 4f       	sbci	r31, 0xFE	; 254
     b64:	f0 82       	st	Z, r15
     b66:	08 c0       	rjmp	.+16     	; 0xb78 <_Z7OS_Initv+0x37e>
     b68:	8f ef       	ldi	r24, 0xFF	; 255
     b6a:	49 cf       	rjmp	.-366    	; 0x9fe <_Z7OS_Initv+0x204>
     b6c:	fb 01       	movw	r30, r22
     b6e:	e4 5f       	subi	r30, 0xF4	; 244
     b70:	fe 4f       	sbci	r31, 0xFE	; 254
     b72:	20 83       	st	Z, r18
     b74:	81 30       	cpi	r24, 0x01	; 1
     b76:	69 f0       	breq	.+26     	; 0xb92 <_Z7OS_Initv+0x398>
     b78:	10 92 4b 02 	sts	0x024B, r1
     b7c:	9d ce       	rjmp	.-710    	; 0x8b8 <_Z7OS_Initv+0xbe>
     b7e:	81 30       	cpi	r24, 0x01	; 1
     b80:	d9 f7       	brne	.-10     	; 0xb78 <_Z7OS_Initv+0x37e>
     b82:	80 91 40 02 	lds	r24, 0x0240
     b86:	82 30       	cpi	r24, 0x02	; 2
     b88:	b9 f7       	brne	.-18     	; 0xb78 <_Z7OS_Initv+0x37e>
     b8a:	fb 01       	movw	r30, r22
     b8c:	e4 5f       	subi	r30, 0xF4	; 244
     b8e:	fe 4f       	sbci	r31, 0xFE	; 254
     b90:	80 83       	st	Z, r24
     b92:	82 e3       	ldi	r24, 0x32	; 50
     b94:	92 e0       	ldi	r25, 0x02	; 2
     b96:	75 dc       	rcall	.-1814   	; 0x482 <_ZL7enqueueP7queue_tP9td_struct>
     b98:	ef cf       	rjmp	.-34     	; 0xb78 <_Z7OS_Initv+0x37e>

00000b9a <Task_Create_Periodic>:
     b9a:	0f 93       	push	r16
     b9c:	1f 93       	push	r17
     b9e:	cf 93       	push	r28
     ba0:	cf b7       	in	r28, 0x3f	; 63
     ba2:	f8 94       	cli
     ba4:	90 93 3d 02 	sts	0x023D, r25
     ba8:	80 93 3c 02 	sts	0x023C, r24
     bac:	70 93 3f 02 	sts	0x023F, r23
     bb0:	60 93 3e 02 	sts	0x023E, r22
     bb4:	82 e0       	ldi	r24, 0x02	; 2
     bb6:	80 93 40 02 	sts	0x0240, r24
     bba:	50 93 46 02 	sts	0x0246, r21
     bbe:	40 93 45 02 	sts	0x0245, r20
     bc2:	30 93 48 02 	sts	0x0248, r19
     bc6:	20 93 47 02 	sts	0x0247, r18
     bca:	10 93 4a 02 	sts	0x024A, r17
     bce:	00 93 49 02 	sts	0x0249, r16
     bd2:	10 93 42 02 	sts	0x0242, r17
     bd6:	00 93 41 02 	sts	0x0241, r16
     bda:	30 93 44 02 	sts	0x0244, r19
     bde:	20 93 43 02 	sts	0x0243, r18
     be2:	80 93 4b 02 	sts	0x024B, r24
     be6:	f4 db       	rcall	.-2072   	; 0x3d0 <_ZL12enter_kernelv>
     be8:	80 91 3a 02 	lds	r24, 0x023A
     bec:	90 91 3b 02 	lds	r25, 0x023B
     bf0:	cf bf       	out	0x3f, r28	; 63
     bf2:	cf 91       	pop	r28
     bf4:	1f 91       	pop	r17
     bf6:	0f 91       	pop	r16
     bf8:	08 95       	ret

00000bfa <Task_Next>:
     bfa:	cf 93       	push	r28
     bfc:	df 93       	push	r29
     bfe:	1f 92       	push	r1
     c00:	cd b7       	in	r28, 0x3d	; 61
     c02:	de b7       	in	r29, 0x3e	; 62
     c04:	8f b7       	in	r24, 0x3f	; 63
     c06:	89 83       	std	Y+1, r24	; 0x01
     c08:	f8 94       	cli
     c0a:	84 e0       	ldi	r24, 0x04	; 4
     c0c:	80 93 4b 02 	sts	0x024B, r24
     c10:	df db       	rcall	.-2114   	; 0x3d0 <_ZL12enter_kernelv>
     c12:	89 81       	ldd	r24, Y+1	; 0x01
     c14:	8f bf       	out	0x3f, r24	; 63
     c16:	0f 90       	pop	r0
     c18:	df 91       	pop	r29
     c1a:	cf 91       	pop	r28
     c1c:	08 95       	ret

00000c1e <main>:
int main()
{
    //DDRB = (_BV(PB5));
	//PORTB &= ~_BV(PB5);

	OS_Init();
     c1e:	ed dd       	rcall	.-1062   	; 0x7fa <_Z7OS_Initv>

00000c20 <_Z15send_IR_Commandv>:
}

void Send_Drive_Command(){
	for(;;) {
		Roomba_Drive(240,0);
		Task_Next();
     c20:	81 e4       	ldi	r24, 0x41	; 65
     c22:	5a db       	rcall	.-2380   	; 0x2d8 <_Z11IR_transmith>
     c24:	ea df       	rcall	.-44     	; 0xbfa <Task_Next>
     c26:	fc cf       	rjmp	.-8      	; 0xc20 <_Z15send_IR_Commandv>

00000c28 <_Z15radio_rxhandlerh>:
     c28:	08 95       	ret

00000c2a <_Z12ir_rxhandlerv>:
     c2a:	75 db       	rcall	.-2326   	; 0x316 <_Z10IR_getLastv>
     c2c:	81 34       	cpi	r24, 0x41	; 65
     c2e:	11 f4       	brne	.+4      	; 0xc34 <_Z12ir_rxhandlerv+0xa>
     c30:	88 e0       	ldi	r24, 0x08	; 8
     c32:	03 c0       	rjmp	.+6      	; 0xc3a <_Z12ir_rxhandlerv+0x10>
     c34:	82 34       	cpi	r24, 0x42	; 66
     c36:	19 f4       	brne	.+6      	; 0xc3e <_Z12ir_rxhandlerv+0x14>
     c38:	80 e1       	ldi	r24, 0x10	; 16
     c3a:	80 93 02 01 	sts	0x0102, r24
     c3e:	08 95       	ret

00000c40 <setup>:
     c40:	88 e1       	ldi	r24, 0x18	; 24
     c42:	80 93 01 01 	sts	0x0101, r24
     c46:	81 d1       	rcall	.+770    	; 0xf4a <_Z11Roomba_Initv>
     c48:	6d ca       	rjmp	.-2854   	; 0x124 <_Z7IR_initv>

00000c4a <_Z6r_mainv>:
		Task_Next();
	}
}

int r_main(void)
{
     c4a:	0f 93       	push	r16
     c4c:	1f 93       	push	r17
	
	setup();
     c4e:	f8 df       	rcall	.-16     	; 0xc40 <setup>
	Task_Create_Periodic(send_IR_Command,0,10,4,5);
     c50:	05 e0       	ldi	r16, 0x05	; 5
     c52:	10 e0       	ldi	r17, 0x00	; 0
     c54:	24 e0       	ldi	r18, 0x04	; 4
     c56:	30 e0       	ldi	r19, 0x00	; 0
     c58:	4a e0       	ldi	r20, 0x0A	; 10
     c5a:	50 e0       	ldi	r21, 0x00	; 0
     c5c:	60 e0       	ldi	r22, 0x00	; 0
     c5e:	70 e0       	ldi	r23, 0x00	; 0
     c60:	80 e1       	ldi	r24, 0x10	; 16
     c62:	96 e0       	ldi	r25, 0x06	; 6
     c64:	9a df       	rcall	.-204    	; 0xb9a <Task_Create_Periodic>
	
	return 1;
}
     c66:	81 e0       	ldi	r24, 0x01	; 1
     c68:	90 e0       	ldi	r25, 0x00	; 0
     c6a:	1f 91       	pop	r17
     c6c:	0f 91       	pop	r16
     c6e:	08 95       	ret

00000c70 <_ZL10get_statusv>:
}

void Radio_Flush()
{
	send_instruction(FLUSH_TX, NULL, NULL, 0);
	send_instruction(FLUSH_RX, NULL, NULL, 0);
     c70:	cf 93       	push	r28
     c72:	df 93       	push	r29
     c74:	c2 e0       	ldi	r28, 0x02	; 2
     c76:	d1 e0       	ldi	r29, 0x01	; 1
     c78:	88 81       	ld	r24, Y
     c7a:	8f 7b       	andi	r24, 0xBF	; 191
     c7c:	88 83       	st	Y, r24
     c7e:	8f ef       	ldi	r24, 0xFF	; 255
     c80:	5e d1       	rcall	.+700    	; 0xf3e <_Z14SPI_Write_Byteh>
     c82:	98 81       	ld	r25, Y
     c84:	90 64       	ori	r25, 0x40	; 64
     c86:	98 83       	st	Y, r25
     c88:	df 91       	pop	r29
     c8a:	cf 91       	pop	r28
     c8c:	08 95       	ret

00000c8e <_ZL12set_registerhPhh>:
     c8e:	cf 92       	push	r12
     c90:	df 92       	push	r13
     c92:	ff 92       	push	r15
     c94:	0f 93       	push	r16
     c96:	1f 93       	push	r17
     c98:	cf 93       	push	r28
     c9a:	df 93       	push	r29
     c9c:	1f 92       	push	r1
     c9e:	cd b7       	in	r28, 0x3d	; 61
     ca0:	de b7       	in	r29, 0x3e	; 62
     ca2:	8b 01       	movw	r16, r22
     ca4:	92 e0       	ldi	r25, 0x02	; 2
     ca6:	c9 2e       	mov	r12, r25
     ca8:	dd 24       	eor	r13, r13
     caa:	d3 94       	inc	r13
     cac:	f6 01       	movw	r30, r12
     cae:	90 81       	ld	r25, Z
     cb0:	9f 7b       	andi	r25, 0xBF	; 191
     cb2:	90 83       	st	Z, r25
     cb4:	8f 71       	andi	r24, 0x1F	; 31
     cb6:	80 62       	ori	r24, 0x20	; 32
     cb8:	49 83       	std	Y+1, r20	; 0x01
     cba:	41 d1       	rcall	.+642    	; 0xf3e <_Z14SPI_Write_Byteh>
     cbc:	f8 2e       	mov	r15, r24
     cbe:	49 81       	ldd	r20, Y+1	; 0x01
     cc0:	64 2f       	mov	r22, r20
     cc2:	c8 01       	movw	r24, r16
     cc4:	2f d1       	rcall	.+606    	; 0xf24 <_Z15SPI_Write_BlockPhh>
     cc6:	f6 01       	movw	r30, r12
     cc8:	90 81       	ld	r25, Z
     cca:	90 64       	ori	r25, 0x40	; 64
     ccc:	90 83       	st	Z, r25
     cce:	8f 2d       	mov	r24, r15
     cd0:	0f 90       	pop	r0
     cd2:	df 91       	pop	r29
     cd4:	cf 91       	pop	r28
     cd6:	1f 91       	pop	r17
     cd8:	0f 91       	pop	r16
     cda:	ff 90       	pop	r15
     cdc:	df 90       	pop	r13
     cde:	cf 90       	pop	r12
     ce0:	08 95       	ret

00000ce2 <_ZL16send_instructionhPhS_h>:
     ce2:	ef 92       	push	r14
     ce4:	ff 92       	push	r15
     ce6:	0f 93       	push	r16
     ce8:	1f 93       	push	r17
     cea:	cf 93       	push	r28
     cec:	df 93       	push	r29
     cee:	1f 92       	push	r1
     cf0:	cd b7       	in	r28, 0x3d	; 61
     cf2:	de b7       	in	r29, 0x3e	; 62
     cf4:	7b 01       	movw	r14, r22
     cf6:	8a 01       	movw	r16, r20
     cf8:	90 91 02 01 	lds	r25, 0x0102
     cfc:	9f 7b       	andi	r25, 0xBF	; 191
     cfe:	90 93 02 01 	sts	0x0102, r25
     d02:	29 83       	std	Y+1, r18	; 0x01
     d04:	1c d1       	rcall	.+568    	; 0xf3e <_Z14SPI_Write_Byteh>
     d06:	29 81       	ldd	r18, Y+1	; 0x01
     d08:	22 23       	and	r18, r18
     d0a:	59 f0       	breq	.+22     	; 0xd22 <_ZL16send_instructionhPhS_h+0x40>
     d0c:	01 15       	cp	r16, r1
     d0e:	11 05       	cpc	r17, r1
     d10:	21 f4       	brne	.+8      	; 0xd1a <_ZL16send_instructionhPhS_h+0x38>
     d12:	62 2f       	mov	r22, r18
     d14:	c7 01       	movw	r24, r14
     d16:	06 d1       	rcall	.+524    	; 0xf24 <_Z15SPI_Write_BlockPhh>
     d18:	04 c0       	rjmp	.+8      	; 0xd22 <_ZL16send_instructionhPhS_h+0x40>
     d1a:	42 2f       	mov	r20, r18
     d1c:	b8 01       	movw	r22, r16
     d1e:	c7 01       	movw	r24, r14
     d20:	f0 d0       	rcall	.+480    	; 0xf02 <_Z19SPI_ReadWrite_BlockPhS_h>
     d22:	80 91 02 01 	lds	r24, 0x0102
     d26:	80 64       	ori	r24, 0x40	; 64
     d28:	80 93 02 01 	sts	0x0102, r24
     d2c:	0f 90       	pop	r0
     d2e:	df 91       	pop	r29
     d30:	cf 91       	pop	r28
     d32:	1f 91       	pop	r17
     d34:	0f 91       	pop	r16
     d36:	ff 90       	pop	r15
     d38:	ef 90       	pop	r14
     d3a:	08 95       	ret

00000d3c <_ZL19reset_pipe0_addressv>:
     d3c:	80 91 09 02 	lds	r24, 0x0209
     d40:	88 23       	and	r24, r24
     d42:	29 f0       	breq	.+10     	; 0xd4e <_ZL19reset_pipe0_addressv+0x12>
     d44:	45 e0       	ldi	r20, 0x05	; 5
     d46:	64 e0       	ldi	r22, 0x04	; 4
     d48:	72 e0       	ldi	r23, 0x02	; 2
     d4a:	8a e0       	ldi	r24, 0x0A	; 10
     d4c:	a0 cf       	rjmp	.-192    	; 0xc8e <_ZL12set_registerhPhh>
     d4e:	08 95       	ret

00000d50 <_ZL12get_registerhPhh.constprop.1>:
     d50:	ef 92       	push	r14
     d52:	ff 92       	push	r15
     d54:	1f 93       	push	r17
     d56:	cf 93       	push	r28
     d58:	df 93       	push	r29
     d5a:	1f 92       	push	r1
     d5c:	1f 92       	push	r1
     d5e:	cd b7       	in	r28, 0x3d	; 61
     d60:	de b7       	in	r29, 0x3e	; 62
     d62:	9f ef       	ldi	r25, 0xFF	; 255
     d64:	fb 01       	movw	r30, r22
     d66:	90 83       	st	Z, r25
     d68:	22 e0       	ldi	r18, 0x02	; 2
     d6a:	e2 2e       	mov	r14, r18
     d6c:	ff 24       	eor	r15, r15
     d6e:	f3 94       	inc	r15
     d70:	f7 01       	movw	r30, r14
     d72:	90 81       	ld	r25, Z
     d74:	9f 7b       	andi	r25, 0xBF	; 191
     d76:	90 83       	st	Z, r25
     d78:	8f 71       	andi	r24, 0x1F	; 31
     d7a:	69 83       	std	Y+1, r22	; 0x01
     d7c:	7a 83       	std	Y+2, r23	; 0x02
     d7e:	df d0       	rcall	.+446    	; 0xf3e <_Z14SPI_Write_Byteh>
     d80:	18 2f       	mov	r17, r24
     d82:	41 e0       	ldi	r20, 0x01	; 1
     d84:	69 81       	ldd	r22, Y+1	; 0x01
     d86:	7a 81       	ldd	r23, Y+2	; 0x02
     d88:	80 e0       	ldi	r24, 0x00	; 0
     d8a:	90 e0       	ldi	r25, 0x00	; 0
     d8c:	ba d0       	rcall	.+372    	; 0xf02 <_Z19SPI_ReadWrite_BlockPhS_h>
     d8e:	f7 01       	movw	r30, r14
     d90:	90 81       	ld	r25, Z
     d92:	90 64       	ori	r25, 0x40	; 64
     d94:	90 83       	st	Z, r25
     d96:	81 2f       	mov	r24, r17
     d98:	0f 90       	pop	r0
     d9a:	0f 90       	pop	r0
     d9c:	df 91       	pop	r29
     d9e:	cf 91       	pop	r28
     da0:	1f 91       	pop	r17
     da2:	ff 90       	pop	r15
     da4:	ef 90       	pop	r14
     da6:	08 95       	ret

00000da8 <_ZL11set_rx_modev>:
     da8:	cf 93       	push	r28
     daa:	df 93       	push	r29
     dac:	1f 92       	push	r1
     dae:	cd b7       	in	r28, 0x3d	; 61
     db0:	de b7       	in	r29, 0x3e	; 62
     db2:	be 01       	movw	r22, r28
     db4:	6f 5f       	subi	r22, 0xFF	; 255
     db6:	7f 4f       	sbci	r23, 0xFF	; 255
     db8:	80 e0       	ldi	r24, 0x00	; 0
     dba:	ca df       	rcall	.-108    	; 0xd50 <_ZL12get_registerhPhh.constprop.1>
     dbc:	89 81       	ldd	r24, Y+1	; 0x01
     dbe:	80 fd       	sbrc	r24, 0
     dc0:	14 c0       	rjmp	.+40     	; 0xdea <_ZL11set_rx_modev+0x42>
     dc2:	81 60       	ori	r24, 0x01	; 1
     dc4:	89 83       	std	Y+1, r24	; 0x01
     dc6:	41 e0       	ldi	r20, 0x01	; 1
     dc8:	be 01       	movw	r22, r28
     dca:	6f 5f       	subi	r22, 0xFF	; 255
     dcc:	7f 4f       	sbci	r23, 0xFF	; 255
     dce:	80 e0       	ldi	r24, 0x00	; 0
     dd0:	5e df       	rcall	.-324    	; 0xc8e <_ZL12set_registerhPhh>
     dd2:	83 e0       	ldi	r24, 0x03	; 3
     dd4:	91 e0       	ldi	r25, 0x01	; 1
     dd6:	01 97       	sbiw	r24, 0x01	; 1
     dd8:	f1 f7       	brne	.-4      	; 0xdd6 <_ZL11set_rx_modev+0x2e>
     dda:	00 c0       	rjmp	.+0      	; 0xddc <_ZL11set_rx_modev+0x34>
     ddc:	00 00       	nop
     dde:	83 e0       	ldi	r24, 0x03	; 3
     de0:	91 e0       	ldi	r25, 0x01	; 1
     de2:	01 97       	sbiw	r24, 0x01	; 1
     de4:	f1 f7       	brne	.-4      	; 0xde2 <_ZL11set_rx_modev+0x3a>
     de6:	00 c0       	rjmp	.+0      	; 0xde8 <_ZL11set_rx_modev+0x40>
     de8:	00 00       	nop
     dea:	0f 90       	pop	r0
     dec:	df 91       	pop	r29
     dee:	cf 91       	pop	r28
     df0:	08 95       	ret

00000df2 <__vector_5>:
}


// Interrupt handler
ISR(INT4_vect)
{
     df2:	1f 92       	push	r1
     df4:	0f 92       	push	r0
     df6:	0f b6       	in	r0, 0x3f	; 63
     df8:	0f 92       	push	r0
     dfa:	11 24       	eor	r1, r1
     dfc:	0b b6       	in	r0, 0x3b	; 59
     dfe:	0f 92       	push	r0
     e00:	2f 93       	push	r18
     e02:	3f 93       	push	r19
     e04:	4f 93       	push	r20
     e06:	5f 93       	push	r21
     e08:	6f 93       	push	r22
     e0a:	7f 93       	push	r23
     e0c:	8f 93       	push	r24
     e0e:	9f 93       	push	r25
     e10:	af 93       	push	r26
     e12:	bf 93       	push	r27
     e14:	ef 93       	push	r30
     e16:	ff 93       	push	r31
     e18:	cf 93       	push	r28
     e1a:	df 93       	push	r29
     e1c:	1f 92       	push	r1
     e1e:	cd b7       	in	r28, 0x3d	; 61
     e20:	de b7       	in	r29, 0x3e	; 62
    uint8_t status;
    uint8_t pipe_number;

	DEBUG_2_LOW;
     e22:	80 91 02 01 	lds	r24, 0x0102
     e26:	8f 7e       	andi	r24, 0xEF	; 239
     e28:	80 93 02 01 	sts	0x0102, r24
    CE_LOW();
     e2c:	80 91 02 01 	lds	r24, 0x0102
     e30:	8f 7d       	andi	r24, 0xDF	; 223
     e32:	80 93 02 01 	sts	0x0102, r24

    status = get_status();
     e36:	1c df       	rcall	.-456    	; 0xc70 <_ZL10get_statusv>
     e38:	89 83       	std	Y+1, r24	; 0x01

    if (status & _BV(RX_DR))
     e3a:	86 ff       	sbrs	r24, 6
     e3c:	03 c0       	rjmp	.+6      	; 0xe44 <__vector_5+0x52>
    {
    	pipe_number =  (status & 0xE) >> 1;
     e3e:	8e 70       	andi	r24, 0x0E	; 14
    	radio_rxhandler(pipe_number);
     e40:	86 95       	lsr	r24
     e42:	f2 de       	rcall	.-540    	; 0xc28 <_Z15radio_rxhandlerh>
    }
    // We can get the TX_DS or the MAX_RT interrupt, but not both.
    if (status & _BV(TX_DS))
     e44:	89 81       	ldd	r24, Y+1	; 0x01
     e46:	85 ff       	sbrs	r24, 5
     e48:	1b c0       	rjmp	.+54     	; 0xe80 <__vector_5+0x8e>
    {
        // if there's nothing left to transmit, switch back to receive mode.
        transmit_lock = 0;
     e4a:	10 92 04 0c 	sts	0x0C04, r1
        reset_pipe0_address();
     e4e:	76 df       	rcall	.-276    	; 0xd3c <_ZL19reset_pipe0_addressv>
        set_rx_mode();
     e50:	ab df       	rcall	.-170    	; 0xda8 <_ZL11set_rx_modev>

    	// indicate in the history that a packet was transmitted successfully by appending a 1.
    	tx_history <<= 1;
     e52:	80 91 02 02 	lds	r24, 0x0202
     e56:	90 91 03 02 	lds	r25, 0x0203
     e5a:	88 0f       	add	r24, r24
     e5c:	99 1f       	adc	r25, r25
     e5e:	90 93 03 02 	sts	0x0203, r25
     e62:	80 93 02 02 	sts	0x0202, r24
    	tx_history |= 1;
     e66:	80 91 02 02 	lds	r24, 0x0202
     e6a:	90 91 03 02 	lds	r25, 0x0203
     e6e:	81 60       	ori	r24, 0x01	; 1
     e70:	90 93 03 02 	sts	0x0203, r25
     e74:	80 93 02 02 	sts	0x0202, r24

    	tx_last_status = RADIO_TX_SUCCESS;
     e78:	81 e0       	ldi	r24, 0x01	; 1
     e7a:	80 93 01 02 	sts	0x0201, r24
     e7e:	19 c0       	rjmp	.+50     	; 0xeb2 <__vector_5+0xc0>
    }
    else if (status & _BV(MAX_RT))
     e80:	84 ff       	sbrs	r24, 4
     e82:	17 c0       	rjmp	.+46     	; 0xeb2 <__vector_5+0xc0>
    {
        send_instruction(FLUSH_TX, NULL, NULL, 0);
     e84:	20 e0       	ldi	r18, 0x00	; 0
     e86:	40 e0       	ldi	r20, 0x00	; 0
     e88:	50 e0       	ldi	r21, 0x00	; 0
     e8a:	60 e0       	ldi	r22, 0x00	; 0
     e8c:	70 e0       	ldi	r23, 0x00	; 0
     e8e:	81 ee       	ldi	r24, 0xE1	; 225
     e90:	28 df       	rcall	.-432    	; 0xce2 <_ZL16send_instructionhPhS_h>

    	transmit_lock = 0;
     e92:	10 92 04 0c 	sts	0x0C04, r1
    	reset_pipe0_address();
     e96:	52 df       	rcall	.-348    	; 0xd3c <_ZL19reset_pipe0_addressv>
		set_rx_mode();
     e98:	87 df       	rcall	.-242    	; 0xda8 <_ZL11set_rx_modev>
    	// indicate in the history that a packet was dropped by appending a 0.
    	tx_history <<= 1;
     e9a:	80 91 02 02 	lds	r24, 0x0202
     e9e:	90 91 03 02 	lds	r25, 0x0203
     ea2:	88 0f       	add	r24, r24
     ea4:	99 1f       	adc	r25, r25
     ea6:	90 93 03 02 	sts	0x0203, r25
     eaa:	80 93 02 02 	sts	0x0202, r24

    	tx_last_status = RADIO_TX_MAX_RT;
     eae:	10 92 01 02 	sts	0x0201, r1
    }
	
    // clear the interrupt flags.
	status = _BV(RX_DR) | _BV(TX_DS) | _BV(MAX_RT);
     eb2:	80 e7       	ldi	r24, 0x70	; 112
     eb4:	89 83       	std	Y+1, r24	; 0x01
	set_register(STATUS, &status, 1);
     eb6:	41 e0       	ldi	r20, 0x01	; 1
     eb8:	be 01       	movw	r22, r28
     eba:	6f 5f       	subi	r22, 0xFF	; 255
     ebc:	7f 4f       	sbci	r23, 0xFF	; 255
     ebe:	87 e0       	ldi	r24, 0x07	; 7
     ec0:	e6 de       	rcall	.-564    	; 0xc8e <_ZL12set_registerhPhh>
	DEBUG_2_HIGH;
     ec2:	80 91 02 01 	lds	r24, 0x0102
     ec6:	80 61       	ori	r24, 0x10	; 16
     ec8:	80 93 02 01 	sts	0x0102, r24
	
    CE_HIGH();
     ecc:	80 91 02 01 	lds	r24, 0x0102
     ed0:	80 62       	ori	r24, 0x20	; 32
     ed2:	80 93 02 01 	sts	0x0102, r24
}
     ed6:	0f 90       	pop	r0
     ed8:	df 91       	pop	r29
     eda:	cf 91       	pop	r28
     edc:	ff 91       	pop	r31
     ede:	ef 91       	pop	r30
     ee0:	bf 91       	pop	r27
     ee2:	af 91       	pop	r26
     ee4:	9f 91       	pop	r25
     ee6:	8f 91       	pop	r24
     ee8:	7f 91       	pop	r23
     eea:	6f 91       	pop	r22
     eec:	5f 91       	pop	r21
     eee:	4f 91       	pop	r20
     ef0:	3f 91       	pop	r19
     ef2:	2f 91       	pop	r18
     ef4:	0f 90       	pop	r0
     ef6:	0b be       	out	0x3b, r0	; 59
     ef8:	0f 90       	pop	r0
     efa:	0f be       	out	0x3f, r0	; 63
     efc:	0f 90       	pop	r0
     efe:	1f 90       	pop	r1
     f00:	18 95       	reti

00000f02 <_Z19SPI_ReadWrite_BlockPhS_h>:

	SPI_PORT &= ~_BV(SPI_SS);
}

void SPI_ReadWrite_Block(uint8_t* data, uint8_t* buffer, uint8_t len)
{
     f02:	26 2f       	mov	r18, r22
    uint8_t i;
    for (i = 0; i < len; i++) {
     f04:	fb 01       	movw	r30, r22
     f06:	3e 2f       	mov	r19, r30
     f08:	32 1b       	sub	r19, r18
     f0a:	34 17       	cp	r19, r20
     f0c:	50 f4       	brcc	.+20     	; 0xf22 <_Z19SPI_ReadWrite_BlockPhS_h+0x20>
          SPDR = data[i];
     f0e:	dc 01       	movw	r26, r24
     f10:	3d 91       	ld	r19, X+
     f12:	cd 01       	movw	r24, r26
     f14:	3e bd       	out	0x2e, r19	; 46
          SPI_WAIT();
     f16:	0d b4       	in	r0, 0x2d	; 45
     f18:	07 fe       	sbrs	r0, 7
     f1a:	fd cf       	rjmp	.-6      	; 0xf16 <_Z19SPI_ReadWrite_BlockPhS_h+0x14>
          buffer[i] = SPDR;
     f1c:	3e b5       	in	r19, 0x2e	; 46
     f1e:	31 93       	st	Z+, r19
     f20:	f2 cf       	rjmp	.-28     	; 0xf06 <_Z19SPI_ReadWrite_BlockPhS_h+0x4>
    }
}
     f22:	08 95       	ret

00000f24 <_Z15SPI_Write_BlockPhh>:

void SPI_Write_Block(uint8_t* data, uint8_t len)
{
     f24:	28 2f       	mov	r18, r24
    uint8_t i;
    for (i = 0; i < len; i++) {
     f26:	fc 01       	movw	r30, r24
     f28:	8e 2f       	mov	r24, r30
     f2a:	82 1b       	sub	r24, r18
     f2c:	86 17       	cp	r24, r22
     f2e:	30 f4       	brcc	.+12     	; 0xf3c <_Z15SPI_Write_BlockPhh+0x18>
          SPDR = data[i];
     f30:	81 91       	ld	r24, Z+
     f32:	8e bd       	out	0x2e, r24	; 46
          SPI_WAIT();
     f34:	0d b4       	in	r0, 0x2d	; 45
     f36:	07 fe       	sbrs	r0, 7
     f38:	fd cf       	rjmp	.-6      	; 0xf34 <_Z15SPI_Write_BlockPhh+0x10>
     f3a:	f6 cf       	rjmp	.-20     	; 0xf28 <_Z15SPI_Write_BlockPhh+0x4>
    }
}
     f3c:	08 95       	ret

00000f3e <_Z14SPI_Write_Byteh>:

uint8_t SPI_Write_Byte(uint8_t byte)
{
    SPDR = byte;
     f3e:	8e bd       	out	0x2e, r24	; 46
    SPI_WAIT();
     f40:	0d b4       	in	r0, 0x2d	; 45
     f42:	07 fe       	sbrs	r0, 7
     f44:	fd cf       	rjmp	.-6      	; 0xf40 <_Z14SPI_Write_Byteh+0x2>
    return SPDR;
     f46:	8e b5       	in	r24, 0x2e	; 46
}
     f48:	08 95       	ret

00000f4a <_Z11Roomba_Initv>:
#include "roomba.h"
#include "roomba_sci.h"

void Roomba_Init()
{
	ROOMBA_DD_DDR |= 1<<ROOMBA_DD_PIN;
     f4a:	51 9a       	sbi	0x0a, 1	; 10
	ROOMBA_DD_PORT &= ~(1<<ROOMBA_DD_PIN);
     f4c:	59 98       	cbi	0x0b, 1	; 11
	// At 8 MHz, the AT90 generates a 57600 bps signal with a framing error rate of over 2%, which means that more than
	// 1 out of every 50 bits is wrong.  The fastest bitrate with a low error rate that the Roomba supports is
	// 38400 bps (0.2% error rate, or 1 bit out of every 500).

	// Try 57.6 kbps to start (this is the Roomba's default baud rate after the battery is installed).
	Roomba_UART_Init(UART_115200);
     f4e:	83 e0       	ldi	r24, 0x03	; 3
     f50:	38 d0       	rcall	.+112    	; 0xfc2 <_Z16Roomba_UART_Init9_uart_bps>

	// Try to start the SCI
	Roomba_Send_Byte(START);
     f52:	80 e8       	ldi	r24, 0x80	; 128
     f54:	2f d0       	rcall	.+94     	; 0xfb4 <_Z16Roomba_Send_Byteh>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     f56:	2f ef       	ldi	r18, 0xFF	; 255
     f58:	89 ef       	ldi	r24, 0xF9	; 249
     f5a:	90 e0       	ldi	r25, 0x00	; 0
     f5c:	21 50       	subi	r18, 0x01	; 1
     f5e:	80 40       	sbci	r24, 0x00	; 0
     f60:	90 40       	sbci	r25, 0x00	; 0
     f62:	e1 f7       	brne	.-8      	; 0xf5c <_Z11Roomba_Initv+0x12>
     f64:	00 c0       	rjmp	.+0      	; 0xf66 <_Z11Roomba_Initv+0x1c>
     f66:	00 00       	nop
	_delay_ms(20);

	// change the baud rate to 38400 bps.  Have to wait for 100 ms after changing the baud rate.
	Roomba_Send_Byte(BAUD);
     f68:	81 e8       	ldi	r24, 0x81	; 129
     f6a:	24 d0       	rcall	.+72     	; 0xfb4 <_Z16Roomba_Send_Byteh>
	Roomba_Send_Byte(ROOMBA_19200BPS);
     f6c:	87 e0       	ldi	r24, 0x07	; 7
     f6e:	22 d0       	rcall	.+68     	; 0xfb4 <_Z16Roomba_Send_Byteh>
     f70:	2f ef       	ldi	r18, 0xFF	; 255
     f72:	81 ee       	ldi	r24, 0xE1	; 225
     f74:	94 e0       	ldi	r25, 0x04	; 4
     f76:	21 50       	subi	r18, 0x01	; 1
     f78:	80 40       	sbci	r24, 0x00	; 0
     f7a:	90 40       	sbci	r25, 0x00	; 0
     f7c:	e1 f7       	brne	.-8      	; 0xf76 <_Z11Roomba_Initv+0x2c>
     f7e:	00 c0       	rjmp	.+0      	; 0xf80 <_Z11Roomba_Initv+0x36>
     f80:	00 00       	nop
	_delay_ms(100);		// this delay will not work on old versions of WinAVR (new versions will see reduced but
						// still acceptable resolution; see _delay_ms definition)

	// change the AT90's UART clock
	Roomba_UART_Init(UART_19200);
     f82:	80 e0       	ldi	r24, 0x00	; 0
     f84:	1e d0       	rcall	.+60     	; 0xfc2 <_Z16Roomba_UART_Init9_uart_bps>

	// start the SCI again in case the first start didn't go through.
	Roomba_Send_Byte(START);
     f86:	80 e8       	ldi	r24, 0x80	; 128
     f88:	15 d0       	rcall	.+42     	; 0xfb4 <_Z16Roomba_Send_Byteh>
     f8a:	2f ef       	ldi	r18, 0xFF	; 255
     f8c:	89 ef       	ldi	r24, 0xF9	; 249
     f8e:	90 e0       	ldi	r25, 0x00	; 0
     f90:	21 50       	subi	r18, 0x01	; 1
     f92:	80 40       	sbci	r24, 0x00	; 0
     f94:	90 40       	sbci	r25, 0x00	; 0
     f96:	e1 f7       	brne	.-8      	; 0xf90 <_Z11Roomba_Initv+0x46>
     f98:	00 c0       	rjmp	.+0      	; 0xf9a <_Z11Roomba_Initv+0x50>
     f9a:	00 00       	nop
	_delay_ms(20);

	// finally put the Roomba into safe mode.
	Roomba_Send_Byte(SAFE);
     f9c:	83 e8       	ldi	r24, 0x83	; 131
     f9e:	0a d0       	rcall	.+20     	; 0xfb4 <_Z16Roomba_Send_Byteh>
     fa0:	2f ef       	ldi	r18, 0xFF	; 255
     fa2:	89 ef       	ldi	r24, 0xF9	; 249
     fa4:	90 e0       	ldi	r25, 0x00	; 0
     fa6:	21 50       	subi	r18, 0x01	; 1
     fa8:	80 40       	sbci	r24, 0x00	; 0
     faa:	90 40       	sbci	r25, 0x00	; 0
     fac:	e1 f7       	brne	.-8      	; 0xfa6 <_Z11Roomba_Initv+0x5c>
     fae:	00 c0       	rjmp	.+0      	; 0xfb0 <_Z11Roomba_Initv+0x66>
     fb0:	00 00       	nop
     fb2:	08 95       	ret

00000fb4 <_Z16Roomba_Send_Byteh>:
	return uart_buffer_index;
}

void uart_reset_receive(void)
{
	uart_buffer_index = 0;
     fb4:	90 91 c8 00 	lds	r25, 0x00C8
     fb8:	95 ff       	sbrs	r25, 5
     fba:	fc cf       	rjmp	.-8      	; 0xfb4 <_Z16Roomba_Send_Byteh>
     fbc:	80 93 ce 00 	sts	0x00CE, r24
     fc0:	08 95       	ret

00000fc2 <_Z16Roomba_UART_Init9_uart_bps>:
     fc2:	2f b7       	in	r18, 0x3f	; 63
     fc4:	f8 94       	cli
     fc6:	90 91 65 00 	lds	r25, 0x0065
     fca:	9e 7f       	andi	r25, 0xFE	; 254
     fcc:	90 93 65 00 	sts	0x0065, r25
     fd0:	81 30       	cpi	r24, 0x01	; 1
     fd2:	59 f0       	breq	.+22     	; 0xfea <_Z16Roomba_UART_Init9_uart_bps+0x28>
     fd4:	38 f0       	brcs	.+14     	; 0xfe4 <_Z16Roomba_UART_Init9_uart_bps+0x22>
     fd6:	82 30       	cpi	r24, 0x02	; 2
     fd8:	59 f0       	breq	.+22     	; 0xff0 <_Z16Roomba_UART_Init9_uart_bps+0x2e>
     fda:	83 30       	cpi	r24, 0x03	; 3
     fdc:	49 f4       	brne	.+18     	; 0xff0 <_Z16Roomba_UART_Init9_uart_bps+0x2e>
     fde:	88 e0       	ldi	r24, 0x08	; 8
     fe0:	90 e0       	ldi	r25, 0x00	; 0
     fe2:	08 c0       	rjmp	.+16     	; 0xff4 <_Z16Roomba_UART_Init9_uart_bps+0x32>
     fe4:	83 e3       	ldi	r24, 0x33	; 51
     fe6:	90 e0       	ldi	r25, 0x00	; 0
     fe8:	05 c0       	rjmp	.+10     	; 0xff4 <_Z16Roomba_UART_Init9_uart_bps+0x32>
     fea:	89 e1       	ldi	r24, 0x19	; 25
     fec:	90 e0       	ldi	r25, 0x00	; 0
     fee:	02 c0       	rjmp	.+4      	; 0xff4 <_Z16Roomba_UART_Init9_uart_bps+0x32>
     ff0:	80 e1       	ldi	r24, 0x10	; 16
     ff2:	90 e0       	ldi	r25, 0x00	; 0
     ff4:	90 93 cd 00 	sts	0x00CD, r25
     ff8:	80 93 cc 00 	sts	0x00CC, r24
     ffc:	80 e4       	ldi	r24, 0x40	; 64
     ffe:	80 93 c8 00 	sts	0x00C8, r24
    1002:	88 e0       	ldi	r24, 0x08	; 8
    1004:	80 93 c9 00 	sts	0x00C9, r24
    1008:	86 e0       	ldi	r24, 0x06	; 6
    100a:	80 93 ca 00 	sts	0x00CA, r24
    100e:	80 91 c8 00 	lds	r24, 0x00C8
    1012:	8d 7f       	andi	r24, 0xFD	; 253
    1014:	80 93 c8 00 	sts	0x00C8, r24
    1018:	2f bf       	out	0x3f, r18	; 63
    101a:	08 95       	ret

0000101c <__vector_36>:

/**
 * UART receive byte ISR
 */
ISR(USART1_RX_vect)
{
    101c:	1f 92       	push	r1
    101e:	0f 92       	push	r0
    1020:	0f b6       	in	r0, 0x3f	; 63
    1022:	0f 92       	push	r0
    1024:	11 24       	eor	r1, r1
    1026:	0b b6       	in	r0, 0x3b	; 59
    1028:	0f 92       	push	r0
    102a:	8f 93       	push	r24
    102c:	9f 93       	push	r25
    102e:	ef 93       	push	r30
    1030:	ff 93       	push	r31
    uart_buffer[uart_buffer_index] = UDR1;
    1032:	e0 91 05 0c 	lds	r30, 0x0C05
    1036:	f0 e0       	ldi	r31, 0x00	; 0
    1038:	80 91 ce 00 	lds	r24, 0x00CE
    103c:	ea 5f       	subi	r30, 0xFA	; 250
    103e:	f3 4f       	sbci	r31, 0xF3	; 243
    1040:	80 83       	st	Z, r24
    uart_buffer_index = (uart_buffer_index + 1) % UART_BUFFER_SIZE;
    1042:	80 91 05 0c 	lds	r24, 0x0C05
    1046:	90 e0       	ldi	r25, 0x00	; 0
    1048:	01 96       	adiw	r24, 0x01	; 1
    104a:	8f 71       	andi	r24, 0x1F	; 31
    104c:	99 27       	eor	r25, r25
    104e:	80 93 05 0c 	sts	0x0C05, r24
}
    1052:	ff 91       	pop	r31
    1054:	ef 91       	pop	r30
    1056:	9f 91       	pop	r25
    1058:	8f 91       	pop	r24
    105a:	0f 90       	pop	r0
    105c:	0b be       	out	0x3b, r0	; 59
    105e:	0f 90       	pop	r0
    1060:	0f be       	out	0x3f, r0	; 63
    1062:	0f 90       	pop	r0
    1064:	1f 90       	pop	r1
    1066:	18 95       	reti

00001068 <__vector_23>:
#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)
ISR(TIM0_OVF_vect)
#else
ISR(TIMER0_OVF_vect)
#endif
{
    1068:	1f 92       	push	r1
    106a:	0f 92       	push	r0
    106c:	0f b6       	in	r0, 0x3f	; 63
    106e:	0f 92       	push	r0
    1070:	11 24       	eor	r1, r1
    1072:	2f 93       	push	r18
    1074:	3f 93       	push	r19
    1076:	8f 93       	push	r24
    1078:	9f 93       	push	r25
    107a:	af 93       	push	r26
    107c:	bf 93       	push	r27
	// copy these to local variables so they can be stored in registers
	// (volatile variables must be read from memory on every access)
	unsigned long m = timer0_millis;
    107e:	80 91 2a 0c 	lds	r24, 0x0C2A
    1082:	90 91 2b 0c 	lds	r25, 0x0C2B
    1086:	a0 91 2c 0c 	lds	r26, 0x0C2C
    108a:	b0 91 2d 0c 	lds	r27, 0x0C2D
	unsigned char f = timer0_fract;
    108e:	30 91 2e 0c 	lds	r19, 0x0C2E

	m += MILLIS_INC;
    1092:	01 96       	adiw	r24, 0x01	; 1
    1094:	a1 1d       	adc	r26, r1
    1096:	b1 1d       	adc	r27, r1
	f += FRACT_INC;
    1098:	23 2f       	mov	r18, r19
    109a:	2d 5f       	subi	r18, 0xFD	; 253
	if (f >= FRACT_MAX) {
    109c:	2d 37       	cpi	r18, 0x7D	; 125
    109e:	20 f0       	brcs	.+8      	; 0x10a8 <__vector_23+0x40>
		f -= FRACT_MAX;
    10a0:	2d 57       	subi	r18, 0x7D	; 125
		m += 1;
    10a2:	01 96       	adiw	r24, 0x01	; 1
    10a4:	a1 1d       	adc	r26, r1
    10a6:	b1 1d       	adc	r27, r1
	}

	timer0_fract = f;
    10a8:	20 93 2e 0c 	sts	0x0C2E, r18
	timer0_millis = m;
    10ac:	80 93 2a 0c 	sts	0x0C2A, r24
    10b0:	90 93 2b 0c 	sts	0x0C2B, r25
    10b4:	a0 93 2c 0c 	sts	0x0C2C, r26
    10b8:	b0 93 2d 0c 	sts	0x0C2D, r27
	timer0_overflow_count++;
    10bc:	80 91 26 0c 	lds	r24, 0x0C26
    10c0:	90 91 27 0c 	lds	r25, 0x0C27
    10c4:	a0 91 28 0c 	lds	r26, 0x0C28
    10c8:	b0 91 29 0c 	lds	r27, 0x0C29
    10cc:	01 96       	adiw	r24, 0x01	; 1
    10ce:	a1 1d       	adc	r26, r1
    10d0:	b1 1d       	adc	r27, r1
    10d2:	80 93 26 0c 	sts	0x0C26, r24
    10d6:	90 93 27 0c 	sts	0x0C27, r25
    10da:	a0 93 28 0c 	sts	0x0C28, r26
    10de:	b0 93 29 0c 	sts	0x0C29, r27
}
    10e2:	bf 91       	pop	r27
    10e4:	af 91       	pop	r26
    10e6:	9f 91       	pop	r25
    10e8:	8f 91       	pop	r24
    10ea:	3f 91       	pop	r19
    10ec:	2f 91       	pop	r18
    10ee:	0f 90       	pop	r0
    10f0:	0f be       	out	0x3f, r0	; 63
    10f2:	0f 90       	pop	r0
    10f4:	1f 90       	pop	r1
    10f6:	18 95       	reti

000010f8 <_exit>:
    10f8:	f8 94       	cli

000010fa <__stop_program>:
    10fa:	ff cf       	rjmp	.-2      	; 0x10fa <__stop_program>
